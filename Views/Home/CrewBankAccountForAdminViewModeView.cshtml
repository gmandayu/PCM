@{
    // View
    View = this;

    // Check action result
    if (crewBankAccountForAdminViewModeView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewBankAccountForAdminViewModeView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewBankAccountForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewBankAccountForAdminViewModeView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewBankAccountForAdminViewModeView.ExportOptions.RenderBody()
    @crewBankAccountForAdminViewModeView.OtherOptions.RenderBody()
</div>
}
@crewBankAccountForAdminViewModeView.ShowPageHeader()
@crewBankAccountForAdminViewModeView.ShowMessages()
<main class="view">
<form name="fCrewBankAccountForAdminViewModeview" id="fCrewBankAccountForAdminViewModeview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewBankAccountForAdminViewModeView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewBankAccountForAdminViewModeView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewBankAccountForAdminViewMode: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewBankAccountForAdminViewModeview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewBankAccountForAdminViewModeview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewBankAccountForAdminViewModeView.IsModal)">
<table class="@(crewBankAccountForAdminViewModeView.TableClass)">
@if (crewBankAccountForAdminViewModeView.AccountNumber.Visible) { // crewBankAccountForAdminViewModeView.AccountNumber.Visible (begin)
    <tr id="r_AccountNumber" @Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_AccountNumber"><template id="tpc_CrewBankAccountForAdminViewMode_AccountNumber">@Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.Caption)</template></span></td>
        <td data-name="AccountNumber" @Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_AccountNumber"><span id="el_CrewBankAccountForAdminViewMode_AccountNumber">
<span @Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.AccountNumber.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.Beneficiary.Visible) { // crewBankAccountForAdminViewModeView.Beneficiary.Visible (begin)
    <tr id="r_Beneficiary" @Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_Beneficiary"><template id="tpc_CrewBankAccountForAdminViewMode_Beneficiary">@Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.Caption)</template></span></td>
        <td data-name="Beneficiary" @Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_Beneficiary"><span id="el_CrewBankAccountForAdminViewMode_Beneficiary">
<span @Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.Beneficiary.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.MTCurrencyID.Visible) { // crewBankAccountForAdminViewModeView.MTCurrencyID.Visible (begin)
    <tr id="r_MTCurrencyID" @Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_MTCurrencyID"><template id="tpc_CrewBankAccountForAdminViewMode_MTCurrencyID">@Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.Caption)</template></span></td>
        <td data-name="MTCurrencyID" @Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_MTCurrencyID"><span id="el_CrewBankAccountForAdminViewMode_MTCurrencyID">
<span @Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.MTCurrencyID.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.MainAcc.Visible) { // crewBankAccountForAdminViewModeView.MainAcc.Visible (begin)
    <tr id="r_MainAcc" @Html.Raw(crewBankAccountForAdminViewModeView.MainAcc.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_MainAcc"><template id="tpc_CrewBankAccountForAdminViewMode_MainAcc">@Html.Raw(crewBankAccountForAdminViewModeView.MainAcc.Caption)</template></span></td>
        <td data-name="MainAcc" @Html.Raw(crewBankAccountForAdminViewModeView.MainAcc.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_MainAcc"><span id="el_CrewBankAccountForAdminViewMode_MainAcc">
<span @Html.Raw(crewBankAccountForAdminViewModeView.MainAcc.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_MainAcc_@(crewBankAccountForAdminViewModeView.RowCount)" class="form-check-input" value="@(crewBankAccountForAdminViewModeView.MainAcc.GetViewValue())" disabled checked="@(ConvertToBool(crewBankAccountForAdminViewModeView.MainAcc.CurrentValue))">
    <label class="form-check-label" for="x_MainAcc_@(crewBankAccountForAdminViewModeView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.MainAcc.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.Attachment.Visible) { // crewBankAccountForAdminViewModeView.Attachment.Visible (begin)
    <tr id="r_Attachment" @Html.Raw(crewBankAccountForAdminViewModeView.Attachment.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_Attachment"><template id="tpc_CrewBankAccountForAdminViewMode_Attachment">@Html.Raw(crewBankAccountForAdminViewModeView.Attachment.Caption)</template></span></td>
        <td data-name="Attachment" @Html.Raw(crewBankAccountForAdminViewModeView.Attachment.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_Attachment"><span id="el_CrewBankAccountForAdminViewMode_Attachment">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewBankAccountForAdminViewModeView.Attachment, ConvertToString(crewBankAccountForAdminViewModeView.Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.Attachment.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.CreatedByUserID.Visible) { // crewBankAccountForAdminViewModeView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(crewBankAccountForAdminViewModeView.CreatedByUserID.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_CreatedByUserID"><template id="tpc_CrewBankAccountForAdminViewMode_CreatedByUserID">@Html.Raw(crewBankAccountForAdminViewModeView.CreatedByUserID.Caption)</template></span></td>
        <td data-name="CreatedByUserID" @Html.Raw(crewBankAccountForAdminViewModeView.CreatedByUserID.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_CreatedByUserID"><span id="el_CrewBankAccountForAdminViewMode_CreatedByUserID">
<span @Html.Raw(crewBankAccountForAdminViewModeView.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.CreatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.CreatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.CreatedDateTime.Visible) { // crewBankAccountForAdminViewModeView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(crewBankAccountForAdminViewModeView.CreatedDateTime.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_CreatedDateTime"><template id="tpc_CrewBankAccountForAdminViewMode_CreatedDateTime">@Html.Raw(crewBankAccountForAdminViewModeView.CreatedDateTime.Caption)</template></span></td>
        <td data-name="CreatedDateTime" @Html.Raw(crewBankAccountForAdminViewModeView.CreatedDateTime.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_CreatedDateTime"><span id="el_CrewBankAccountForAdminViewMode_CreatedDateTime">
<span @Html.Raw(crewBankAccountForAdminViewModeView.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.CreatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.CreatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.LastUpdatedByUserID.Visible) { // crewBankAccountForAdminViewModeView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_LastUpdatedByUserID"><template id="tpc_CrewBankAccountForAdminViewMode_LastUpdatedByUserID">@Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedByUserID.Caption)</template></span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedByUserID.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_LastUpdatedByUserID"><span id="el_CrewBankAccountForAdminViewMode_LastUpdatedByUserID">
<span @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.LastUpdatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.LastUpdatedDateTime.Visible) { // crewBankAccountForAdminViewModeView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_LastUpdatedDateTime"><template id="tpc_CrewBankAccountForAdminViewMode_LastUpdatedDateTime">@Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedDateTime.Caption)</template></span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedDateTime.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_LastUpdatedDateTime"><span id="el_CrewBankAccountForAdminViewMode_LastUpdatedDateTime">
<span @Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.LastUpdatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.LastUpdatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.MTCrewID.Visible) { // crewBankAccountForAdminViewModeView.MTCrewID.Visible (begin)
    <tr id="r_MTCrewID" @Html.Raw(crewBankAccountForAdminViewModeView.MTCrewID.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_MTCrewID"><template id="tpc_CrewBankAccountForAdminViewMode_MTCrewID">@Html.Raw(crewBankAccountForAdminViewModeView.MTCrewID.Caption)</template></span></td>
        <td data-name="MTCrewID" @Html.Raw(crewBankAccountForAdminViewModeView.MTCrewID.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_MTCrewID"><span id="el_CrewBankAccountForAdminViewMode_MTCrewID">
<span @Html.Raw(crewBankAccountForAdminViewModeView.MTCrewID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.MTCrewID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.MTCrewID.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.MTBankID.Visible) { // crewBankAccountForAdminViewModeView.MTBankID.Visible (begin)
    <tr id="r_MTBankID" @Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_MTBankID"><template id="tpc_CrewBankAccountForAdminViewMode_MTBankID">@Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.Caption)</template></span></td>
        <td data-name="MTBankID" @Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_MTBankID"><span id="el_CrewBankAccountForAdminViewMode_MTBankID">
<span @Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.MTBankID.Visible (end) *@
@if (crewBankAccountForAdminViewModeView.OtherBankName.Visible) { // crewBankAccountForAdminViewModeView.OtherBankName.Visible (begin)
    <tr id="r_OtherBankName" @Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.RowAttributes)>
        <td class="@(crewBankAccountForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewBankAccountForAdminViewMode_OtherBankName"><template id="tpc_CrewBankAccountForAdminViewMode_OtherBankName">@Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.Caption)</template></span></td>
        <td data-name="OtherBankName" @Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.CellAttributes)>
<template id="tpx_CrewBankAccountForAdminViewMode_OtherBankName"><span id="el_CrewBankAccountForAdminViewMode_OtherBankName">
<span @Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewBankAccountForAdminViewModeView.OtherBankName.Visible (end) *@
</table>
<div id="tpd_CrewBankAccountForAdminViewModeview" class="ew-custom-template"></div>
<template id="tpm_CrewBankAccountForAdminViewModeview">
<div id="ct_crewBankAccountForAdminViewModeView">    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
            </a>     
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
            </a>
        </li>
    </ul> 
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_MTBankID" class="mb-2 row">
                <label for="x_MTBankID" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.MTBankID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.MTBankID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_MTBankID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_OtherBankName" class="mb-2 row">
                <label for="x_OtherBankName" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.OtherBankName.Caption)</label>
                <div>
                    @{
                        string mtBankIDValue = crewBankAccountForAdminViewModeView.MTBankID.GetViewValue();
                        if (string.IsNullOrEmpty(mtBankIDValue))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else if (mtBankIDValue != "Other/Lainnya")
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_OtherBankName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_AccountNumber" class="mb-2 row">
                <label for="x_AccountNumber" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.AccountNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.AccountNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_AccountNumber"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_Beneficiary" class="mb-2 row">
                <label for="x_Beneficiary" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.Beneficiary.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.Beneficiary.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_Beneficiary"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
     <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_MTCurrencyID" class="mb-2 row">
                <label for="x_MTCurrencyID" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.MTCurrencyID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.MTCurrencyID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_MTCurrencyID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_MainAcc" class="mb-2 row">
                <label for="x_MainAcc" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.MainAcc.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.MainAcc.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_MainAcc"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Attachment" class="mb-2 row">
                <label for="x_Attachment" class="col-form-label">@Html.Raw(crewBankAccountForAdminViewModeView.Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewBankAccountForAdminViewModeView.Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewBankAccountForAdminViewMode_Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6"> 
        </div>
    </div>
</div>
</template>
@{ crewBankAccountForAdminViewModeView.CloseRecordset(); }
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewBankAccountForAdminViewModeView.Rows)) };
    ew.applyTemplate("tpd_CrewBankAccountForAdminViewModeview", "tpm_CrewBankAccountForAdminViewModeview", "CrewBankAccountForAdminViewModeview", "@(crewBankAccountForAdminViewModeView.Export)", "CrewBankAccountForAdminViewMode", ew.templateData.rows[0], @(crewBankAccountForAdminViewModeView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewBankAccountForAdminViewModeView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewBankAccountForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // get the current URL without Add or Edit for assigning active class in tabs
    const currentUrlWithoutAddEditListView = currentUrlObject.href.replace(/Add|Edit|List|View/g, "");
    // Create a new URLSearchParams object based on the current URL's search parameters
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    // Extract the value of the crewID query parameter
    const currentlyEditedCrewID = urlQueryParams.get('crewID');
    const crewDocumentID = currentUrlObject.pathname.split('/').pop();

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        const hrefWithoutAddEditListView = href.replace(/Add|Edit|List|View/g, "");
        // Check if the href contains current page's url
        if (currentUrlWithoutAddEditListView.includes(hrefWithoutAddEditListView)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the href contains "Edit" or "Add"
        if (href.includes("ViewModeView")) {
            // Add "/" and the currently edited crew ID to the href
            const newHref = href + "/" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("ViewModeList")) {
            // Add "?crewID=" and the currently edited crew ID to the href
            const newHref = href + "?crewID=" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();
    $('div.btn-toolbar.ew-toolbar').remove();
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                // Parse the data in the response
                const isAdmin = response.data.IsAdmin;
                const employeeStatus = response.data.EmployeeStatus;
                if (currentlyEditedCrewID === null) {
                    if (isAdmin) {
                        // redirect to list page with error message: record not found
                        if (employeeStatus === 'Candidate - Draft') {
                            window.location.replace(`${ew.PATH_BASE}RegistrationEdit/-1`);
                        } else if (employeeStatus === 'Candidate - Submitted') {
                            window.location.replace(`${ew.PATH_BASE}VWaitingForPdeReviewView/-1`);
                        }
                    } else {
                        window.location.replace(`${ew.PATH_BASE}index`);
                    }
                }
                if (employeeStatus === 'Candidate - Draft') {
                    const editButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-edit",
                        name: "btn-edit",
                        href: `${parentUrl}CrewBankAccountForAdminViewModeEdit/${crewDocumentID}?crewID=${currentlyEditedCrewID}`,
                    });
                    const deleteButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Delete" : "Hapus",
                        class: "btn btn-default ew-btn me-auto primary-red-bg primary-white-clr ew-action ew-delete", 
                        id: "btn-delete",
                        name: "btn-delete",
                        href: `${parentUrl}CrewBankAccountForAdminViewModeDelete/${crewDocumentID}`,
                        "data-ew-action": "inline-delete",
                        "data-caption": "Delete",
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}CrewBankAccountForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(editButton);
                    flexDiv.append(deleteButton);
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewBankAccountForAdminViewModeview').append(buttonsDiv);
                } else if (employeeStatus === 'Candidate - Submitted') {
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}CrewBankAccountForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewBankAccountForAdminViewModeview').append(buttonsDiv);
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
});
</script>
}
