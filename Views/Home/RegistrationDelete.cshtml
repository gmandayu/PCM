@{
    // View
    View = this;

    // Check action result
    if (registrationDelete.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!registrationDelete.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(registrationDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Registration: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fRegistrationdelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fRegistrationdelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@registrationDelete.ShowPageHeader()
@registrationDelete.ShowMessages()
<form name="fRegistrationdelete" id="fRegistrationdelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in registrationDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(registrationDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(registrationDelete.TableContainerClass)" style="@(registrationDelete.TableContainerStyle)">
<table class="@(registrationDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (registrationDelete.IndividualCodeNumber.Visible) { // registrationDelete.IndividualCodeNumber.Visible (begin)
        <th class="@Html.Raw(registrationDelete.IndividualCodeNumber.HeaderCellClass)"><span id="elh_Registration_IndividualCodeNumber" class="Registration_IndividualCodeNumber">@Html.Raw(registrationDelete.IndividualCodeNumber.Caption)</span></th>
} @* registrationDelete.IndividualCodeNumber.Visible (end) *@
@if (registrationDelete.FullName.Visible) { // registrationDelete.FullName.Visible (begin)
        <th class="@Html.Raw(registrationDelete.FullName.HeaderCellClass)"><span id="elh_Registration_FullName" class="Registration_FullName">@Html.Raw(registrationDelete.FullName.Caption)</span></th>
} @* registrationDelete.FullName.Visible (end) *@
@if (registrationDelete.RequiredPhoto.Visible) { // registrationDelete.RequiredPhoto.Visible (begin)
        <th class="@Html.Raw(registrationDelete.RequiredPhoto.HeaderCellClass)"><span id="elh_Registration_RequiredPhoto" class="Registration_RequiredPhoto">@Html.Raw(registrationDelete.RequiredPhoto.Caption)</span></th>
} @* registrationDelete.RequiredPhoto.Visible (end) *@
@if (registrationDelete.VisaPhoto.Visible) { // registrationDelete.VisaPhoto.Visible (begin)
        <th class="@Html.Raw(registrationDelete.VisaPhoto.HeaderCellClass)"><span id="elh_Registration_VisaPhoto" class="Registration_VisaPhoto">@Html.Raw(registrationDelete.VisaPhoto.Caption)</span></th>
} @* registrationDelete.VisaPhoto.Visible (end) *@
@if (registrationDelete.Gender.Visible) { // registrationDelete.Gender.Visible (begin)
        <th class="@Html.Raw(registrationDelete.Gender.HeaderCellClass)"><span id="elh_Registration_Gender" class="Registration_Gender">@Html.Raw(registrationDelete.Gender.Caption)</span></th>
} @* registrationDelete.Gender.Visible (end) *@
@if (registrationDelete.RankAppliedFor.Visible) { // registrationDelete.RankAppliedFor.Visible (begin)
        <th class="@Html.Raw(registrationDelete.RankAppliedFor.HeaderCellClass)"><span id="elh_Registration_RankAppliedFor" class="Registration_RankAppliedFor">@Html.Raw(registrationDelete.RankAppliedFor.Caption)</span></th>
} @* registrationDelete.RankAppliedFor.Visible (end) *@
@if (registrationDelete.WillAcceptLowRank.Visible) { // registrationDelete.WillAcceptLowRank.Visible (begin)
        <th class="@Html.Raw(registrationDelete.WillAcceptLowRank.HeaderCellClass)"><span id="elh_Registration_WillAcceptLowRank" class="Registration_WillAcceptLowRank">@Html.Raw(registrationDelete.WillAcceptLowRank.Caption)</span></th>
} @* registrationDelete.WillAcceptLowRank.Visible (end) *@
@if (registrationDelete.AvailableFrom.Visible) { // registrationDelete.AvailableFrom.Visible (begin)
        <th class="@Html.Raw(registrationDelete.AvailableFrom.HeaderCellClass)"><span id="elh_Registration_AvailableFrom" class="Registration_AvailableFrom">@Html.Raw(registrationDelete.AvailableFrom.Caption)</span></th>
} @* registrationDelete.AvailableFrom.Visible (end) *@
@if (registrationDelete.AvailableUntil.Visible) { // registrationDelete.AvailableUntil.Visible (begin)
        <th class="@Html.Raw(registrationDelete.AvailableUntil.HeaderCellClass)"><span id="elh_Registration_AvailableUntil" class="Registration_AvailableUntil">@Html.Raw(registrationDelete.AvailableUntil.Caption)</span></th>
} @* registrationDelete.AvailableUntil.Visible (end) *@
@if (registrationDelete.CreatedBy.Visible) { // registrationDelete.CreatedBy.Visible (begin)
        <th class="@Html.Raw(registrationDelete.CreatedBy.HeaderCellClass)"><span id="elh_Registration_CreatedBy" class="Registration_CreatedBy">@Html.Raw(registrationDelete.CreatedBy.Caption)</span></th>
} @* registrationDelete.CreatedBy.Visible (end) *@
@if (registrationDelete.CreatedDateTime.Visible) { // registrationDelete.CreatedDateTime.Visible (begin)
        <th class="@Html.Raw(registrationDelete.CreatedDateTime.HeaderCellClass)"><span id="elh_Registration_CreatedDateTime" class="Registration_CreatedDateTime">@Html.Raw(registrationDelete.CreatedDateTime.Caption)</span></th>
} @* registrationDelete.CreatedDateTime.Visible (end) *@
@if (registrationDelete.LastUpdatedBy.Visible) { // registrationDelete.LastUpdatedBy.Visible (begin)
        <th class="@Html.Raw(registrationDelete.LastUpdatedBy.HeaderCellClass)"><span id="elh_Registration_LastUpdatedBy" class="Registration_LastUpdatedBy">@Html.Raw(registrationDelete.LastUpdatedBy.Caption)</span></th>
} @* registrationDelete.LastUpdatedBy.Visible (end) *@
@if (registrationDelete.LastUpdatedDateTime.Visible) { // registrationDelete.LastUpdatedDateTime.Visible (begin)
        <th class="@Html.Raw(registrationDelete.LastUpdatedDateTime.HeaderCellClass)"><span id="elh_Registration_LastUpdatedDateTime" class="Registration_LastUpdatedDateTime">@Html.Raw(registrationDelete.LastUpdatedDateTime.Caption)</span></th>
} @* registrationDelete.LastUpdatedDateTime.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ registrationDelete.RecordCount = 0; }
@while (registrationDelete.Recordset != null && await registrationDelete.Recordset.ReadAsync()) { // DN
    registrationDelete.RecordCount++;
    registrationDelete.RowCount++;

    // Set row properties
    registrationDelete.ResetAttributes();
    registrationDelete.RowType = RowType.View; // View

    // Get the field contents
    await registrationDelete.LoadRowValues(registrationDelete.Recordset);

    // Render row
    await registrationDelete.RenderRow();
    <tr @Html.Raw(registrationDelete.RowAttributes)>
@if (registrationDelete.IndividualCodeNumber.Visible) { // registrationDelete.IndividualCodeNumber.Visible (begin)
        <td @Html.Raw(registrationDelete.IndividualCodeNumber.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_IndividualCodeNumber" class="el_Registration_IndividualCodeNumber">
<span @Html.Raw(registrationDelete.IndividualCodeNumber.ViewAttributes)>
@Html.Raw(registrationDelete.IndividualCodeNumber.GetViewValue())</span>
</span></td>
} @* registrationDelete.IndividualCodeNumber.Visible (end) *@
@if (registrationDelete.FullName.Visible) { // registrationDelete.FullName.Visible (begin)
        <td @Html.Raw(registrationDelete.FullName.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_FullName" class="el_Registration_FullName">
<span @Html.Raw(registrationDelete.FullName.ViewAttributes)>
@Html.Raw(registrationDelete.FullName.GetViewValue())</span>
</span></td>
} @* registrationDelete.FullName.Visible (end) *@
@if (registrationDelete.RequiredPhoto.Visible) { // registrationDelete.RequiredPhoto.Visible (begin)
        <td @Html.Raw(registrationDelete.RequiredPhoto.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_RequiredPhoto" class="el_Registration_RequiredPhoto">
<span @Html.Raw(registrationDelete.RequiredPhoto.ViewAttributes)><a href="uploads/@ConvertToString(registrationList.IndividualCodeNumber.GetViewValue())/@ConvertToString(registrationList.RequiredPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
} @* registrationDelete.RequiredPhoto.Visible (end) *@
@if (registrationDelete.VisaPhoto.Visible) { // registrationDelete.VisaPhoto.Visible (begin)
        <td @Html.Raw(registrationDelete.VisaPhoto.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_VisaPhoto" class="el_Registration_VisaPhoto">
<span @Html.Raw(registrationDelete.VisaPhoto.ViewAttributes)><a href="uploads/@ConvertToString(registrationList.IndividualCodeNumber.GetViewValue())/@ConvertToString(registrationList.VisaPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
} @* registrationDelete.VisaPhoto.Visible (end) *@
@if (registrationDelete.Gender.Visible) { // registrationDelete.Gender.Visible (begin)
        <td @Html.Raw(registrationDelete.Gender.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_Gender" class="el_Registration_Gender">
<span @Html.Raw(registrationDelete.Gender.ViewAttributes)>
@Html.Raw(registrationDelete.Gender.GetViewValue())</span>
</span></td>
} @* registrationDelete.Gender.Visible (end) *@
@if (registrationDelete.RankAppliedFor.Visible) { // registrationDelete.RankAppliedFor.Visible (begin)
        <td @Html.Raw(registrationDelete.RankAppliedFor.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_RankAppliedFor" class="el_Registration_RankAppliedFor">
<span @Html.Raw(registrationDelete.RankAppliedFor.ViewAttributes)>
@Html.Raw(registrationDelete.RankAppliedFor.GetViewValue())</span>
</span></td>
} @* registrationDelete.RankAppliedFor.Visible (end) *@
@if (registrationDelete.WillAcceptLowRank.Visible) { // registrationDelete.WillAcceptLowRank.Visible (begin)
        <td @Html.Raw(registrationDelete.WillAcceptLowRank.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_WillAcceptLowRank" class="el_Registration_WillAcceptLowRank">
<span @Html.Raw(registrationDelete.WillAcceptLowRank.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_WillAcceptLowRank_@(registrationDelete.RowCount)" class="form-check-input" value="@(registrationDelete.WillAcceptLowRank.GetViewValue())" disabled checked="@(ConvertToBool(registrationDelete.WillAcceptLowRank.CurrentValue))">
    <label class="form-check-label" for="x_WillAcceptLowRank_@(registrationDelete.RowCount)"></label>
</div></span>
</span></td>
} @* registrationDelete.WillAcceptLowRank.Visible (end) *@
@if (registrationDelete.AvailableFrom.Visible) { // registrationDelete.AvailableFrom.Visible (begin)
        <td @Html.Raw(registrationDelete.AvailableFrom.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_AvailableFrom" class="el_Registration_AvailableFrom">
<span @Html.Raw(registrationDelete.AvailableFrom.ViewAttributes)>
@Html.Raw(registrationDelete.AvailableFrom.GetViewValue())</span>
</span></td>
} @* registrationDelete.AvailableFrom.Visible (end) *@
@if (registrationDelete.AvailableUntil.Visible) { // registrationDelete.AvailableUntil.Visible (begin)
        <td @Html.Raw(registrationDelete.AvailableUntil.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_AvailableUntil" class="el_Registration_AvailableUntil">
<span @Html.Raw(registrationDelete.AvailableUntil.ViewAttributes)>
@Html.Raw(registrationDelete.AvailableUntil.GetViewValue())</span>
</span></td>
} @* registrationDelete.AvailableUntil.Visible (end) *@
@if (registrationDelete.CreatedBy.Visible) { // registrationDelete.CreatedBy.Visible (begin)
        <td @Html.Raw(registrationDelete.CreatedBy.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_CreatedBy" class="el_Registration_CreatedBy">
<span @Html.Raw(registrationDelete.CreatedBy.ViewAttributes)>
@Html.Raw(registrationDelete.CreatedBy.GetViewValue())</span>
</span></td>
} @* registrationDelete.CreatedBy.Visible (end) *@
@if (registrationDelete.CreatedDateTime.Visible) { // registrationDelete.CreatedDateTime.Visible (begin)
        <td @Html.Raw(registrationDelete.CreatedDateTime.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_CreatedDateTime" class="el_Registration_CreatedDateTime">
<span @Html.Raw(registrationDelete.CreatedDateTime.ViewAttributes)>
@Html.Raw(registrationDelete.CreatedDateTime.GetViewValue())</span>
</span></td>
} @* registrationDelete.CreatedDateTime.Visible (end) *@
@if (registrationDelete.LastUpdatedBy.Visible) { // registrationDelete.LastUpdatedBy.Visible (begin)
        <td @Html.Raw(registrationDelete.LastUpdatedBy.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_LastUpdatedBy" class="el_Registration_LastUpdatedBy">
<span @Html.Raw(registrationDelete.LastUpdatedBy.ViewAttributes)>
@Html.Raw(registrationDelete.LastUpdatedBy.GetViewValue())</span>
</span></td>
} @* registrationDelete.LastUpdatedBy.Visible (end) *@
@if (registrationDelete.LastUpdatedDateTime.Visible) { // registrationDelete.LastUpdatedDateTime.Visible (begin)
        <td @Html.Raw(registrationDelete.LastUpdatedDateTime.CellAttributes)>
<span id="el@(registrationDelete.RowCount)_Registration_LastUpdatedDateTime" class="el_Registration_LastUpdatedDateTime">
<span @Html.Raw(registrationDelete.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(registrationDelete.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
} @* registrationDelete.LastUpdatedDateTime.Visible (end) *@
    </tr>
}
@{ registrationDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(registrationDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@registrationDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
