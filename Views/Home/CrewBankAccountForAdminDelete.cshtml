@{
    // View
    View = this;

    // Check action result
    if (crewBankAccountForAdminDelete.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewBankAccountForAdminDelete.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(crewBankAccountForAdminDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewBankAccountForAdmin: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fCrewBankAccountForAdmindelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewBankAccountForAdmindelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@crewBankAccountForAdminDelete.ShowPageHeader()
@crewBankAccountForAdminDelete.ShowMessages()
<form name="fCrewBankAccountForAdmindelete" id="fCrewBankAccountForAdmindelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in crewBankAccountForAdminDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(crewBankAccountForAdminDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(crewBankAccountForAdminDelete.TableContainerClass)" style="@(crewBankAccountForAdminDelete.TableContainerStyle)">
<table class="@(crewBankAccountForAdminDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (crewBankAccountForAdminDelete.AccountNumber.Visible) { // crewBankAccountForAdminDelete.AccountNumber.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.AccountNumber.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_AccountNumber" class="CrewBankAccountForAdmin_AccountNumber">@Html.Raw(crewBankAccountForAdminDelete.AccountNumber.Caption)</span></th>
} @* crewBankAccountForAdminDelete.AccountNumber.Visible (end) *@
@if (crewBankAccountForAdminDelete.Beneficiary.Visible) { // crewBankAccountForAdminDelete.Beneficiary.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.Beneficiary.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_Beneficiary" class="CrewBankAccountForAdmin_Beneficiary">@Html.Raw(crewBankAccountForAdminDelete.Beneficiary.Caption)</span></th>
} @* crewBankAccountForAdminDelete.Beneficiary.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTCurrencyID.Visible) { // crewBankAccountForAdminDelete.MTCurrencyID.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.MTCurrencyID.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_MTCurrencyID" class="CrewBankAccountForAdmin_MTCurrencyID">@Html.Raw(crewBankAccountForAdminDelete.MTCurrencyID.Caption)</span></th>
} @* crewBankAccountForAdminDelete.MTCurrencyID.Visible (end) *@
@if (crewBankAccountForAdminDelete.MainAcc.Visible) { // crewBankAccountForAdminDelete.MainAcc.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.MainAcc.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_MainAcc" class="CrewBankAccountForAdmin_MainAcc">@Html.Raw(crewBankAccountForAdminDelete.MainAcc.Caption)</span></th>
} @* crewBankAccountForAdminDelete.MainAcc.Visible (end) *@
@if (crewBankAccountForAdminDelete.Attachment.Visible) { // crewBankAccountForAdminDelete.Attachment.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.Attachment.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_Attachment" class="CrewBankAccountForAdmin_Attachment">@Html.Raw(crewBankAccountForAdminDelete.Attachment.Caption)</span></th>
} @* crewBankAccountForAdminDelete.Attachment.Visible (end) *@
@if (crewBankAccountForAdminDelete.CreatedByUserID.Visible) { // crewBankAccountForAdminDelete.CreatedByUserID.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.CreatedByUserID.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_CreatedByUserID" class="CrewBankAccountForAdmin_CreatedByUserID">@Html.Raw(crewBankAccountForAdminDelete.CreatedByUserID.Caption)</span></th>
} @* crewBankAccountForAdminDelete.CreatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminDelete.CreatedDateTime.Visible) { // crewBankAccountForAdminDelete.CreatedDateTime.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.CreatedDateTime.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_CreatedDateTime" class="CrewBankAccountForAdmin_CreatedDateTime">@Html.Raw(crewBankAccountForAdminDelete.CreatedDateTime.Caption)</span></th>
} @* crewBankAccountForAdminDelete.CreatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible) { // crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedByUserID.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_LastUpdatedByUserID" class="CrewBankAccountForAdmin_LastUpdatedByUserID">@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedByUserID.Caption)</span></th>
} @* crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible) { // crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedDateTime.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_LastUpdatedDateTime" class="CrewBankAccountForAdmin_LastUpdatedDateTime">@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedDateTime.Caption)</span></th>
} @* crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTCrewID.Visible) { // crewBankAccountForAdminDelete.MTCrewID.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.MTCrewID.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_MTCrewID" class="CrewBankAccountForAdmin_MTCrewID">@Html.Raw(crewBankAccountForAdminDelete.MTCrewID.Caption)</span></th>
} @* crewBankAccountForAdminDelete.MTCrewID.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTBankID.Visible) { // crewBankAccountForAdminDelete.MTBankID.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.MTBankID.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_MTBankID" class="CrewBankAccountForAdmin_MTBankID">@Html.Raw(crewBankAccountForAdminDelete.MTBankID.Caption)</span></th>
} @* crewBankAccountForAdminDelete.MTBankID.Visible (end) *@
@if (crewBankAccountForAdminDelete.OtherBankName.Visible) { // crewBankAccountForAdminDelete.OtherBankName.Visible (begin)
        <th class="@Html.Raw(crewBankAccountForAdminDelete.OtherBankName.HeaderCellClass)"><span id="elh_CrewBankAccountForAdmin_OtherBankName" class="CrewBankAccountForAdmin_OtherBankName">@Html.Raw(crewBankAccountForAdminDelete.OtherBankName.Caption)</span></th>
} @* crewBankAccountForAdminDelete.OtherBankName.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ crewBankAccountForAdminDelete.RecordCount = 0; }
@while (crewBankAccountForAdminDelete.Recordset != null && await crewBankAccountForAdminDelete.Recordset.ReadAsync()) { // DN
    crewBankAccountForAdminDelete.RecordCount++;
    crewBankAccountForAdminDelete.RowCount++;

    // Set row properties
    crewBankAccountForAdminDelete.ResetAttributes();
    crewBankAccountForAdminDelete.RowType = RowType.View; // View

    // Get the field contents
    await crewBankAccountForAdminDelete.LoadRowValues(crewBankAccountForAdminDelete.Recordset);

    // Render row
    await crewBankAccountForAdminDelete.RenderRow();
    <tr @Html.Raw(crewBankAccountForAdminDelete.RowAttributes)>
@if (crewBankAccountForAdminDelete.AccountNumber.Visible) { // crewBankAccountForAdminDelete.AccountNumber.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.AccountNumber.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_AccountNumber" class="el_CrewBankAccountForAdmin_AccountNumber">
<span @Html.Raw(crewBankAccountForAdminDelete.AccountNumber.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.AccountNumber.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.AccountNumber.Visible (end) *@
@if (crewBankAccountForAdminDelete.Beneficiary.Visible) { // crewBankAccountForAdminDelete.Beneficiary.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.Beneficiary.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_Beneficiary" class="el_CrewBankAccountForAdmin_Beneficiary">
<span @Html.Raw(crewBankAccountForAdminDelete.Beneficiary.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.Beneficiary.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.Beneficiary.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTCurrencyID.Visible) { // crewBankAccountForAdminDelete.MTCurrencyID.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.MTCurrencyID.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_MTCurrencyID" class="el_CrewBankAccountForAdmin_MTCurrencyID">
<span @Html.Raw(crewBankAccountForAdminDelete.MTCurrencyID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.MTCurrencyID.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.MTCurrencyID.Visible (end) *@
@if (crewBankAccountForAdminDelete.MainAcc.Visible) { // crewBankAccountForAdminDelete.MainAcc.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.MainAcc.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_MainAcc" class="el_CrewBankAccountForAdmin_MainAcc">
<span @Html.Raw(crewBankAccountForAdminDelete.MainAcc.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_MainAcc_@(crewBankAccountForAdminDelete.RowCount)" class="form-check-input" value="@(crewBankAccountForAdminDelete.MainAcc.GetViewValue())" disabled checked="@(ConvertToBool(crewBankAccountForAdminDelete.MainAcc.CurrentValue))">
    <label class="form-check-label" for="x_MainAcc_@(crewBankAccountForAdminDelete.RowCount)"></label>
</div></span>
</span></td>
} @* crewBankAccountForAdminDelete.MainAcc.Visible (end) *@
@if (crewBankAccountForAdminDelete.Attachment.Visible) { // crewBankAccountForAdminDelete.Attachment.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.Attachment.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_Attachment" class="el_CrewBankAccountForAdmin_Attachment">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewBankAccountForAdminDelete.Attachment, ConvertToString(crewBankAccountForAdminDelete.Attachment.GetViewValue()), false))
</span>
</span></td>
} @* crewBankAccountForAdminDelete.Attachment.Visible (end) *@
@if (crewBankAccountForAdminDelete.CreatedByUserID.Visible) { // crewBankAccountForAdminDelete.CreatedByUserID.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.CreatedByUserID.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_CreatedByUserID" class="el_CrewBankAccountForAdmin_CreatedByUserID">
<span @Html.Raw(crewBankAccountForAdminDelete.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.CreatedByUserID.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.CreatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminDelete.CreatedDateTime.Visible) { // crewBankAccountForAdminDelete.CreatedDateTime.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.CreatedDateTime.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_CreatedDateTime" class="el_CrewBankAccountForAdmin_CreatedDateTime">
<span @Html.Raw(crewBankAccountForAdminDelete.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.CreatedDateTime.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.CreatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible) { // crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.LastUpdatedByUserID.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_LastUpdatedByUserID" class="el_CrewBankAccountForAdmin_LastUpdatedByUserID">
<span @Html.Raw(crewBankAccountForAdminDelete.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedByUserID.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.LastUpdatedByUserID.Visible (end) *@
@if (crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible) { // crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.LastUpdatedDateTime.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_LastUpdatedDateTime" class="el_CrewBankAccountForAdmin_LastUpdatedDateTime">
<span @Html.Raw(crewBankAccountForAdminDelete.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.LastUpdatedDateTime.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTCrewID.Visible) { // crewBankAccountForAdminDelete.MTCrewID.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.MTCrewID.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_MTCrewID" class="el_CrewBankAccountForAdmin_MTCrewID">
<span @Html.Raw(crewBankAccountForAdminDelete.MTCrewID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.MTCrewID.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.MTCrewID.Visible (end) *@
@if (crewBankAccountForAdminDelete.MTBankID.Visible) { // crewBankAccountForAdminDelete.MTBankID.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.MTBankID.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_MTBankID" class="el_CrewBankAccountForAdmin_MTBankID">
<span @Html.Raw(crewBankAccountForAdminDelete.MTBankID.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.MTBankID.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.MTBankID.Visible (end) *@
@if (crewBankAccountForAdminDelete.OtherBankName.Visible) { // crewBankAccountForAdminDelete.OtherBankName.Visible (begin)
        <td @Html.Raw(crewBankAccountForAdminDelete.OtherBankName.CellAttributes)>
<span id="el@(crewBankAccountForAdminDelete.RowCount)_CrewBankAccountForAdmin_OtherBankName" class="el_CrewBankAccountForAdmin_OtherBankName">
<span @Html.Raw(crewBankAccountForAdminDelete.OtherBankName.ViewAttributes)>
@Html.Raw(crewBankAccountForAdminDelete.OtherBankName.GetViewValue())</span>
</span></td>
} @* crewBankAccountForAdminDelete.OtherBankName.Visible (end) *@
    </tr>
}
@{ crewBankAccountForAdminDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(crewBankAccountForAdminDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@crewBankAccountForAdminDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
