@{
    // View
    View = this;

    // Check action result
    if (mtRecruitmentStatusView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtRecruitmentStatusView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!mtRecruitmentStatusView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!mtRecruitmentStatusView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @mtRecruitmentStatusView.ExportOptions.RenderBody()
    @mtRecruitmentStatusView.OtherOptions.RenderBody()
</div>
}
@mtRecruitmentStatusView.ShowPageHeader()
@mtRecruitmentStatusView.ShowMessages()
<main class="view">
<form name="fMTRecruitmentStatusview" id="fMTRecruitmentStatusview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!mtRecruitmentStatusView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(mtRecruitmentStatusView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTRecruitmentStatus: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fMTRecruitmentStatusview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTRecruitmentStatusview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(mtRecruitmentStatusView.IsModal)">
<table class="@(mtRecruitmentStatusView.TableClass)">
@if (mtRecruitmentStatusView.ID.Visible) { // mtRecruitmentStatusView.ID.Visible (begin)
    <tr id="r_ID" @Html.Raw(mtRecruitmentStatusView.ID.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_ID">@Html.Raw(mtRecruitmentStatusView.ID.Caption)</span></td>
        <td data-name="ID" @Html.Raw(mtRecruitmentStatusView.ID.CellAttributes)>
<span id="el_MTRecruitmentStatus_ID">
<span @Html.Raw(mtRecruitmentStatusView.ID.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.ID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.ID.Visible (end) *@
@if (mtRecruitmentStatusView.Code.Visible) { // mtRecruitmentStatusView.Code.Visible (begin)
    <tr id="r_Code" @Html.Raw(mtRecruitmentStatusView.Code.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_Code">@Html.Raw(mtRecruitmentStatusView.Code.Caption)</span></td>
        <td data-name="Code" @Html.Raw(mtRecruitmentStatusView.Code.CellAttributes)>
<span id="el_MTRecruitmentStatus_Code">
<span @Html.Raw(mtRecruitmentStatusView.Code.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.Code.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.Code.Visible (end) *@
@if (mtRecruitmentStatusView.Description.Visible) { // mtRecruitmentStatusView.Description.Visible (begin)
    <tr id="r_Description" @Html.Raw(mtRecruitmentStatusView.Description.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_Description">@Html.Raw(mtRecruitmentStatusView.Description.Caption)</span></td>
        <td data-name="Description" @Html.Raw(mtRecruitmentStatusView.Description.CellAttributes)>
<span id="el_MTRecruitmentStatus_Description">
<span @Html.Raw(mtRecruitmentStatusView.Description.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.Description.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.Description.Visible (end) *@
@if (mtRecruitmentStatusView.CreatedByUserID.Visible) { // mtRecruitmentStatusView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(mtRecruitmentStatusView.CreatedByUserID.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_CreatedByUserID">@Html.Raw(mtRecruitmentStatusView.CreatedByUserID.Caption)</span></td>
        <td data-name="CreatedByUserID" @Html.Raw(mtRecruitmentStatusView.CreatedByUserID.CellAttributes)>
<span id="el_MTRecruitmentStatus_CreatedByUserID">
<span @Html.Raw(mtRecruitmentStatusView.CreatedByUserID.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.CreatedByUserID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.CreatedByUserID.Visible (end) *@
@if (mtRecruitmentStatusView.CreatedDateTime.Visible) { // mtRecruitmentStatusView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(mtRecruitmentStatusView.CreatedDateTime.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_CreatedDateTime">@Html.Raw(mtRecruitmentStatusView.CreatedDateTime.Caption)</span></td>
        <td data-name="CreatedDateTime" @Html.Raw(mtRecruitmentStatusView.CreatedDateTime.CellAttributes)>
<span id="el_MTRecruitmentStatus_CreatedDateTime">
<span @Html.Raw(mtRecruitmentStatusView.CreatedDateTime.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.CreatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.CreatedDateTime.Visible (end) *@
@if (mtRecruitmentStatusView.LastUpdatedByUserID.Visible) { // mtRecruitmentStatusView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(mtRecruitmentStatusView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_LastUpdatedByUserID">@Html.Raw(mtRecruitmentStatusView.LastUpdatedByUserID.Caption)</span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(mtRecruitmentStatusView.LastUpdatedByUserID.CellAttributes)>
<span id="el_MTRecruitmentStatus_LastUpdatedByUserID">
<span @Html.Raw(mtRecruitmentStatusView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.LastUpdatedByUserID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.LastUpdatedByUserID.Visible (end) *@
@if (mtRecruitmentStatusView.LastUpdatedDateTime.Visible) { // mtRecruitmentStatusView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(mtRecruitmentStatusView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(mtRecruitmentStatusView.TableLeftColumnClass)"><span id="elh_MTRecruitmentStatus_LastUpdatedDateTime">@Html.Raw(mtRecruitmentStatusView.LastUpdatedDateTime.Caption)</span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(mtRecruitmentStatusView.LastUpdatedDateTime.CellAttributes)>
<span id="el_MTRecruitmentStatus_LastUpdatedDateTime">
<span @Html.Raw(mtRecruitmentStatusView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(mtRecruitmentStatusView.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* mtRecruitmentStatusView.LastUpdatedDateTime.Visible (end) *@
</table>
@{ mtRecruitmentStatusView.CloseRecordset(); }
</form>
</main>
@mtRecruitmentStatusView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!mtRecruitmentStatusView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
