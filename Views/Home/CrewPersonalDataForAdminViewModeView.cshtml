@{
    // View
    View = this;

    // Check action result
    if (crewPersonalDataForAdminViewModeView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewPersonalDataForAdminViewModeView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewPersonalDataForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewPersonalDataForAdminViewModeView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewPersonalDataForAdminViewModeView.ExportOptions.RenderBody()
    @crewPersonalDataForAdminViewModeView.OtherOptions.RenderBody()
</div>
}
@crewPersonalDataForAdminViewModeView.ShowPageHeader()
@crewPersonalDataForAdminViewModeView.ShowMessages()
<main class="view">
<form name="fCrewPersonalDataForAdminViewModeview" id="fCrewPersonalDataForAdminViewModeview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewPersonalDataForAdminViewModeView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewPersonalDataForAdminViewModeView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewPersonalDataForAdminViewMode: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewPersonalDataForAdminViewModeview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewPersonalDataForAdminViewModeview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewPersonalDataForAdminViewModeView.IsModal)">
<table class="@(crewPersonalDataForAdminViewModeView.TableClass)">
@if (crewPersonalDataForAdminViewModeView.IndividualCodeNumber.Visible) { // crewPersonalDataForAdminViewModeView.IndividualCodeNumber.Visible (begin)
    <tr id="r_IndividualCodeNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_IndividualCodeNumber"><template id="tpc_CrewPersonalDataForAdminViewMode_IndividualCodeNumber">@Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.Caption)</template></span></td>
        <td data-name="IndividualCodeNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_IndividualCodeNumber"><span id="el_CrewPersonalDataForAdminViewMode_IndividualCodeNumber">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.IndividualCodeNumber.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.FullName.Visible) { // crewPersonalDataForAdminViewModeView.FullName.Visible (begin)
    <tr id="r_FullName" @Html.Raw(crewPersonalDataForAdminViewModeView.FullName.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_FullName"><template id="tpc_CrewPersonalDataForAdminViewMode_FullName">@Html.Raw(crewPersonalDataForAdminViewModeView.FullName.Caption)</template></span></td>
        <td data-name="FullName" @Html.Raw(crewPersonalDataForAdminViewModeView.FullName.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_FullName"><span id="el_CrewPersonalDataForAdminViewMode_FullName">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.FullName.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.FullName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.FullName.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Nationality_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.Nationality_CountryID.Visible (begin)
    <tr id="r_Nationality_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Nationality_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_Nationality_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.Caption)</template></span></td>
        <td data-name="Nationality_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Nationality_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_Nationality_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Nationality_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.Visible (begin)
    <tr id="r_CountryOfOrigin_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_CountryOfOrigin_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_CountryOfOrigin_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.Caption)</template></span></td>
        <td data-name="CountryOfOrigin_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_CountryOfOrigin_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_CountryOfOrigin_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.DateOfBirth.Visible) { // crewPersonalDataForAdminViewModeView.DateOfBirth.Visible (begin)
    <tr id="r_DateOfBirth" @Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_DateOfBirth"><template id="tpc_CrewPersonalDataForAdminViewMode_DateOfBirth">@Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.Caption)</template></span></td>
        <td data-name="DateOfBirth" @Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_DateOfBirth"><span id="el_CrewPersonalDataForAdminViewMode_DateOfBirth">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.DateOfBirth.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.CityOfBirth.Visible) { // crewPersonalDataForAdminViewModeView.CityOfBirth.Visible (begin)
    <tr id="r_CityOfBirth" @Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_CityOfBirth"><template id="tpc_CrewPersonalDataForAdminViewMode_CityOfBirth">@Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.Caption)</template></span></td>
        <td data-name="CityOfBirth" @Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_CityOfBirth"><span id="el_CrewPersonalDataForAdminViewMode_CityOfBirth">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.CityOfBirth.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Gender.Visible) { // crewPersonalDataForAdminViewModeView.Gender.Visible (begin)
    <tr id="r_Gender" @Html.Raw(crewPersonalDataForAdminViewModeView.Gender.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Gender"><template id="tpc_CrewPersonalDataForAdminViewMode_Gender">@Html.Raw(crewPersonalDataForAdminViewModeView.Gender.Caption)</template></span></td>
        <td data-name="Gender" @Html.Raw(crewPersonalDataForAdminViewModeView.Gender.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Gender"><span id="el_CrewPersonalDataForAdminViewMode_Gender">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Gender.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Gender.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Gender.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.MaritalStatus.Visible) { // crewPersonalDataForAdminViewModeView.MaritalStatus.Visible (begin)
    <tr id="r_MaritalStatus" @Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_MaritalStatus"><template id="tpc_CrewPersonalDataForAdminViewMode_MaritalStatus">@Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.Caption)</template></span></td>
        <td data-name="MaritalStatus" @Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_MaritalStatus"><span id="el_CrewPersonalDataForAdminViewMode_MaritalStatus">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.MaritalStatus.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.ReligionID.Visible) { // crewPersonalDataForAdminViewModeView.ReligionID.Visible (begin)
    <tr id="r_ReligionID" @Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_ReligionID"><template id="tpc_CrewPersonalDataForAdminViewMode_ReligionID">@Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.Caption)</template></span></td>
        <td data-name="ReligionID" @Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_ReligionID"><span id="el_CrewPersonalDataForAdminViewMode_ReligionID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.ReligionID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.Visible) { // crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.Visible (begin)
    <tr id="r_RankAppliedFor_RankID" @Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_RankAppliedFor_RankID"><template id="tpc_CrewPersonalDataForAdminViewMode_RankAppliedFor_RankID">@Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.Caption)</template></span></td>
        <td data-name="RankAppliedFor_RankID" @Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_RankAppliedFor_RankID"><span id="el_CrewPersonalDataForAdminViewMode_RankAppliedFor_RankID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.WillAcceptLowRank.Visible) { // crewPersonalDataForAdminViewModeView.WillAcceptLowRank.Visible (begin)
    <tr id="r_WillAcceptLowRank" @Html.Raw(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_WillAcceptLowRank"><template id="tpc_CrewPersonalDataForAdminViewMode_WillAcceptLowRank">@Html.Raw(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.Caption)</template></span></td>
        <td data-name="WillAcceptLowRank" @Html.Raw(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_WillAcceptLowRank"><span id="el_CrewPersonalDataForAdminViewMode_WillAcceptLowRank">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_WillAcceptLowRank_@(crewPersonalDataForAdminViewModeView.RowCount)" class="form-check-input" value="@(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.GetViewValue())" disabled checked="@(ConvertToBool(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.CurrentValue))">
    <label class="form-check-label" for="x_WillAcceptLowRank_@(crewPersonalDataForAdminViewModeView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.WillAcceptLowRank.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AvailableFrom.Visible) { // crewPersonalDataForAdminViewModeView.AvailableFrom.Visible (begin)
    <tr id="r_AvailableFrom" @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AvailableFrom"><template id="tpc_CrewPersonalDataForAdminViewMode_AvailableFrom">@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.Caption)</template></span></td>
        <td data-name="AvailableFrom" @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AvailableFrom"><span id="el_CrewPersonalDataForAdminViewMode_AvailableFrom">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AvailableFrom.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AvailableUntil.Visible) { // crewPersonalDataForAdminViewModeView.AvailableUntil.Visible (begin)
    <tr id="r_AvailableUntil" @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AvailableUntil"><template id="tpc_CrewPersonalDataForAdminViewMode_AvailableUntil">@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.Caption)</template></span></td>
        <td data-name="AvailableUntil" @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AvailableUntil"><span id="el_CrewPersonalDataForAdminViewMode_AvailableUntil">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AvailableUntil.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.Visible (begin)
    <tr id="r_PrimaryAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressDetail"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressDetail">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.Caption)</template></span></td>
        <td data-name="PrimaryAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressDetail"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressDetail">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressCity.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressCity.Visible (begin)
    <tr id="r_PrimaryAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressCity"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressCity">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.Caption)</template></span></td>
        <td data-name="PrimaryAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressCity"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressCity">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.Visible (begin)
    <tr id="r_PrimaryAddressNearestAirport" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressNearestAirport"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressNearestAirport">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.Caption)</template></span></td>
        <td data-name="PrimaryAddressNearestAirport" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressNearestAirport"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressNearestAirport">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressState.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressState.Visible (begin)
    <tr id="r_PrimaryAddressState" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressState"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressState">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.Caption)</template></span></td>
        <td data-name="PrimaryAddressState" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressState"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressState">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressState.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.Visible (begin)
    <tr id="r_PrimaryAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressPostCode"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressPostCode">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.Caption)</template></span></td>
        <td data-name="PrimaryAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressPostCode"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressPostCode">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.Visible (begin)
    <tr id="r_PrimaryAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressCountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressCountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.Caption)</template></span></td>
        <td data-name="PrimaryAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressCountryID"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressCountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.Visible (begin)
    <tr id="r_PrimaryAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTel"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTel">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.Caption)</template></span></td>
        <td data-name="PrimaryAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTel"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTel">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.Visible (begin)
    <tr id="r_AlternativeAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressDetail"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressDetail">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.Caption)</template></span></td>
        <td data-name="AlternativeAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressDetail"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressDetail">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressState.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressState.Visible (begin)
    <tr id="r_AlternativeAddressState" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressState"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressState">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.Caption)</template></span></td>
        <td data-name="AlternativeAddressState" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressState"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressState">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressState.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressCity.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressCity.Visible (begin)
    <tr id="r_AlternativeAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressCity"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressCity">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.Caption)</template></span></td>
        <td data-name="AlternativeAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressCity"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressCity">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.Visible (begin)
    <tr id="r_AlternativeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTel"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTel">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.Caption)</template></span></td>
        <td data-name="AlternativeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTel"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTel">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.Visible (begin)
    <tr id="r_AlternativeAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressPostCode"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressPostCode">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.Caption)</template></span></td>
        <td data-name="AlternativeAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressPostCode"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressPostCode">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.Visible (begin)
    <tr id="r_AlternativeAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressCountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressCountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.Caption)</template></span></td>
        <td data-name="AlternativeAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressCountryID"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressCountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.MobileNumber.Visible) { // crewPersonalDataForAdminViewModeView.MobileNumber.Visible (begin)
    <tr id="r_MobileNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_MobileNumber"><template id="tpc_CrewPersonalDataForAdminViewMode_MobileNumber">@Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.Caption)</template></span></td>
        <td data-name="MobileNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_MobileNumber"><span id="el_CrewPersonalDataForAdminViewMode_MobileNumber">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.MobileNumber.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView._Email.Visible) { // crewPersonalDataForAdminViewModeView._Email.Visible (begin)
    <tr id="r__Email" @Html.Raw(crewPersonalDataForAdminViewModeView._Email.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode__Email"><template id="tpc_CrewPersonalDataForAdminViewMode__Email">@Html.Raw(crewPersonalDataForAdminViewModeView._Email.Caption)</template></span></td>
        <td data-name="_Email" @Html.Raw(crewPersonalDataForAdminViewModeView._Email.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode__Email"><span id="el_CrewPersonalDataForAdminViewMode__Email">
<span @Html.Raw(crewPersonalDataForAdminViewModeView._Email.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView._Email.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView._Email.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.EmployeeStatus.Visible) { // crewPersonalDataForAdminViewModeView.EmployeeStatus.Visible (begin)
    <tr id="r_EmployeeStatus" @Html.Raw(crewPersonalDataForAdminViewModeView.EmployeeStatus.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_EmployeeStatus"><template id="tpc_CrewPersonalDataForAdminViewMode_EmployeeStatus">@Html.Raw(crewPersonalDataForAdminViewModeView.EmployeeStatus.Caption)</template></span></td>
        <td data-name="EmployeeStatus" @Html.Raw(crewPersonalDataForAdminViewModeView.EmployeeStatus.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_EmployeeStatus"><span id="el_CrewPersonalDataForAdminViewMode_EmployeeStatus">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.EmployeeStatus.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.EmployeeStatus.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.EmployeeStatus.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.Visible) { // crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.Visible (begin)
    <tr id="r_FormSubmittedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_FormSubmittedDateTime"><template id="tpc_CrewPersonalDataForAdminViewMode_FormSubmittedDateTime">@Html.Raw(crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.Caption)</template></span></td>
        <td data-name="FormSubmittedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_FormSubmittedDateTime"><span id="el_CrewPersonalDataForAdminViewMode_FormSubmittedDateTime">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.FormSubmittedDateTime.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.CreatedByUserID.Visible) { // crewPersonalDataForAdminViewModeView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedByUserID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_CreatedByUserID"><template id="tpc_CrewPersonalDataForAdminViewMode_CreatedByUserID">@Html.Raw(crewPersonalDataForAdminViewModeView.CreatedByUserID.Caption)</template></span></td>
        <td data-name="CreatedByUserID" @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedByUserID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_CreatedByUserID"><span id="el_CrewPersonalDataForAdminViewMode_CreatedByUserID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.CreatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.CreatedByUserID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.CreatedDateTime.Visible) { // crewPersonalDataForAdminViewModeView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedDateTime.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_CreatedDateTime"><template id="tpc_CrewPersonalDataForAdminViewMode_CreatedDateTime">@Html.Raw(crewPersonalDataForAdminViewModeView.CreatedDateTime.Caption)</template></span></td>
        <td data-name="CreatedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedDateTime.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_CreatedDateTime"><span id="el_CrewPersonalDataForAdminViewMode_CreatedDateTime">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.CreatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.CreatedDateTime.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.Visible) { // crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_LastUpdatedByUserID"><template id="tpc_CrewPersonalDataForAdminViewMode_LastUpdatedByUserID">@Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.Caption)</template></span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_LastUpdatedByUserID"><span id="el_CrewPersonalDataForAdminViewMode_LastUpdatedByUserID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.LastUpdatedByUserID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.Visible) { // crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_LastUpdatedDateTime"><template id="tpc_CrewPersonalDataForAdminViewMode_LastUpdatedDateTime">@Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.Caption)</template></span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_LastUpdatedDateTime"><span id="el_CrewPersonalDataForAdminViewMode_LastUpdatedDateTime">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.LastUpdatedDateTime.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.SocialSecurityNumber.Visible) { // crewPersonalDataForAdminViewModeView.SocialSecurityNumber.Visible (begin)
    <tr id="r_SocialSecurityNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_SocialSecurityNumber"><template id="tpc_CrewPersonalDataForAdminViewMode_SocialSecurityNumber">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.Caption)</template></span></td>
        <td data-name="SocialSecurityNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityNumber"><span id="el_CrewPersonalDataForAdminViewMode_SocialSecurityNumber">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.SocialSecurityNumber.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.Visible) { // crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.Visible (begin)
    <tr id="r_SocialSecurityIssuingCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_SocialSecurityIssuingCountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_SocialSecurityIssuingCountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.Caption)</template></span></td>
        <td data-name="SocialSecurityIssuingCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityIssuingCountryID"><span id="el_CrewPersonalDataForAdminViewMode_SocialSecurityIssuingCountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.SocialSecurityImage.Visible) { // crewPersonalDataForAdminViewModeView.SocialSecurityImage.Visible (begin)
    <tr id="r_SocialSecurityImage" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityImage.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_SocialSecurityImage"><template id="tpc_CrewPersonalDataForAdminViewMode_SocialSecurityImage">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityImage.Caption)</template></span></td>
        <td data-name="SocialSecurityImage" @Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityImage.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityImage"><span id="el_CrewPersonalDataForAdminViewMode_SocialSecurityImage">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewPersonalDataForAdminViewModeView.SocialSecurityImage, ConvertToString(crewPersonalDataForAdminViewModeView.SocialSecurityImage.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.SocialSecurityImage.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PersonalTaxNumber.Visible) { // crewPersonalDataForAdminViewModeView.PersonalTaxNumber.Visible (begin)
    <tr id="r_PersonalTaxNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PersonalTaxNumber"><template id="tpc_CrewPersonalDataForAdminViewMode_PersonalTaxNumber">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.Caption)</template></span></td>
        <td data-name="PersonalTaxNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxNumber"><span id="el_CrewPersonalDataForAdminViewMode_PersonalTaxNumber">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PersonalTaxNumber.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.Visible) { // crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.Visible (begin)
    <tr id="r_PersonalTaxIssuingCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PersonalTaxIssuingCountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_PersonalTaxIssuingCountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.Caption)</template></span></td>
        <td data-name="PersonalTaxIssuingCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxIssuingCountryID"><span id="el_CrewPersonalDataForAdminViewMode_PersonalTaxIssuingCountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PersonalTaxImage.Visible) { // crewPersonalDataForAdminViewModeView.PersonalTaxImage.Visible (begin)
    <tr id="r_PersonalTaxImage" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxImage.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PersonalTaxImage"><template id="tpc_CrewPersonalDataForAdminViewMode_PersonalTaxImage">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxImage.Caption)</template></span></td>
        <td data-name="PersonalTaxImage" @Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxImage.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxImage"><span id="el_CrewPersonalDataForAdminViewMode_PersonalTaxImage">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewPersonalDataForAdminViewModeView.PersonalTaxImage, ConvertToString(crewPersonalDataForAdminViewModeView.PersonalTaxImage.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PersonalTaxImage.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.BloodType.Visible) { // crewPersonalDataForAdminViewModeView.BloodType.Visible (begin)
    <tr id="r_BloodType" @Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_BloodType"><template id="tpc_CrewPersonalDataForAdminViewMode_BloodType">@Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.Caption)</template></span></td>
        <td data-name="BloodType" @Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_BloodType"><span id="el_CrewPersonalDataForAdminViewMode_BloodType">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.BloodType.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.RequiredPhoto.Visible) { // crewPersonalDataForAdminViewModeView.RequiredPhoto.Visible (begin)
    <tr id="r_RequiredPhoto" @Html.Raw(crewPersonalDataForAdminViewModeView.RequiredPhoto.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_RequiredPhoto"><template id="tpc_CrewPersonalDataForAdminViewMode_RequiredPhoto">@Html.Raw(crewPersonalDataForAdminViewModeView.RequiredPhoto.Caption)</template></span></td>
        <td data-name="RequiredPhoto" @Html.Raw(crewPersonalDataForAdminViewModeView.RequiredPhoto.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_RequiredPhoto"><span id="el_CrewPersonalDataForAdminViewMode_RequiredPhoto">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewPersonalDataForAdminViewModeView.RequiredPhoto, ConvertToString(crewPersonalDataForAdminViewModeView.RequiredPhoto.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.RequiredPhoto.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.VisaPhoto.Visible) { // crewPersonalDataForAdminViewModeView.VisaPhoto.Visible (begin)
    <tr id="r_VisaPhoto" @Html.Raw(crewPersonalDataForAdminViewModeView.VisaPhoto.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_VisaPhoto"><template id="tpc_CrewPersonalDataForAdminViewMode_VisaPhoto">@Html.Raw(crewPersonalDataForAdminViewModeView.VisaPhoto.Caption)</template></span></td>
        <td data-name="VisaPhoto" @Html.Raw(crewPersonalDataForAdminViewModeView.VisaPhoto.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_VisaPhoto"><span id="el_CrewPersonalDataForAdminViewMode_VisaPhoto">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewPersonalDataForAdminViewModeView.VisaPhoto, ConvertToString(crewPersonalDataForAdminViewModeView.VisaPhoto.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.VisaPhoto.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Status.Visible) { // crewPersonalDataForAdminViewModeView.Status.Visible (begin)
    <tr id="r_Status" @Html.Raw(crewPersonalDataForAdminViewModeView.Status.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Status"><template id="tpc_CrewPersonalDataForAdminViewMode_Status">@Html.Raw(crewPersonalDataForAdminViewModeView.Status.Caption)</template></span></td>
        <td data-name="Status" @Html.Raw(crewPersonalDataForAdminViewModeView.Status.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Status"><span id="el_CrewPersonalDataForAdminViewMode_Status">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Status.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Status.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Status.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Reason.Visible) { // crewPersonalDataForAdminViewModeView.Reason.Visible (begin)
    <tr id="r_Reason" @Html.Raw(crewPersonalDataForAdminViewModeView.Reason.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Reason"><template id="tpc_CrewPersonalDataForAdminViewMode_Reason">@Html.Raw(crewPersonalDataForAdminViewModeView.Reason.Caption)</template></span></td>
        <td data-name="Reason" @Html.Raw(crewPersonalDataForAdminViewModeView.Reason.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Reason"><span id="el_CrewPersonalDataForAdminViewMode_Reason">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Reason.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Reason.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Reason.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Weight.Visible) { // crewPersonalDataForAdminViewModeView.Weight.Visible (begin)
    <tr id="r_Weight" @Html.Raw(crewPersonalDataForAdminViewModeView.Weight.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Weight"><template id="tpc_CrewPersonalDataForAdminViewMode_Weight">@Html.Raw(crewPersonalDataForAdminViewModeView.Weight.Caption)</template></span></td>
        <td data-name="Weight" @Html.Raw(crewPersonalDataForAdminViewModeView.Weight.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Weight"><span id="el_CrewPersonalDataForAdminViewMode_Weight">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Weight.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Weight.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Weight.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.Height.Visible) { // crewPersonalDataForAdminViewModeView.Height.Visible (begin)
    <tr id="r_Height" @Html.Raw(crewPersonalDataForAdminViewModeView.Height.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_Height"><template id="tpc_CrewPersonalDataForAdminViewMode_Height">@Html.Raw(crewPersonalDataForAdminViewModeView.Height.Caption)</template></span></td>
        <td data-name="Height" @Html.Raw(crewPersonalDataForAdminViewModeView.Height.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_Height"><span id="el_CrewPersonalDataForAdminViewMode_Height">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.Height.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.Height.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.Height.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.CoverallSize.Visible) { // crewPersonalDataForAdminViewModeView.CoverallSize.Visible (begin)
    <tr id="r_CoverallSize" @Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_CoverallSize"><template id="tpc_CrewPersonalDataForAdminViewMode_CoverallSize">@Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.Caption)</template></span></td>
        <td data-name="CoverallSize" @Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_CoverallSize"><span id="el_CrewPersonalDataForAdminViewMode_CoverallSize">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.CoverallSize.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.SafetyShoesSize.Visible) { // crewPersonalDataForAdminViewModeView.SafetyShoesSize.Visible (begin)
    <tr id="r_SafetyShoesSize" @Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_SafetyShoesSize"><template id="tpc_CrewPersonalDataForAdminViewMode_SafetyShoesSize">@Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.Caption)</template></span></td>
        <td data-name="SafetyShoesSize" @Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_SafetyShoesSize"><span id="el_CrewPersonalDataForAdminViewMode_SafetyShoesSize">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.SafetyShoesSize.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.ShirtSize.Visible) { // crewPersonalDataForAdminViewModeView.ShirtSize.Visible (begin)
    <tr id="r_ShirtSize" @Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_ShirtSize"><template id="tpc_CrewPersonalDataForAdminViewMode_ShirtSize">@Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.Caption)</template></span></td>
        <td data-name="ShirtSize" @Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_ShirtSize"><span id="el_CrewPersonalDataForAdminViewMode_ShirtSize">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.ShirtSize.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.TrousersSize.Visible) { // crewPersonalDataForAdminViewModeView.TrousersSize.Visible (begin)
    <tr id="r_TrousersSize" @Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_TrousersSize"><template id="tpc_CrewPersonalDataForAdminViewMode_TrousersSize">@Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.Caption)</template></span></td>
        <td data-name="TrousersSize" @Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_TrousersSize"><span id="el_CrewPersonalDataForAdminViewMode_TrousersSize">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.TrousersSize.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeFullName.Visible) { // crewPersonalDataForAdminViewModeView.NomineeFullName.Visible (begin)
    <tr id="r_NomineeFullName" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeFullName"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeFullName">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.Caption)</template></span></td>
        <td data-name="NomineeFullName" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeFullName"><span id="el_CrewPersonalDataForAdminViewMode_NomineeFullName">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeFullName.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeRelationship.Visible) { // crewPersonalDataForAdminViewModeView.NomineeRelationship.Visible (begin)
    <tr id="r_NomineeRelationship" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeRelationship"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeRelationship">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.Caption)</template></span></td>
        <td data-name="NomineeRelationship" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeRelationship"><span id="el_CrewPersonalDataForAdminViewMode_NomineeRelationship">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeRelationship.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeGender.Visible) { // crewPersonalDataForAdminViewModeView.NomineeGender.Visible (begin)
    <tr id="r_NomineeGender" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeGender"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeGender">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.Caption)</template></span></td>
        <td data-name="NomineeGender" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeGender"><span id="el_CrewPersonalDataForAdminViewMode_NomineeGender">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeGender.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.Visible (begin)
    <tr id="r_NomineeNationality_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeNationality_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeNationality_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.Caption)</template></span></td>
        <td data-name="NomineeNationality_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeNationality_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_NomineeNationality_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressDetail.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressDetail.Visible (begin)
    <tr id="r_NomineeAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressDetail"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressDetail">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.Caption)</template></span></td>
        <td data-name="NomineeAddressDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressDetail"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressDetail">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressCity.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressCity.Visible (begin)
    <tr id="r_NomineeAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressCity"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressCity">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.Caption)</template></span></td>
        <td data-name="NomineeAddressCity" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressCity"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressCity">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.Visible (begin)
    <tr id="r_NomineeAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressPostCode"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressPostCode">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.Caption)</template></span></td>
        <td data-name="NomineeAddressPostCode" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressPostCode"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressPostCode">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.Visible (begin)
    <tr id="r_NomineeAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressCountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressCountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.Caption)</template></span></td>
        <td data-name="NomineeAddressCountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressCountryID"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressCountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.Visible (begin)
    <tr id="r_NomineeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTel"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTel">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.Caption)</template></span></td>
        <td data-name="NomineeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTel"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTel">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeEmail.Visible) { // crewPersonalDataForAdminViewModeView.NomineeEmail.Visible (begin)
    <tr id="r_NomineeEmail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeEmail"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeEmail">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.Caption)</template></span></td>
        <td data-name="NomineeEmail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeEmail"><span id="el_CrewPersonalDataForAdminViewMode_NomineeEmail">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeEmail.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeMobileNumber.Visible) { // crewPersonalDataForAdminViewModeView.NomineeMobileNumber.Visible (begin)
    <tr id="r_NomineeMobileNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeMobileNumber"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeMobileNumber">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.Caption)</template></span></td>
        <td data-name="NomineeMobileNumber" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeMobileNumber"><span id="el_CrewPersonalDataForAdminViewMode_NomineeMobileNumber">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeMobileNumber.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NSSF_Health_Number.Visible) { // crewPersonalDataForAdminViewModeView.NSSF_Health_Number.Visible (begin)
    <tr id="r_NSSF_Health_Number" @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NSSF_Health_Number"><template id="tpc_CrewPersonalDataForAdminViewMode_NSSF_Health_Number">@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.Caption)</template></span></td>
        <td data-name="NSSF_Health_Number" @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NSSF_Health_Number"><span id="el_CrewPersonalDataForAdminViewMode_NSSF_Health_Number">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NSSF_Health_Number.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.Visible) { // crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.Visible (begin)
    <tr id="r_NSSF_Occupation_Number" @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NSSF_Occupation_Number"><template id="tpc_CrewPersonalDataForAdminViewMode_NSSF_Occupation_Number">@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.Caption)</template></span></td>
        <td data-name="NSSF_Occupation_Number" @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NSSF_Occupation_Number"><span id="el_CrewPersonalDataForAdminViewMode_NSSF_Occupation_Number">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.Visible) { // crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.Visible (begin)
    <tr id="r_NomineeRelationshipSelect" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeRelationshipSelect"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeRelationshipSelect">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.Caption)</template></span></td>
        <td data-name="NomineeRelationshipSelect" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeRelationshipSelect"><span id="el_CrewPersonalDataForAdminViewMode_NomineeRelationshipSelect">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.Visible) { // crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.Visible (begin)
    <tr id="r_NomineeRelationshipDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeRelationshipDetail"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeRelationshipDetail">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.Caption)</template></span></td>
        <td data-name="NomineeRelationshipDetail" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeRelationshipDetail"><span id="el_CrewPersonalDataForAdminViewMode_NomineeRelationshipDetail">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.Visible (begin)
    <tr id="r_MobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_MobileNumberCode_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_MobileNumberCode_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.Caption)</template></span></td>
        <td data-name="MobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_MobileNumberCode_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_MobileNumberCode_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.Visible (begin)
    <tr id="r_PrimaryAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTelCode_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.Caption)</template></span></td>
        <td data-name="PrimaryAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_PrimaryAddressHomeTelCode_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.Visible (begin)
    <tr id="r_AlternativeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTelCode_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.Caption)</template></span></td>
        <td data-name="AlternativeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_AlternativeAddressHomeTelCode_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.Visible (begin)
    <tr id="r_NomineeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTelCode_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.Caption)</template></span></td>
        <td data-name="NomineeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_NomineeAddressHomeTelCode_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.Visible) { // crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.Visible (begin)
    <tr id="r_NomineeMobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.RowAttributes)>
        <td class="@(crewPersonalDataForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewPersonalDataForAdminViewMode_NomineeMobileNumberCode_CountryID"><template id="tpc_CrewPersonalDataForAdminViewMode_NomineeMobileNumberCode_CountryID">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.Caption)</template></span></td>
        <td data-name="NomineeMobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdminViewMode_NomineeMobileNumberCode_CountryID"><span id="el_CrewPersonalDataForAdminViewMode_NomineeMobileNumberCode_CountryID">
<span @Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.ViewAttributes)>
@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.Visible (end) *@
</table>
<div id="tpd_CrewPersonalDataForAdminViewModeview" class="ew-custom-template"></div>
<template id="tpm_CrewPersonalDataForAdminViewModeview">
<div id="ct_crewPersonalDataForAdminViewModeView"><ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminViewModeView")">
            @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
        </a>     
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminViewModeList")">
            @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminViewModeView")">
            @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
        </a>
    </li>
</ul> 
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Basic Information" : "Informasi Dasar")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_RequiredPhoto" class="mb-2 row">
                <label for="x_RequiredPhoto" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.RequiredPhoto.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.RequiredPhoto.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_RequiredPhoto"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_VisaPhoto" class="mb-2 row">
                <label for="x_VisaPhoto" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.VisaPhoto.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.VisaPhoto.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_VisaPhoto"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_IndividualCodeNumber" class="mb-2 row">
                <label for="x_IndividualCodeNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.IndividualCodeNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_IndividualCodeNumber"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r__Email" class="mb-2 row">
                <label for="x__Email" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView._Email.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView._Email.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode__Email"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_MobileNumber" class="mb-2 row">
                <label for="x_MobileNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.MobileNumber.Caption)</label>
                <div>
                    @{
                        var mobileNumberCodeWithCountryName = crewPersonalDataForAdminViewModeView.MobileNumberCode_CountryID.GetViewValue();
                        if (string.IsNullOrEmpty(mobileNumberCodeWithCountryName))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            string countryCodePattern = @"^\+\d{1,3}";
                            Regex countryCodeRegex = new Regex(countryCodePattern);
                            Match mobileNumberCodeMatch = countryCodeRegex.Match(mobileNumberCodeWithCountryName);
                            if (mobileNumberCodeMatch.Success)
                            {
                                string mobileNumberCodeOnly = mobileNumberCodeMatch.Value;
                                var mobileNumberWithoutCode = crewPersonalDataForAdminViewModeView.MobileNumber.GetViewValue();
                                var mobileNumber = "(" + mobileNumberCodeOnly + ")" + mobileNumberWithoutCode;
                                @Html.Raw(mobileNumber);
                            }
                            else
                            {
                                @Html.Raw("&nbsp;");
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_FullName" class="mb-2 row">
                <label for="x_FullName" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.FullName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.FullName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_FullName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_NSSF_Health_Number" class="mb-2 row">
                <label for="x_NSSF_Health_Number" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NSSF_Health_Number.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NSSF_Health_Number"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_NSSF_Occupation_Number" class="mb-2 row">
                <label for="x_NSSF_Occupation_Number" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NSSF_Occupation_Number.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NSSF_Occupation_Number"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_DateOfBirth" class="mb-2 row">
                <label for="x_DateOfBirth" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.DateOfBirth.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.DateOfBirth.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_DateOfBirth"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_derived_Age" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Age" : "Umur")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_CountryOfOrigin_CountryID" class="mb-2 row">
                <label for="x_CountryOfOrigin_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.CountryOfOrigin_CountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_CountryOfOrigin_CountryID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_CityOfBirth" class="mb-2 row">
                <label for="x_CityOfBirth" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.CityOfBirth.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.CityOfBirth.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_CityOfBirth"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_Nationality_CountryID" class="mb-2 row">
                <label for="x_Nationality_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Nationality_CountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Nationality_CountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Nationality_CountryID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_Gender" class="mb-2 row">
                <label for="x_Gender" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Gender.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Gender.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Gender"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_MaritalStatus" class="mb-2 row">
                <label for="x_MaritalStatus" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.MaritalStatus.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.MaritalStatus.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_MaritalStatus"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_ReligionID" class="mb-2 row">
                <label for="x_ReligionID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.ReligionID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.ReligionID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_ReligionID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_BloodType" class="mb-2 row">
                <label for="x_BloodType" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.BloodType.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.BloodType.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_BloodType"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_Status" class="mb-2 row">
                <label for="x_Status" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Status.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Status.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Status"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_Reason" class="mb-2 row">
                <label for="x_Reason" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Reason.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Reason.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Reason"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered table-hover table-sm table-head-fixed" id="derived_SeaExperiences">
            <thead>
                <tr class="ew-table-header">
                    <th id="totalExperience" colspan="3">
                        @(CurrentLanguage == "en-US" ? "Total Sea Service : " : "Total Pengalaman Berlayar: ")
                    </th>
                </tr>
                <tr class="ew-table-header">
                    <th class="ew-table-header-cell">
                        @(CurrentLanguage == "en-US" ? "Vessel Type" : "Jenis Kapal")
                    </th>
                    <th class="ew-table-header-cell">
                        @(CurrentLanguage == "en-US" ? "Rank" : "Jabatan")
                    </th>
                    <th class="ew-table-header-cell">
                        @(CurrentLanguage == "en-US" ? "Experience" : "Pengalaman")
                    </th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Address Information" : "Informasi Alamat")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6" id="permanentAddress">
            <h6 class="fw-bold mt-2">
                @(CurrentLanguage == "en-US" ? "1. Permanent/Primary Address" : "1. Alamat Permanen/Utama")
            </h6>
            <div id="r_PrimaryAddressDetail" class="mb-2 row">
                <label for="x_PrimaryAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressDetail.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressDetail"></slot>
                        }
                    }
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                     <div id="r_PrimaryAddressCity" class="mb-2 row">
                        <label for="x_PrimaryAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressCity.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressCity"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressPostCode" class="mb-2 row">
                        <label for="x_PrimaryAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressPostCode.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressPostCode"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressCountryID" class="mb-2 row">
                        <label for="x_PrimaryAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressCountryID.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressCountryID"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressState" class="mb-2 row">
                        <label for="x_PrimaryAddressState" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressState.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressState.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressState"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressHomeTel" class="mb-2 row">
                        <label for="x_PrimaryAddressHomeTel" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.Caption)</label>
                        <div>
                            @{
                                var primaryAddressHomeTelCodeWithCountryName = crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTelCode_CountryID.GetViewValue();
                                if (string.IsNullOrEmpty(primaryAddressHomeTelCodeWithCountryName))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    string countryCodePattern = @"^\+\d{1,3}";
                                    Regex countryCodeRegex = new Regex(countryCodePattern);
                                    Match primaryAddressHomeTelCodeMatch = countryCodeRegex.Match(primaryAddressHomeTelCodeWithCountryName);
                                    if (primaryAddressHomeTelCodeMatch.Success)
                                    {
                                        string primaryAddressHomeTelCodeOnly = primaryAddressHomeTelCodeMatch.Value;
                                        var primaryAddressHomeTelWithoutCode = crewPersonalDataForAdminViewModeView.PrimaryAddressHomeTel.GetViewValue();
                                        var primaryAddressHomeTel = "(" + primaryAddressHomeTelCodeOnly + ")" + primaryAddressHomeTelWithoutCode;
                                        @Html.Raw(primaryAddressHomeTel);
                                    }
                                    else
                                    {
                                        @Html.Raw("&nbsp;");
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressNearestAirport" class="mb-2 row">
                        <label for="x_PrimaryAddressNearestAirport" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PrimaryAddressNearestAirport.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PrimaryAddressNearestAirport"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6" id="temporaryAddress">
            <h6 class="fw-bold mt-2">
                @(CurrentLanguage == "en-US" ? "2. Temporary/Alternative Address" : "2. Alamat Sementara/Alternatif")
            </h6>
            <div id="r_AlternativeAddressDetail" class="mb-2 row">
                <label for="x_AlternativeAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AlternativeAddressDetail.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressDetail"></slot>
                        }
                    }
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressCity" class="mb-2 row">
                        <label for="x_AlternativeAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AlternativeAddressCity.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressCity"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressPostCode" class="mb-2 row">
                        <label for="x_AlternativeAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AlternativeAddressPostCode.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressPostCode"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressCountryID" class="mb-2 row">
                        <label for="x_AlternativeAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AlternativeAddressCountryID.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressCountryID"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressState" class="mb-2 row">
                        <label for="x_AlternativeAddressState" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressState.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AlternativeAddressState.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AlternativeAddressState"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressHomeTel" class="mb-2 row">
                        <label for="x_AlternativeAddressHomeTel" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.Caption)</label>
                        <div>
                            @{
                                var alternativeAddressHomeTelCodeWithCountryName = crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTelCode_CountryID.GetViewValue();
                                if (string.IsNullOrEmpty(alternativeAddressHomeTelCodeWithCountryName))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    string countryCodePattern = @"^\+\d{1,3}";
                                    Regex countryCodeRegex = new Regex(countryCodePattern);
                                    Match alternativeAddressHomeTelCodeMatch = countryCodeRegex.Match(alternativeAddressHomeTelCodeWithCountryName);
                                    if (alternativeAddressHomeTelCodeMatch.Success)
                                    {
                                        string alternativeAddressHomeTelCodeOnly = alternativeAddressHomeTelCodeMatch.Value;
                                        var alternativeAddressHomeTelWithoutCode = crewPersonalDataForAdminViewModeView.AlternativeAddressHomeTel.GetViewValue();
                                        var alternativeAddressHomeTel = "(" + alternativeAddressHomeTelCodeOnly + ")" + alternativeAddressHomeTelWithoutCode;
                                        @Html.Raw(alternativeAddressHomeTel);
                                    }
                                    else
                                    {
                                        @Html.Raw("&nbsp;");
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <div class="row">
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Other Informations" : "Informasi Lainnya")
            </h5>
            <div class="row">
                <div id="r_RankAppliedFor_RankID" class="mb-2 row">
                    <label for="x_RankAppliedFor_RankID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.Caption)</label>
                    <div>
                        @{
                            if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.RankAppliedFor_RankID.GetViewValue()))
                            {
                                @Html.Raw("&nbsp;");
                            }
                            else
                            {
                                <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_RankAppliedFor_RankID"></slot>
                            }
                        }
                    </div>
                </div>
                <div id="r_WillAcceptLowRank" class="mb-2 row">
                    <label for="x_WillAcceptLowRank" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.WillAcceptLowRank.Caption)</label>
                    <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_WillAcceptLowRank"></slot></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div id="r_AvailableFrom" class="mb-2 row">
                        <label for="x_AvailableFrom" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableFrom.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AvailableFrom.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AvailableFrom"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AvailableUntil" class="mb-2 row">
                        <label for="x_AvailableUntil" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.AvailableUntil.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.AvailableUntil.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_AvailableUntil"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Measurement Information" : "Informasi Ukuran")
            </h5>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_Weight" class="mb-2 row">
                        <label for="x_Weight" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Weight.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Weight.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Weight"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_Height" class="mb-2 row">
                        <label for="x_Height" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.Height.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.Height.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_Height"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_derived_BMI" class="mb-2 row">
                        <label for="x_derived_BMI" class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "BMI" : "BMI")
                        </label>
                        <div></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_CoverallSize" class="mb-2 row">
                        <label for="x_CoverallSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.CoverallSize.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.CoverallSize.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_CoverallSize"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_SafetyShoesSize" class="mb-2 row">
                        <label for="x_SafetyShoesSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.SafetyShoesSize.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.SafetyShoesSize.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_SafetyShoesSize"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_ShirtSize" class="mb-2 row">
                        <label for="x_ShirtSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.ShirtSize.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.ShirtSize.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_ShirtSize"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_TrousersSize" class="mb-2 row">
                        <label for="x_TrousersSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.TrousersSize.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.TrousersSize.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_TrousersSize"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                </div>
            </div>
        </div> 
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Next of KIN" : "Keluarga Terdekat")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeFullName" class="mb-2 row">
                <label for="x_NomineeFullName" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeFullName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeFullName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeFullName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeGender" class="mb-2 row">
                <label for="x_NomineeGender" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeGender.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeGender.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeGender"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeRelationship" class="mb-2 row d-none">
                <label for="x_NomineeRelationship" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationship.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeRelationship.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeRelationship"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_NomineeRelationshipSelect" class="mb-2 row">
                <label for="x_NomineeRelationshipSelect" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipSelect.Caption)</label>
                <div>
                    @{
                        string nomineeRelationshipValue = crewPersonalDataForAdminViewModeView.NomineeRelationship.GetViewValue();
                        if (string.IsNullOrEmpty(nomineeRelationshipValue))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else if (nomineeRelationshipValue != "Spouse" && nomineeRelationshipValue != "Partner" && nomineeRelationshipValue != "Parent")
                        {
                            @Html.Raw("Other Relative");
                        }
                        else
                        {
                            @Html.Raw(nomineeRelationshipValue);
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeRelationshipDetail" class="mb-2 row">
                <label for="x_NomineeRelationshipDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeRelationshipDetail.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(nomineeRelationshipValue))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else if (nomineeRelationshipValue == "Spouse" || nomineeRelationshipValue == "Partner" || nomineeRelationshipValue == "Parent")
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            @Html.Raw(nomineeRelationshipValue);
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeNationality_CountryID" class="mb-2 row">
                <label for="x_NomineeNationality_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeNationality_CountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeNationality_CountryID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressCity" class="mb-2 row">
                <label for="x_NomineeAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCity.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeAddressCity.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressCity"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeAddressPostCode" class="mb-2 row">
                <label for="x_NomineeAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeAddressPostCode.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressPostCode"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressCountryID" class="mb-2 row">
                <label for="x_NomineeAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeAddressCountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressCountryID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeEmail" class="mb-2 row">
                <label for="x_NomineeEmail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeEmail.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeEmail.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeEmail"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressHomeTel" class="mb-2 row">
                <label for="x_NomineeAddressHomeTel" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.Caption)</label>
                <div>
                    @{
                        var nomineeAddressHomeTelCodeWithCountryName = crewPersonalDataForAdminViewModeView.NomineeAddressHomeTelCode_CountryID.GetViewValue();
                        if (string.IsNullOrEmpty(nomineeAddressHomeTelCodeWithCountryName))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            string countryCodePattern = @"^\+\d{1,3}";
                            Regex countryCodeRegex = new Regex(countryCodePattern);
                            Match nomineeAddressHomeTelCodeMatch = countryCodeRegex.Match(nomineeAddressHomeTelCodeWithCountryName);
                            if (nomineeAddressHomeTelCodeMatch.Success)
                            {
                                string nomineeAddressHomeTelCodeOnly = nomineeAddressHomeTelCodeMatch.Value;
                                var nomineeAddressHomeTelWithoutCode = crewPersonalDataForAdminViewModeView.NomineeAddressHomeTel.GetViewValue();
                                var nomineeAddressHomeTel = "(" + nomineeAddressHomeTelCodeOnly + ")" + nomineeAddressHomeTelWithoutCode;
                                @Html.Raw(nomineeAddressHomeTel);
                            }
                            else
                            {
                                @Html.Raw("&nbsp;");
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeMobileNumber" class="mb-2 row">
                <label for="x_NomineeMobileNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeMobileNumber.Caption)</label>
                <div>
                    @{
                        var nomineeMobileNumberCodeWithCountryName = crewPersonalDataForAdminViewModeView.NomineeMobileNumberCode_CountryID.GetViewValue();
                        if (string.IsNullOrEmpty(nomineeMobileNumberCodeWithCountryName))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            string countryCodePattern = @"^\+\d{1,3}";
                            Regex countryCodeRegex = new Regex(countryCodePattern);
                            Match nomineeMobileNumberCodeMatch = countryCodeRegex.Match(nomineeMobileNumberCodeWithCountryName);
                            if (nomineeMobileNumberCodeMatch.Success)
                            {
                                string nomineeMobileNumberCodeOnly = nomineeMobileNumberCodeMatch.Value;
                                var nomineeMobileNumberWithoutCode = crewPersonalDataForAdminViewModeView.NomineeMobileNumber.GetViewValue();
                                var nomineeMobileNumber = "(" + nomineeMobileNumberCodeOnly + ")" + nomineeMobileNumberWithoutCode;
                                @Html.Raw(nomineeMobileNumber);
                            }
                            else
                            {
                                @Html.Raw("&nbsp;");
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressDetail" class="mb-2 row">
                <label for="x_NomineeAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.NomineeAddressDetail.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_NomineeAddressDetail"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <div class="row">
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "KTP" : "KTP")
            </h5>
            <div id="r_SocialSecurityNumber" class="mb-2 row">
                <label for="x_SocialSecurityNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.SocialSecurityNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityNumber"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_SocialSecurityIssuingCountryID" class="mb-2 row">
                <label for="x_SocialSecurityIssuingCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.SocialSecurityIssuingCountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityIssuingCountryID"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_SocialSecurityImage" class="mb-2 row">
                <label for="x_SocialSecurityImage" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.SocialSecurityImage.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.SocialSecurityImage.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_SocialSecurityImage"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Personal Tax (Only If Requested)" : "Pajak Pribadi (Hanya Jika Diminta)")
            </h5>
            <div id="r_PersonalTaxNumber" class="mb-2 row">
                <label for="x_PersonalTaxNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PersonalTaxNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxNumber"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_PersonalTaxIssuingCountryID" class="mb-2 row">
                <label for="x_PersonalTaxIssuingCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PersonalTaxIssuingCountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxIssuingCountryID"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_PersonalTaxImage" class="mb-2 row">
                <label for="x_PersonalTaxImage" class="col-form-label">@Html.Raw(crewPersonalDataForAdminViewModeView.PersonalTaxImage.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewPersonalDataForAdminViewModeView.PersonalTaxImage.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewPersonalDataForAdminViewMode_PersonalTaxImage"></slot>
                        }
                    }
                </div>
            </div>
        </div> 
    </div>
</fieldset>
<div id="schedule-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="schedule-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="schedule-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Create Document Check Schedule" : "Tambah Jadwal Cek Dokumen")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-schedule" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_DocumentCheckDateTime" class="row">
                        <label for="x_DocumentCheckDateTime" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Document Check Date Time" : "Tanggal Dan Jam Cek Dokumen")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_DocumentCheckDateTime">
                                    <div class="input-group" id="datetimepicker_DocumentCheckDateTime" data-target-input="nearest" data-td-target-toggle="nearest">
                                        <input
                                            type="text"
                                            name="x_DocumentCheckDateTime"
                                            id="x_DocumentCheckDateTime"
                                            value=""
                                            placeholder="Document Check Date Time"
                                            data-format-pattern="yyyy-MM-dd HH:mm:sszzz"
                                            class="form-control tempus-dominus-input"
                                            data-target="#datetimepicker_DocumentCheckDateTime"
                                        />
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_DocumentCheckNotes" class="row">
                        <label for="x_DocumentCheckNotes" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_DocumentCheckNotes">
                                    <textarea
                                        name="x_DocumentCheckNotes"
                                        id="x_DocumentCheckNotes"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder=@(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-add-schedule" type="button">
                    @(CurrentLanguage == "en-US" ? "Create Document Check Schedule" : "Tambah Jadwal Cek Dokumen")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-schedule" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<!-- REVISE MODAL DIALOG. FIXME! -->
<div id="revise-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="ew-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="ew-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Revise Crew Candidate" : "Tinjau Ulang Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="revise-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_RevisedReason" class="row">
                        <label for="x_RevisedReason" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Revised Reason" : "Alasan Tinjau Ulang")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_RevisedReason">
                                    <textarea
                                        name="x_RevisedReason"
                                        id="x_RevisedReason"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder="Revised Reason"
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-revise" type="button">
                    @(CurrentLanguage == "en-US" ? "Revise" : "Tinjau Ulang")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="reject-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="ew-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="ew-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reject-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_RejectedReason" class="row">
                        <label for="x_RejectedReason" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Rejected Reason" : "Alasan Ditolak")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_RejectedReason">
                                    <textarea
                                        name="x_RejectedReason"
                                        id="x_RejectedReason"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder="Rejected Reason"
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-reject" type="button">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
</div>
</template>
@{ crewPersonalDataForAdminViewModeView.CloseRecordset(); }
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewPersonalDataForAdminViewModeView.Rows)) };
    ew.applyTemplate("tpd_CrewPersonalDataForAdminViewModeview", "tpm_CrewPersonalDataForAdminViewModeview", "CrewPersonalDataForAdminViewModeview", "@(crewPersonalDataForAdminViewModeView.Export)", "CrewPersonalDataForAdminViewMode", ew.templateData.rows[0], @(crewPersonalDataForAdminViewModeView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewPersonalDataForAdminViewModeView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewPersonalDataForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    const currentUrlWithoutEditView = currentUrlObject.href.replace(/Edit|View/g, "");
    const currentlyEditedCrewID = parseInt(currentUrlObject.pathname.split('/').pop()); 

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        const hrefWithoutEditView = href.replace(/Edit|View/g, "");
        // Check if the href contains current page's url
        if (currentUrlWithoutEditView.includes(hrefWithoutEditView)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the current page is a one to many table page or not
        if (href.includes("ViewModeList")) {
            const newHref = href + "?crewID=" + currentlyEditedCrewID; // Add "?crewID=" and the currently edited crew ID to the href
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("ViewModeView")) {
            const newHref = href + "/" + currentlyEditedCrewID; // Add "/" and the currently edited crew ID to the href
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });
    const weightString = $('#r_Weight div span span').text().trim();
    const formattedWeight = parseInt(weightString).toLocaleString('id-ID', {
        style: 'decimal',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
    });
    $('#r_Weight div span span').text(formattedWeight);
    const heightString = $('#r_Height div span span').text().trim();
    const formattedHeight = parseInt(heightString).toLocaleString('id-ID', {
        style: 'decimal',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
    });
    $('#r_Height div span span').text(formattedHeight);

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();

    // add vertical line if the screen is larger than 576px (bootstrap sm breakpoint)
    const screenWidth = $(window).width();
    if (screenWidth >= 576) {
      const permanentAddressDiv = $('#permanentAddress');
      const temporaryAddressDiv = $('#temporaryAddress');
      permanentAddressDiv.css('border-right', '1px solid black');
      permanentAddressDiv.css('padding-right', 'calc(var(--bs-gutter-x) * 0.75)');
      temporaryAddressDiv.css('padding-left', 'calc(var(--bs-gutter-x) * 0.75)');
    }
    $('div.btn-toolbar.ew-toolbar').remove();
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                // Parse the data in the response
                const isAdmin = response.data.IsAdmin;
                const employeeStatus = response.data.EmployeeStatus;
                if (employeeStatus === 'Candidate - Draft') {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });
                    const editButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                        class: "btn btn-default ew-btn me-auto primary-black-clr gray-bg", 
                        id: "btn-edit",
                        name: "btn-edit",
                        href: `${parentUrl}CrewPersonalDataForAdminViewModeEdit/${currentlyEditedCrewID}`,
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}RegistrationList`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    flexDiv.append(editButton);
                    if (isAdmin) {
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                    const errorMessage = urlQueryParams.get('errorMessage');
                    if (errorMessage !== null) {
                        const decodedErrorMessage = decodeURIComponent(errorMessage);
                        ew.showToast(decodedErrorMessage);
                        urlQueryParams.delete('errorMessage');
                        currentUrlObject.search = urlQueryParams.toString();
                        history.pushState(null, '', currentUrlObject);
                    }
                } else if (employeeStatus === 'Candidate - Submitted') {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn ms-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });
                    const invokeScheduleModalButton = $('<button/>', {
                        'class': 'btn btn-default ew-btn primary-green-bg ms-3 primary-white-clr',
                        'name': 'btn-invoke-schedule-modal',
                        'id': 'btn-invoke-schedule-modal',
                        'type': 'button',
                        'text': (selectedLanguage.id === 'en-US') ? 'Accept' : 'Terima'
                    });
                    const invokeReviseModalButton = $('<button/>', {
                        'class': 'btn btn-primary ew-btn ms-3 primary-white-clr',
                        'name': 'btn-invoke-revise-modal',
                        'id': 'btn-invoke-revise-modal',
                        'type': 'button', 
                        'text': (selectedLanguage.id === 'en-US') ? 'Revise' : 'Tinjau'
                    });
                    const invokeRejectModalButton = $('<button/>', {
                        'class': 'btn btn-danger ew-btn ms-3 me-auto primary-white-clr',
                        'name': 'btn-invoke-reject-modal',
                        'id': 'btn-invoke-reject-modal',
                        'type': 'button',
                        'text': (selectedLanguage.id === 'en-US') ? 'Reject' : 'Tolak'
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}VWaitingForPdeReviewList`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    if (isAdmin) {
                        flexDiv.append(invokeScheduleModalButton);
                        flexDiv.append(invokeReviseModalButton);
                        flexDiv.append(invokeRejectModalButton);
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                    if (isAdmin) {
                         $('#btn-invoke-schedule-modal').click(function() {
                            $('#schedule-modal-dialog').modal('show');
                        });
                        $('#btn-invoke-reject-modal').click(function() {
                            $('#reject-modal-dialog').modal('show');
                        });
                        $('#btn-invoke-revise-modal').click(function() {
                            $('#revise-modal-dialog').modal('show');
                        });
                        $('#schedule-modal-dialog').on('hidden.bs.modal', function() {
                            $('#x_DocumentCheckDateTime').val(null);
                        });
                        $('#revise-modal-dialog').on('hidden.bs.modal', function() {
                            $('#x_RevisedReason').val(null);
                        });
                        $('#reject-modal-dialog').on('hidden.bs.modal', function() {
                            $('#x_RejectedReason').val(null);
                        });

                        // initialize date time picker
                        const format = "dd MMM yyyy HH:mm:00zzz";
                        const options = {
                            localization: {
                                locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                                hourCycle: format.match(/H/) ? "h24" : "h12",
                                format,
                                ...ew.language.phrase("datetimepicker")
                            },
                            display: {
                                icons: {
                                    previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                                    next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                                },
                                components: {
                                    hours: !!format.match(/h/i),
                                    minutes: !!format.match(/m/),
                                    seconds: !!format.match(/s/i)
                                },
                                theme: ew.isDark() ? "dark" : "auto"
                            },
                            defaultDate: new Date(new Date().setHours(8, 0, 0)).toISOString(),
                        };
                        ew.createDateTimePicker("add-schedule", "x_DocumentCheckDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
                        $('#x_DocumentCheckDateTime').val(replaceTimezoneOffset($('#x_DocumentCheckDateTime').val(), formatTimezoneOffset(new Date().getTimezoneOffset())));

                        // Listen for input changes
                        $('#x_DocumentCheckDateTime').on('change.td', function() {
                            const timezoneOffset = new Date().getTimezoneOffset();
                            const formattedTimezoneOffset = formatTimezoneOffset(timezoneOffset);
                            const currentValue = $(this).val();
                            const newValue = replaceTimezoneOffset(currentValue, formattedTimezoneOffset);
                            $(this).val(newValue);
                        });

                        // Format timezone offset as needed
                        function formatTimezoneOffset(offset) {
                            const hours = Math.floor(Math.abs(offset) / 60);
                            const sign = offset < 0 ? '+' : '-';
                            return ' GMT ' + sign + hours;
                        }

                        // Helper function to add leading zero to single-digit numbers
                        function addLeadingZero(num) {
                            return num < 10 ? '0' + num : num;
                        }

                        // Replace "zzz" with the formatted timezone offset
                        function replaceTimezoneOffset(str, offset) {
                            return str.replace('zzz', offset);
                        }
                        const addDocumentCheckDateTimeApiUrl = "add-document-check-date-time";
                        $("#btn-add-schedule").click(function() {
                            const documentCheckDateTimeValue = $('#x_DocumentCheckDateTime').val();
                            const documentCheckDateTimeCaption = $(`label[for="x_DocumentCheckDateTime"]`).text();
                            if (documentCheckDateTimeValue == '') {
                                if (selectedLanguage.id === 'en-US') {
                                    ew.showToast(`Please enter required field - ${documentCheckDateTimeCaption}`);
                                } else {
                                    ew.showToast(`Masukkan input yang dibutuhkan - ${documentCheckDateTimeCaption}`);
                                }
                            } else {
                                const currentDate = new Date();
                                const documentCheckDateObject = new Date(documentCheckDateTimeValue);
                                if (isNaN(documentCheckDateObject)) {
                                    if (selectedLanguage.id === 'en-US') {
                                        ew.showToast(`Invalid date time - ${documentCheckDateTimeCaption}`);
                                    } else {
                                        ew.showToast(`Tanggal dan jam tidak valid - ${documentCheckDateTimeCaption}`);
                                    }
                                } else if (documentCheckDateObject < currentDate) {
                                    if (selectedLanguage.id === 'en-US') {
                                        ew.showToast(`${documentCheckDateTimeCaption} must be later or equal than today`);
                                    } else {
                                        ew.showToast(`${documentCheckDateTimeCaption} harus setelah atau sama dengan hari ini`);
                                    }
                                } else {
                                    const arrDataKey = [currentlyEditedCrewID];
                                    const notesValue = $('#x_DocumentCheckNotes').val();
                                    const notes = (notesValue !== '') ? notesValue : '';
                                    const documentCheckDateTimeRequest = {
                                        scheduleDateTime: documentCheckDateTimeValue,
                                        notes: notes,
                                        crewIDArray: JSON.stringify(arrDataKey),
                                    };
                                    $.ajax({
                                        method: "POST",
                                        url: `${parentUrl}api/Registration/${addDocumentCheckDateTimeApiUrl}`,
                                        data: JSON.stringify(documentCheckDateTimeRequest),
                                        contentType: "application/json",
                                        success: function(response) {
                                            if (response.success) {
                                                $('#schedule-modal-dialog').modal('hide');
                                                let successMessage = '';
                                                if (selectedLanguage.id === 'en-US') {
                                                    successMessage = `Add ${documentCheckDateTimeCaption} Successful`;
                                                } else {
                                                    successMessage = `Menambahkan ${documentCheckDateTimeCaption} Berhasil`;
                                                }
                                                const baseUrl = new URL(window.location.href).origin;
                                                const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}VWaitingForPdeReviewList`);
                                                const encodedSuccessMessage = encodeURIComponent(successMessage);
                                                const params = new URLSearchParams(targetUrl.search);
                                                params.set('successMessage', encodedSuccessMessage);
                                                targetUrl.search = params.toString();
                                                window.location.href = targetUrl.href;
                                            } else {
                                                $('#schedule-modal-dialog').modal('hide');
                                                const errorMessage = response.errorMessage;
                                                ew.showToast(errorMessage);
                                            }
                                        },
                                        error: function(xhr, textStatus, errorThrown) {
                                            $('#schedule-modal-dialog').modal('hide');
                                            ew.showToast(errorThrown);
                                        }
                                    });
                                }
                            }
                        });
                        const rejectMultipleCrewApiUrl = "reject-multiple-crew";
                        $("#btn-reject").click(function() {
                            const rejectedReasonValue = $('#x_RejectedReason').val();
                            const rejectedReasonCaption = $(`label[for="x_RejectedReason"]`).text();
                            if (rejectedReasonValue == '') {
                                if (selectedLanguage.id === 'en-US') {
                                    ew.showToast(`Please enter required field - ${rejectedReasonCaption}`);
                                } else {
                                    ew.showToast(`Masukkan input yang dibutuhkan - ${rejectedReasonCaption}`);
                                }
                            } else {
                                const arrDataKey = [currentlyEditedCrewID];
                                const rejectMultipleRequest = {
                                    rejectReason: rejectedReasonValue,
                                    crewIDArray: JSON.stringify(arrDataKey),
                                };
                                $.ajax({
                                    method: "POST",
                                    url: `${parentUrl}api/Registration/${rejectMultipleCrewApiUrl}`,
                                    data: JSON.stringify(rejectMultipleRequest),
                                    contentType: "application/json",
                                    success: function(response) {
                                        if (response.success) {
                                            $('#reject-modal-dialog').modal('hide');
                                            let successMessage = '';
                                            if (selectedLanguage.id === 'en-US') {
                                                successMessage = `Add ${rejectedReasonCaption} Successful`;
                                            } else {
                                                successMessage = `Menambahkan ${rejectedReasonCaption} Berhasil`;
                                            }
                                            const baseUrl = new URL(window.location.href).origin;
                                            const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}VWaitingForPdeReviewList`);
                                            const encodedSuccessMessage = encodeURIComponent(successMessage);
                                            const params = new URLSearchParams(targetUrl.search);
                                            params.set('successMessage', encodedSuccessMessage);
                                            targetUrl.search = params.toString();
                                            window.location.href = targetUrl.href;
                                        } else {
                                            $('#reject-modal-dialog').modal('hide');
                                            const errorMessage = response.errorMessage;
                                            ew.showToast(errorMessage);
                                        }
                                    },
                                    error: function(xhr, textStatus, errorThrown) {
                                        $('#reject-modal-dialog').modal('hide');
                                        ew.showToast(errorThrown);
                                    }
                                });
                            }
                        });
                        const reviseMultipleCrewApiUrl = "revise-multiple-crew";
                        $("#btn-revise").click(function() {
                            const revisedReasonValue = $('#x_RevisedReason').val();
                            const revisedReasonCaption = $(`label[for="x_RevisedReason"]`).text();
                            if(revisedReasonValue.trim() === '') {
                                if(selectedLanguage.id === 'en-US') {
                                    ew.showToast(`Please enter required field - ${revisedReasonCaption}`);
                                } else {
                                    ew.showToast(`Masukkan input yang dibutuhkan - ${revisedReasonCaption}`);
                                }
                            } else {
                                const arrDataKey = [currentlyEditedCrewID];
                                const revisedMultipleCrewRequest = {
                                    revisedReason: revisedReasonValue,
                                    crewIDArray: JSON.stringify(arrDataKey)
                                };
                                $.ajax({
                                    method: "POST",
                                    url: `${parentUrl}api/Registration/${reviseMultipleCrewApiUrl}`,
                                    data: JSON.stringify(revisedMultipleCrewRequest),
                                    contentType: "application/json",
                                    success: function(response) {
                                        if(response.success) {
                                            $('#revise-modal-dialog').modal('hide');
                                            let successMessage = '';
                                            if(selectedLanguage.id === 'en-US') {
                                                successMessage = `Add ${revisedReasonCaption} Successful`;
                                            } else {
                                                successMessage = `Menambahkan ${revisedReasonCaption} Berhasil`;
                                            }
                                            const baseUrl = new URL(window.location.href).origin;
                                            const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}VWaitingForPdeReviewList`);
                                            const encodedSuccessMessage = encodeURIComponent(successMessage);
                                            const params = new URLSearchParams(targetUrl.search);
                                            params.set('successMessage', encodedSuccessMessage);
                                            targetUrl.search = params.toString();
                                            window.location.href = targetUrl.href;
                                        } else {
                                            $('#revise-modal-dialog').modal('hide');
                                            const errorMessage = response.errorMessage;
                                            ew.showToast(errorMessage);
                                        }  
                                    },
                                    error: function(xhr, textStatus, errorThrown) {
                                        $('#revise-modal-dialog').modal('hide');
                                        ew.showToast(errorThrown);
                                    }
                                });
                            }
                        });
                    }
                } 
                // gmandayu: nambahin untuk status selain draft dan submitted.
                else if(employeeStatus === 'Candidate - Accepted') 
                {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });                
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}VCrewAcceptedForAdminList`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    if (isAdmin) {
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                }
                else if(employeeStatus === 'Candidate - Rejected') 
                {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });                
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}VCrewRejectedForAdminList`,
                    });
                    backButton.click(function() {
                        history.back();
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    if (isAdmin) {
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                }
                else if(employeeStatus === 'Candidate - Temporary Rejected') 
                {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });                
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}VCrewTemporaryRejectedForAdminList`,
                    });
                    backButton.click(function() {
                        history.back();
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    if (isAdmin) {
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                }
                else if(employeeStatus === 'Candidate - Blacklist') 
                {
                    const printButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V1" : "Cetak V1",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print",
                        name: "btn-print",
                        href: `${parentUrl}PrintCV?id=${currentlyEditedCrewID}`,
                    });
                    const printButton2 = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Print V2" : "Cetak V2",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-print2",
                        name: "btn-print2",
                        href: `${parentUrl}PrintCV2?crewid=${currentlyEditedCrewID}`,
                    });                
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${parentUrl}VCrewBlacklistForAdminList`,
                    });
                    backButton.click(function() {
                        history.back();
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(printButton);
                    flexDiv.append(printButton2);
                    if (isAdmin) {
                        flexDiv.append(backButton);
                    }
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewPersonalDataForAdminViewModeview').append(buttonsDiv);
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
    const personalDataDerivedColumnsApi = 'get-personal-data-derived-columns';
    $.ajax({
        url: `${parentUrl}api/Registration/${personalDataDerivedColumnsApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function (response) {
            if (response.success) {
                // Parse the data in the response
                const personalData = response.data;
                if (personalData.Age !== '') {
                    $('div#r_derived_Age div').append($('<span>').text(personalData.Age));
                } else {
                    $('div#r_derived_Age div').append($('<span>').html('&nbsp;'));
                }
                if (personalData.BMI !== '') {
                    $('div#r_derived_BMI div').append($('<span>').text(personalData.BMI));
                } else {
                    $('div#r_derived_BMI div').append($('<span>').html('&nbsp;'));
                }
                const totalDays = personalData.TotalSeaExperience;
                const durationInYears = Math.floor(totalDays / 365);
                const durationInMonths = Math.floor((totalDays % 365) / 30);
                const durationInDays = (totalDays % 365) % 30;
                const formattedDuration = `${durationInYears} Years ${durationInMonths} Months ${durationInDays} Days`;
                $('table#derived_SeaExperiences th#totalExperience').append($('<span>').css('font-weight', 'normal').text(formattedDuration));
                const seaExperiences = personalData.SeaExperiences;
                const tbody = $('table#derived_SeaExperiences tbody');
                if (seaExperiences.length > 0) {
                    for (let rowIndex = 0; rowIndex < seaExperiences.length; rowIndex++) {
                        const tr = $('<tr>'); // create a new tr element 
                        const row = seaExperiences[rowIndex];
                        const vesselTypeAbbreviationTd = $('<td>');
                        const vesselTypeAbbreviation = row['VesselTypeAbbreviation'];
                        const vesselTypeAbbreviationSpan = $('<span>').text(vesselTypeAbbreviation);
                        vesselTypeAbbreviationTd.append(vesselTypeAbbreviationSpan);
                        tr.append(vesselTypeAbbreviationTd);
                        const rankNameTd = $('<td>');
                        const rankName = row['RankName'];
                        const rankNameSpan = $('<span>').text(rankName);
                        rankNameTd.append(rankNameSpan);
                        tr.append(rankNameTd);
                        const experienceDurationTd = $('<td>');
                        const totalDays = row['ExperienceDuration'];
                        const durationInYears = Math.floor(totalDays / 365);
                        const durationInMonths = Math.floor((totalDays % 365) / 30);
                        const durationInDays = (totalDays % 365) % 30;
                        const formattedDuration = `${durationInYears} Years ${durationInMonths} Months ${durationInDays} Days`;
                        const experienceDurationSpan = $('<span>').text(formattedDuration);
                        experienceDurationTd.append(experienceDurationSpan);
                        tr.append(experienceDurationTd);
                        tbody.append(tr);
                    }
                } else {
                    const columnsCount = $('table#derived_SeaExperiences th.ew-table-header-cell').length;
                    for (let rowIndex = 0; rowIndex < 3; rowIndex++) {
                        const tr = $('<tr>'); // create a new tr element 
                        for (let columnIndex = 0; columnIndex < columnsCount; columnIndex++) {
                            const emptyTd = $('<td>').html('&nbsp;');
                            tr.append(emptyTd);
                        }
                        tbody.append(tr);
                    }
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function (xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });

    // gmandayu: notification need to read.
    const getUnreadNotificationUrl = `${parentUrl}api/Notification/unread-notification`;
    function loadPage() {
        $.ajax({
            url: getUnreadNotificationUrl,
            method: 'GET',
            success: function(response) {
                const notificationIcon = document.querySelector('.nav-icon.fa-bell');
                if(response.success)
                {
                    notificationIcon.classList.add('animate');
                }
                else 
                {
                    notificationIcon.classList.remove('animate');
                }
            },
            error: function(xhr, textStatus, errorThrown) {
                console.error('Kesalahan saat memuat notifikasi:', errorThrown);
            }
        });
    }
    $(document).ready(function() {
        loadPage();
    });
});
</script>
}
