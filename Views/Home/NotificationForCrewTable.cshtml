@if (notificationForCrewList.ModalGridAdd && notificationForCrewList.IsGridAdd || notificationForCrewList.ModalGridEdit && notificationForCrewList.IsGridEdit || notificationForCrewList.ModalMultiEdit && notificationForCrewList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(notificationForCrewList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { NotificationForCrew: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(notificationForCrewList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(notificationForCrewList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(notificationForCrewList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(notificationForCrewList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.1.0", "preview");
</script>
}
<div class="card ew-card ew-grid@(notificationForCrewList.IsAddOrEdit ? " ew-grid-add-edit" : "") @(notificationForCrewList.TableGridClass)">
<form name="@(notificationForCrewList.FormName)" id="@(notificationForCrewList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(notificationForCrewList.PageName)" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (notificationForCrewList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div id="gmp_NotificationForCrew" class="card-body ew-grid-middle-panel @(notificationForCrewList.TableContainerClass)" style="@(notificationForCrewList.TableContainerStyle)">
@if (notificationForCrewList.TotalRecords > 0 || notificationForCrewList.IsGridEdit || notificationForCrewList.IsMultiEdit) {
<table id="tbl_NotificationForCrewlist" class="@(notificationForCrewList.TableClass)"><!-- .ew-table -->
<thead>
    <tr class="ew-table-header">
@{
    // Header row
    notificationForCrewList.RowType = RowType.Header;

    // Render list options
    await notificationForCrewList.RenderListOptions();
}
@* Render list options (header, left) *@
@notificationForCrewList.ListOptions.RenderHeader("left")
@if (notificationForCrewList.Subject.Visible) { // notificationForCrewList.Subject.Visible (begin)
        <th data-name="Subject" class="@(notificationForCrewList.Subject.HeaderCellClass)" style="white-space: nowrap;"><div id="elh_NotificationForCrew_Subject" class="NotificationForCrew_Subject">@Html.Raw(notificationForCrewList.RenderFieldHeader(notificationForCrewList.Subject))</div></th>
} @* notificationForCrewList.Subject.Visible (end) *@
@if (notificationForCrewList.Body.Visible) { // notificationForCrewList.Body.Visible (begin)
        <th data-name="Body" class="@(notificationForCrewList.Body.HeaderCellClass)" style="white-space: nowrap;"><div id="elh_NotificationForCrew_Body" class="NotificationForCrew_Body">@Html.Raw(notificationForCrewList.RenderFieldHeader(notificationForCrewList.Body))</div></th>
} @* notificationForCrewList.Body.Visible (end) *@
@if (notificationForCrewList.CreatedDateTime.Visible) { // notificationForCrewList.CreatedDateTime.Visible (begin)
        <th data-name="CreatedDateTime" class="@(notificationForCrewList.CreatedDateTime.HeaderCellClass)" style="white-space: nowrap;"><div id="elh_NotificationForCrew_CreatedDateTime" class="NotificationForCrew_CreatedDateTime">@Html.Raw(notificationForCrewList.RenderFieldHeader(notificationForCrewList.CreatedDateTime))</div></th>
} @* notificationForCrewList.CreatedDateTime.Visible (end) *@
@if (notificationForCrewList.MarkAsRead.Visible) { // notificationForCrewList.MarkAsRead.Visible (begin)
        <th data-name="MarkAsRead" class="@(notificationForCrewList.MarkAsRead.HeaderCellClass)" style="white-space: nowrap;"><div id="elh_NotificationForCrew_MarkAsRead" class="NotificationForCrew_MarkAsRead">@Html.Raw(notificationForCrewList.RenderFieldHeader(notificationForCrewList.MarkAsRead))</div></th>
} @* notificationForCrewList.MarkAsRead.Visible (end) *@
@* Render list options (header, right) *@
@notificationForCrewList.ListOptions.RenderHeader("right")
    </tr>
</thead>
<tbody data-page="@(notificationForCrewList.PageNumber)">
@{
    await notificationForCrewList.SetupGrid();
    bool eof = notificationForCrewList.Recordset == null; // DN
}
@while (notificationForCrewList.RecordCount < notificationForCrewList.StopRecord || SameString(notificationForCrewList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(notificationForCrewList.RowIndex, "$rowindex$") &&
        (!notificationForCrewList.IsGridAdd || notificationForCrewList.CurrentMode == "copy") &&
        (!((notificationForCrewList.IsCopy || notificationForCrewList.IsAdd) && notificationForCrewList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await notificationForCrewList.Recordset.ReadAsync();
    notificationForCrewList.RecordCount++;
    if (notificationForCrewList.RecordCount >= notificationForCrewList.StartRecord) {
        await notificationForCrewList.SetupRow();
    <tr @Html.Raw(notificationForCrewList.RowAttributes)>
    @* Render list options (body, left) *@
    @notificationForCrewList.ListOptions.RenderBody("left", notificationForCrewList.RowCount)
    @if (notificationForCrewList.Subject.Visible) { // notificationForCrewList.Subject.Visible (begin)
        <td data-name="Subject" @Html.Raw(notificationForCrewList.Subject.CellAttributes)>
<span id="el@(notificationForCrewList.RowCount)_NotificationForCrew_Subject" class="el_NotificationForCrew_Subject">
<span @Html.Raw(notificationForCrewList.Subject.ViewAttributes)>
@Html.Raw(notificationForCrewList.Subject.GetViewValue())</span>
</span>
</td>
    } @* notificationForCrewList.Subject.Visible (end) *@
    @if (notificationForCrewList.Body.Visible) { // notificationForCrewList.Body.Visible (begin)
        <td data-name="Body" @Html.Raw(notificationForCrewList.Body.CellAttributes)>
<span id="el@(notificationForCrewList.RowCount)_NotificationForCrew_Body" class="el_NotificationForCrew_Body">
<span @Html.Raw(notificationForCrewList.Body.ViewAttributes)>
@Html.Raw(notificationForCrewList.Body.GetViewValue())</span>
</span>
</td>
    } @* notificationForCrewList.Body.Visible (end) *@
    @if (notificationForCrewList.CreatedDateTime.Visible) { // notificationForCrewList.CreatedDateTime.Visible (begin)
        <td data-name="CreatedDateTime" @Html.Raw(notificationForCrewList.CreatedDateTime.CellAttributes)>
<span id="el@(notificationForCrewList.RowCount)_NotificationForCrew_CreatedDateTime" class="el_NotificationForCrew_CreatedDateTime">
<span @Html.Raw(notificationForCrewList.CreatedDateTime.ViewAttributes)>
@Html.Raw(notificationForCrewList.CreatedDateTime.GetViewValue())</span>
</span>
</td>
    } @* notificationForCrewList.CreatedDateTime.Visible (end) *@
    @if (notificationForCrewList.MarkAsRead.Visible) { // notificationForCrewList.MarkAsRead.Visible (begin)
        <td data-name="MarkAsRead" @Html.Raw(notificationForCrewList.MarkAsRead.CellAttributes)>
<span id="el@(notificationForCrewList.RowCount)_NotificationForCrew_MarkAsRead" class="el_NotificationForCrew_MarkAsRead">
<span @Html.Raw(notificationForCrewList.MarkAsRead.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_MarkAsRead_@(notificationForCrewList.RowCount)" class="form-check-input" value="@(notificationForCrewList.MarkAsRead.GetViewValue())" disabled checked="@(ConvertToBool(notificationForCrewList.MarkAsRead.CurrentValue))">
    <label class="form-check-label" for="x_MarkAsRead_@(notificationForCrewList.RowCount)"></label>
</div></span>
</span>
</td>
    } @* notificationForCrewList.MarkAsRead.Visible (end) *@
    @* Render list options (body, right) *@
    @notificationForCrewList.ListOptions.RenderBody("right", notificationForCrewList.RowCount)
    </tr>
    } @* End if *@

    // Reset for template row
    if (SameString(notificationForCrewList.RowIndex, "$rowindex$"))
        notificationForCrewList.RowIndex = 0;

    // Reset inline add/copy row
    if ((notificationForCrewList.IsCopy || notificationForCrewList.IsAdd) && notificationForCrewList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        notificationForCrewList.RowIndex = 1;
} @* End While *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
</div><!-- /.ew-grid-middle-panel -->
@if (Empty(notificationForCrewList.CurrentAction) && !notificationForCrewList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ notificationForCrewList.CloseRecordset(); }
@if (!notificationForCrewList.IsExport()) {
<div class="card-footer ew-grid-lower-panel">
@if (!notificationForCrewList.IsGridAdd && !(notificationForCrewList.IsGridEdit && notificationForCrewList.ModalGridEdit) && !notificationForCrewList.IsMultiEdit) {
@Html.Raw(notificationForCrewList.Pager.Render())
}
<div class="ew-list-other-options">
@notificationForCrewList.OtherOptions.RenderBody("bottom")
</div>
</div>
}
</div><!-- /.ew-grid -->
