@{
    // View
    View = this;

    // Check action result
    if (trUpdateTrackingDelete.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!trUpdateTrackingDelete.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(trUpdateTrackingDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { TRUpdateTracking: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fTRUpdateTrackingdelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fTRUpdateTrackingdelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@trUpdateTrackingDelete.ShowPageHeader()
@trUpdateTrackingDelete.ShowMessages()
<form name="fTRUpdateTrackingdelete" id="fTRUpdateTrackingdelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in trUpdateTrackingDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(trUpdateTrackingDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(trUpdateTrackingDelete.TableContainerClass)" style="@(trUpdateTrackingDelete.TableContainerStyle)">
<table class="@(trUpdateTrackingDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (trUpdateTrackingDelete.ID.Visible) { // trUpdateTrackingDelete.ID.Visible (begin)
        <th class="@Html.Raw(trUpdateTrackingDelete.ID.HeaderCellClass)"><span id="elh_TRUpdateTracking_ID" class="TRUpdateTracking_ID">@Html.Raw(trUpdateTrackingDelete.ID.Caption)</span></th>
} @* trUpdateTrackingDelete.ID.Visible (end) *@
@if (trUpdateTrackingDelete.MTCrewID.Visible) { // trUpdateTrackingDelete.MTCrewID.Visible (begin)
        <th class="@Html.Raw(trUpdateTrackingDelete.MTCrewID.HeaderCellClass)"><span id="elh_TRUpdateTracking_MTCrewID" class="TRUpdateTracking_MTCrewID">@Html.Raw(trUpdateTrackingDelete.MTCrewID.Caption)</span></th>
} @* trUpdateTrackingDelete.MTCrewID.Visible (end) *@
@if (trUpdateTrackingDelete.TabName.Visible) { // trUpdateTrackingDelete.TabName.Visible (begin)
        <th class="@Html.Raw(trUpdateTrackingDelete.TabName.HeaderCellClass)"><span id="elh_TRUpdateTracking_TabName" class="TRUpdateTracking_TabName">@Html.Raw(trUpdateTrackingDelete.TabName.Caption)</span></th>
} @* trUpdateTrackingDelete.TabName.Visible (end) *@
@if (trUpdateTrackingDelete.ColumnName.Visible) { // trUpdateTrackingDelete.ColumnName.Visible (begin)
        <th class="@Html.Raw(trUpdateTrackingDelete.ColumnName.HeaderCellClass)"><span id="elh_TRUpdateTracking_ColumnName" class="TRUpdateTracking_ColumnName">@Html.Raw(trUpdateTrackingDelete.ColumnName.Caption)</span></th>
} @* trUpdateTrackingDelete.ColumnName.Visible (end) *@
@if (trUpdateTrackingDelete.ChangeType.Visible) { // trUpdateTrackingDelete.ChangeType.Visible (begin)
        <th class="@Html.Raw(trUpdateTrackingDelete.ChangeType.HeaderCellClass)"><span id="elh_TRUpdateTracking_ChangeType" class="TRUpdateTracking_ChangeType">@Html.Raw(trUpdateTrackingDelete.ChangeType.Caption)</span></th>
} @* trUpdateTrackingDelete.ChangeType.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ trUpdateTrackingDelete.RecordCount = 0; }
@while (trUpdateTrackingDelete.Recordset != null && await trUpdateTrackingDelete.Recordset.ReadAsync()) { // DN
    trUpdateTrackingDelete.RecordCount++;
    trUpdateTrackingDelete.RowCount++;

    // Set row properties
    trUpdateTrackingDelete.ResetAttributes();
    trUpdateTrackingDelete.RowType = RowType.View; // View

    // Get the field contents
    await trUpdateTrackingDelete.LoadRowValues(trUpdateTrackingDelete.Recordset);

    // Render row
    await trUpdateTrackingDelete.RenderRow();
    <tr @Html.Raw(trUpdateTrackingDelete.RowAttributes)>
@if (trUpdateTrackingDelete.ID.Visible) { // trUpdateTrackingDelete.ID.Visible (begin)
        <td @Html.Raw(trUpdateTrackingDelete.ID.CellAttributes)>
<span id="el@(trUpdateTrackingDelete.RowCount)_TRUpdateTracking_ID" class="el_TRUpdateTracking_ID">
<span @Html.Raw(trUpdateTrackingDelete.ID.ViewAttributes)>
@Html.Raw(trUpdateTrackingDelete.ID.GetViewValue())</span>
</span></td>
} @* trUpdateTrackingDelete.ID.Visible (end) *@
@if (trUpdateTrackingDelete.MTCrewID.Visible) { // trUpdateTrackingDelete.MTCrewID.Visible (begin)
        <td @Html.Raw(trUpdateTrackingDelete.MTCrewID.CellAttributes)>
<span id="el@(trUpdateTrackingDelete.RowCount)_TRUpdateTracking_MTCrewID" class="el_TRUpdateTracking_MTCrewID">
<span @Html.Raw(trUpdateTrackingDelete.MTCrewID.ViewAttributes)>
@Html.Raw(trUpdateTrackingDelete.MTCrewID.GetViewValue())</span>
</span></td>
} @* trUpdateTrackingDelete.MTCrewID.Visible (end) *@
@if (trUpdateTrackingDelete.TabName.Visible) { // trUpdateTrackingDelete.TabName.Visible (begin)
        <td @Html.Raw(trUpdateTrackingDelete.TabName.CellAttributes)>
<span id="el@(trUpdateTrackingDelete.RowCount)_TRUpdateTracking_TabName" class="el_TRUpdateTracking_TabName">
<span @Html.Raw(trUpdateTrackingDelete.TabName.ViewAttributes)>
@Html.Raw(trUpdateTrackingDelete.TabName.GetViewValue())</span>
</span></td>
} @* trUpdateTrackingDelete.TabName.Visible (end) *@
@if (trUpdateTrackingDelete.ColumnName.Visible) { // trUpdateTrackingDelete.ColumnName.Visible (begin)
        <td @Html.Raw(trUpdateTrackingDelete.ColumnName.CellAttributes)>
<span id="el@(trUpdateTrackingDelete.RowCount)_TRUpdateTracking_ColumnName" class="el_TRUpdateTracking_ColumnName">
<span @Html.Raw(trUpdateTrackingDelete.ColumnName.ViewAttributes)>
@Html.Raw(trUpdateTrackingDelete.ColumnName.GetViewValue())</span>
</span></td>
} @* trUpdateTrackingDelete.ColumnName.Visible (end) *@
@if (trUpdateTrackingDelete.ChangeType.Visible) { // trUpdateTrackingDelete.ChangeType.Visible (begin)
        <td @Html.Raw(trUpdateTrackingDelete.ChangeType.CellAttributes)>
<span id="el@(trUpdateTrackingDelete.RowCount)_TRUpdateTracking_ChangeType" class="el_TRUpdateTracking_ChangeType">
<span @Html.Raw(trUpdateTrackingDelete.ChangeType.ViewAttributes)>
@Html.Raw(trUpdateTrackingDelete.ChangeType.GetViewValue())</span>
</span></td>
} @* trUpdateTrackingDelete.ChangeType.Visible (end) *@
    </tr>
}
@{ trUpdateTrackingDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(trUpdateTrackingDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@trUpdateTrackingDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
