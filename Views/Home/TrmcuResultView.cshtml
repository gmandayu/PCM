@{
    // View
    View = this;

    // Check action result
    if (trmcuResultView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!trmcuResultView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!trmcuResultView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!trmcuResultView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @trmcuResultView.ExportOptions.RenderBody()
    @trmcuResultView.OtherOptions.RenderBody()
</div>
}
@trmcuResultView.ShowPageHeader()
@trmcuResultView.ShowMessages()
<main class="view">
<form name="fTRMCUResultview" id="fTRMCUResultview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!trmcuResultView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(trmcuResultView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { TRMCUResult: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fTRMCUResultview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fTRMCUResultview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(trmcuResultView.IsModal)">
<table class="@(trmcuResultView.TableClass)">
@if (trmcuResultView.MTCrew_ID.Visible) { // trmcuResultView.MTCrew_ID.Visible (begin)
    <tr id="r_MTCrew_ID" @Html.Raw(trmcuResultView.MTCrew_ID.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_MTCrew_ID">@Html.Raw(trmcuResultView.MTCrew_ID.Caption)</span></td>
        <td data-name="MTCrew_ID" @Html.Raw(trmcuResultView.MTCrew_ID.CellAttributes)>
<span id="el_TRMCUResult_MTCrew_ID">
<span @Html.Raw(trmcuResultView.MTCrew_ID.ViewAttributes)>
@Html.Raw(trmcuResultView.MTCrew_ID.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.MTCrew_ID.Visible (end) *@
@if (trmcuResultView.McuDate.Visible) { // trmcuResultView.McuDate.Visible (begin)
    <tr id="r_McuDate" @Html.Raw(trmcuResultView.McuDate.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuDate">@Html.Raw(trmcuResultView.McuDate.Caption)</span></td>
        <td data-name="McuDate" @Html.Raw(trmcuResultView.McuDate.CellAttributes)>
<span id="el_TRMCUResult_McuDate">
<span @Html.Raw(trmcuResultView.McuDate.ViewAttributes)>
@Html.Raw(trmcuResultView.McuDate.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.McuDate.Visible (end) *@
@if (trmcuResultView.McuExpirationDate.Visible) { // trmcuResultView.McuExpirationDate.Visible (begin)
    <tr id="r_McuExpirationDate" @Html.Raw(trmcuResultView.McuExpirationDate.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuExpirationDate">@Html.Raw(trmcuResultView.McuExpirationDate.Caption)</span></td>
        <td data-name="McuExpirationDate" @Html.Raw(trmcuResultView.McuExpirationDate.CellAttributes)>
<span id="el_TRMCUResult_McuExpirationDate">
<span @Html.Raw(trmcuResultView.McuExpirationDate.ViewAttributes)>
@Html.Raw(trmcuResultView.McuExpirationDate.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.McuExpirationDate.Visible (end) *@
@if (trmcuResultView.HealthStatus.Visible) { // trmcuResultView.HealthStatus.Visible (begin)
    <tr id="r_HealthStatus" @Html.Raw(trmcuResultView.HealthStatus.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_HealthStatus">@Html.Raw(trmcuResultView.HealthStatus.Caption)</span></td>
        <td data-name="HealthStatus" @Html.Raw(trmcuResultView.HealthStatus.CellAttributes)>
<span id="el_TRMCUResult_HealthStatus">
<span @Html.Raw(trmcuResultView.HealthStatus.ViewAttributes)>
@Html.Raw(trmcuResultView.HealthStatus.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.HealthStatus.Visible (end) *@
@if (trmcuResultView.McuLocation.Visible) { // trmcuResultView.McuLocation.Visible (begin)
    <tr id="r_McuLocation" @Html.Raw(trmcuResultView.McuLocation.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuLocation">@Html.Raw(trmcuResultView.McuLocation.Caption)</span></td>
        <td data-name="McuLocation" @Html.Raw(trmcuResultView.McuLocation.CellAttributes)>
<span id="el_TRMCUResult_McuLocation">
<span @Html.Raw(trmcuResultView.McuLocation.ViewAttributes)>
@Html.Raw(trmcuResultView.McuLocation.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.McuLocation.Visible (end) *@
@if (trmcuResultView.McuAttachment.Visible) { // trmcuResultView.McuAttachment.Visible (begin)
    <tr id="r_McuAttachment" @Html.Raw(trmcuResultView.McuAttachment.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuAttachment">@Html.Raw(trmcuResultView.McuAttachment.Caption)</span></td>
        <td data-name="McuAttachment" @Html.Raw(trmcuResultView.McuAttachment.CellAttributes)>
<span id="el_TRMCUResult_McuAttachment">
<span @Html.Raw(trmcuResultView.McuAttachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)trmcuResultView.McuAttachment, ConvertToString(trmcuResultView.McuAttachment.GetViewValue()), false))
</span>
</span></td>
    </tr>
} @* trmcuResultView.McuAttachment.Visible (end) *@
@if (trmcuResultView.McuScheduleDate.Visible) { // trmcuResultView.McuScheduleDate.Visible (begin)
    <tr id="r_McuScheduleDate" @Html.Raw(trmcuResultView.McuScheduleDate.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuScheduleDate">@Html.Raw(trmcuResultView.McuScheduleDate.Caption)</span></td>
        <td data-name="McuScheduleDate" @Html.Raw(trmcuResultView.McuScheduleDate.CellAttributes)>
<span id="el_TRMCUResult_McuScheduleDate">
<span @Html.Raw(trmcuResultView.McuScheduleDate.ViewAttributes)>
@Html.Raw(trmcuResultView.McuScheduleDate.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.McuScheduleDate.Visible (end) *@
@if (trmcuResultView.McuRemark.Visible) { // trmcuResultView.McuRemark.Visible (begin)
    <tr id="r_McuRemark" @Html.Raw(trmcuResultView.McuRemark.RowAttributes)>
        <td class="@(trmcuResultView.TableLeftColumnClass)"><span id="elh_TRMCUResult_McuRemark">@Html.Raw(trmcuResultView.McuRemark.Caption)</span></td>
        <td data-name="McuRemark" @Html.Raw(trmcuResultView.McuRemark.CellAttributes)>
<span id="el_TRMCUResult_McuRemark">
<span @Html.Raw(trmcuResultView.McuRemark.ViewAttributes)>
@Html.Raw(trmcuResultView.McuRemark.GetViewValue())</span>
</span></td>
    </tr>
} @* trmcuResultView.McuRemark.Visible (end) *@
</table>
@{ trmcuResultView.CloseRecordset(); }
</form>
</main>
@trmcuResultView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!trmcuResultView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
