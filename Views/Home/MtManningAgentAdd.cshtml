@{
    // View
    View = this;

    // Check action result
    if (mtManningAgentAdd.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtManningAgentAdd.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(mtManningAgentAdd.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTManningAgent: currentTable } });
var currentPageID = ew.PAGE_ID = "add";
var currentForm;
var fMTManningAgentadd;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTManningAgentadd")
        .setPageId("add")

        // Add fields
        .setFields([

            ["Code", [fields.Code.visible && fields.Code.required ? ew.Validators.required(fields.Code.caption) : null], fields.Code.isInvalid],
            ["_Name", [fields._Name.visible && fields._Name.required ? ew.Validators.required(fields._Name.caption) : null], fields._Name.isInvalid],
            ["Active", [fields.Active.visible && fields.Active.required ? ew.Validators.required(fields.Active.caption) : null], fields.Active.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Active": @Html.Raw(mtManningAgentAdd.Active.ToClientList(mtManningAgentAdd)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtManningAgentAdd.ShowPageHeader()
@mtManningAgentAdd.ShowMessages()
<form name="fMTManningAgentadd" id="fMTManningAgentadd" class="@(mtManningAgentAdd.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(mtManningAgentAdd.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtManningAgentAdd.OldKeyName)" value="@Html.Raw(mtManningAgentAdd.OldKey)">
<div class="ew-add-div"><!-- page* -->
@if (mtManningAgentAdd.Code.Visible) { // mtManningAgentAdd.Code.Visible (begin)
    <div id="r_Code" @Html.Raw(mtManningAgentAdd.Code.RowAttributes)>
        <label id="elh_MTManningAgent_Code" for="x_Code" class="@(mtManningAgentAdd.LeftColumnClass)">@Html.Raw(mtManningAgentAdd.Code.Caption)@Html.Raw(mtManningAgentAdd.Code.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtManningAgentAdd.RightColumnClass)"><div @Html.Raw(mtManningAgentAdd.Code.CellAttributes)>
<span id="el_MTManningAgent_Code">
<input type="@(mtManningAgentAdd.Code.InputTextType)" name="x_Code" id="x_Code" data-table="MTManningAgent" data-field="x_Code" value="@Html.Raw(mtManningAgentAdd.Code.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtManningAgentAdd.Code.PlaceHolder))" data-format-pattern="@(mtManningAgentAdd.Code.FormatPattern)"@Html.Raw(mtManningAgentAdd.Code.EditAttributes) aria-describedby="x_Code_help">
@Html.Raw(mtManningAgentAdd.Code.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtManningAgentAdd.Code.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtManningAgentAdd.Code.Visible (end) *@
@if (mtManningAgentAdd._Name.Visible) { // mtManningAgentAdd._Name.Visible (begin)
    <div id="r__Name" @Html.Raw(mtManningAgentAdd._Name.RowAttributes)>
        <label id="elh_MTManningAgent__Name" for="x__Name" class="@(mtManningAgentAdd.LeftColumnClass)">@Html.Raw(mtManningAgentAdd._Name.Caption)@Html.Raw(mtManningAgentAdd._Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtManningAgentAdd.RightColumnClass)"><div @Html.Raw(mtManningAgentAdd._Name.CellAttributes)>
<span id="el_MTManningAgent__Name">
<input type="@(mtManningAgentAdd._Name.InputTextType)" name="x__Name" id="x__Name" data-table="MTManningAgent" data-field="x__Name" value="@Html.Raw(mtManningAgentAdd._Name.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtManningAgentAdd._Name.PlaceHolder))" data-format-pattern="@(mtManningAgentAdd._Name.FormatPattern)"@Html.Raw(mtManningAgentAdd._Name.EditAttributes) aria-describedby="x__Name_help">
@Html.Raw(mtManningAgentAdd._Name.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtManningAgentAdd._Name.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtManningAgentAdd._Name.Visible (end) *@
@if (mtManningAgentAdd.Active.Visible) { // mtManningAgentAdd.Active.Visible (begin)
    <div id="r_Active" @Html.Raw(mtManningAgentAdd.Active.RowAttributes)>
        <label id="elh_MTManningAgent_Active" class="@(mtManningAgentAdd.LeftColumnClass)">@Html.Raw(mtManningAgentAdd.Active.Caption)@Html.Raw(mtManningAgentAdd.Active.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtManningAgentAdd.RightColumnClass)"><div @Html.Raw(mtManningAgentAdd.Active.CellAttributes)>
<span id="el_MTManningAgent_Active">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtManningAgentAdd.Active.IsInvalidClass)" data-table="MTManningAgent" data-field="x_Active" data-boolean name="x_Active" id="x_Active" value="1" checked="@ConvertToBool(mtManningAgentAdd.Active.CurrentValue)" @Html.Raw(mtManningAgentAdd.Active.EditAttributes) aria-describedby="x_Active_help">
    <div class="invalid-feedback">@Html.Raw(mtManningAgentAdd.Active.GetErrorMessage())</div>
</div>
@Html.Raw(mtManningAgentAdd.Active.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtManningAgentAdd.Active.Visible (end) *@
</div><!-- /page* -->
@{ mtManningAgentAdd.CloseRecordset(); }
@Html.Raw(mtManningAgentAdd.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtManningAgentAdd.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTManningAgentadd">@Html.Raw(Language.Phrase("AddBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTManningAgentadd" data-href="@AppPath(mtManningAgentAdd.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtManningAgentAdd.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@mtManningAgentAdd.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTManningAgent");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
