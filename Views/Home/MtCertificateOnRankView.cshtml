@{
    // View
    View = this;

    // Check action result
    if (mtCertificateOnRankView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtCertificateOnRankView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!mtCertificateOnRankView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!mtCertificateOnRankView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @mtCertificateOnRankView.ExportOptions.RenderBody()
    @mtCertificateOnRankView.OtherOptions.RenderBody()
</div>
}
@mtCertificateOnRankView.ShowPageHeader()
@mtCertificateOnRankView.ShowMessages()
<main class="view">
<form name="fMTCertificateOnRankview" id="fMTCertificateOnRankview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!mtCertificateOnRankView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(mtCertificateOnRankView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTCertificateOnRank: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fMTCertificateOnRankview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTCertificateOnRankview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(mtCertificateOnRankView.IsModal)">
<table class="@(mtCertificateOnRankView.TableClass)">
@if (mtCertificateOnRankView.MTRankID.Visible) { // mtCertificateOnRankView.MTRankID.Visible (begin)
    <tr id="r_MTRankID" @Html.Raw(mtCertificateOnRankView.MTRankID.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_MTRankID">@Html.Raw(mtCertificateOnRankView.MTRankID.Caption)</span></td>
        <td data-name="MTRankID" @Html.Raw(mtCertificateOnRankView.MTRankID.CellAttributes)>
<span id="el_MTCertificateOnRank_MTRankID">
<span @Html.Raw(mtCertificateOnRankView.MTRankID.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.MTRankID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.MTRankID.Visible (end) *@
@if (mtCertificateOnRankView.MTCertificateID.Visible) { // mtCertificateOnRankView.MTCertificateID.Visible (begin)
    <tr id="r_MTCertificateID" @Html.Raw(mtCertificateOnRankView.MTCertificateID.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_MTCertificateID">@Html.Raw(mtCertificateOnRankView.MTCertificateID.Caption)</span></td>
        <td data-name="MTCertificateID" @Html.Raw(mtCertificateOnRankView.MTCertificateID.CellAttributes)>
<span id="el_MTCertificateOnRank_MTCertificateID">
<span @Html.Raw(mtCertificateOnRankView.MTCertificateID.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.MTCertificateID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.MTCertificateID.Visible (end) *@
@if (mtCertificateOnRankView.CreatedByUserID.Visible) { // mtCertificateOnRankView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(mtCertificateOnRankView.CreatedByUserID.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_CreatedByUserID">@Html.Raw(mtCertificateOnRankView.CreatedByUserID.Caption)</span></td>
        <td data-name="CreatedByUserID" @Html.Raw(mtCertificateOnRankView.CreatedByUserID.CellAttributes)>
<span id="el_MTCertificateOnRank_CreatedByUserID">
<span @Html.Raw(mtCertificateOnRankView.CreatedByUserID.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.CreatedByUserID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.CreatedByUserID.Visible (end) *@
@if (mtCertificateOnRankView.CreatedDateTime.Visible) { // mtCertificateOnRankView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(mtCertificateOnRankView.CreatedDateTime.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_CreatedDateTime">@Html.Raw(mtCertificateOnRankView.CreatedDateTime.Caption)</span></td>
        <td data-name="CreatedDateTime" @Html.Raw(mtCertificateOnRankView.CreatedDateTime.CellAttributes)>
<span id="el_MTCertificateOnRank_CreatedDateTime">
<span @Html.Raw(mtCertificateOnRankView.CreatedDateTime.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.CreatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.CreatedDateTime.Visible (end) *@
@if (mtCertificateOnRankView.LastUpdatedByUserID.Visible) { // mtCertificateOnRankView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(mtCertificateOnRankView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_LastUpdatedByUserID">@Html.Raw(mtCertificateOnRankView.LastUpdatedByUserID.Caption)</span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(mtCertificateOnRankView.LastUpdatedByUserID.CellAttributes)>
<span id="el_MTCertificateOnRank_LastUpdatedByUserID">
<span @Html.Raw(mtCertificateOnRankView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.LastUpdatedByUserID.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.LastUpdatedByUserID.Visible (end) *@
@if (mtCertificateOnRankView.LastUpdatedDateTime.Visible) { // mtCertificateOnRankView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(mtCertificateOnRankView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(mtCertificateOnRankView.TableLeftColumnClass)"><span id="elh_MTCertificateOnRank_LastUpdatedDateTime">@Html.Raw(mtCertificateOnRankView.LastUpdatedDateTime.Caption)</span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(mtCertificateOnRankView.LastUpdatedDateTime.CellAttributes)>
<span id="el_MTCertificateOnRank_LastUpdatedDateTime">
<span @Html.Raw(mtCertificateOnRankView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(mtCertificateOnRankView.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* mtCertificateOnRankView.LastUpdatedDateTime.Visible (end) *@
</table>
@{ mtCertificateOnRankView.CloseRecordset(); }
</form>
</main>
@mtCertificateOnRankView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!mtCertificateOnRankView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
