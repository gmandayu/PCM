@{
    // View
    View = this;

    // Check action result
    if (vCrewTrackingStatusEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!vCrewTrackingStatusEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@vCrewTrackingStatusEdit.ShowPageHeader()
@vCrewTrackingStatusEdit.ShowMessages()
<main class="edit">
<form name="fv_CrewTrackingStatusedit" id="fv_CrewTrackingStatusedit" class="@(vCrewTrackingStatusEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(vCrewTrackingStatusEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { v_CrewTrackingStatus: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fv_CrewTrackingStatusedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fv_CrewTrackingStatusedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["IndividualCodeNumber", [fields.IndividualCodeNumber.visible && fields.IndividualCodeNumber.required ? ew.Validators.required(fields.IndividualCodeNumber.caption) : null], fields.IndividualCodeNumber.isInvalid],
            ["FullName", [fields.FullName.visible && fields.FullName.required ? ew.Validators.required(fields.FullName.caption) : null], fields.FullName.isInvalid],
            ["RequiredPhoto", [fields.RequiredPhoto.visible && fields.RequiredPhoto.required ? ew.Validators.required(fields.RequiredPhoto.caption) : null], fields.RequiredPhoto.isInvalid],
            ["VisaPhoto", [fields.VisaPhoto.visible && fields.VisaPhoto.required ? ew.Validators.required(fields.VisaPhoto.caption) : null], fields.VisaPhoto.isInvalid],
            ["Gender", [fields.Gender.visible && fields.Gender.required ? ew.Validators.required(fields.Gender.caption) : null], fields.Gender.isInvalid],
            ["WillAcceptLowRank", [fields.WillAcceptLowRank.visible && fields.WillAcceptLowRank.required ? ew.Validators.required(fields.WillAcceptLowRank.caption) : null], fields.WillAcceptLowRank.isInvalid],
            ["EmployeeStatus", [fields.EmployeeStatus.visible && fields.EmployeeStatus.required ? ew.Validators.required(fields.EmployeeStatus.caption) : null], fields.EmployeeStatus.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Gender": @Html.Raw(vCrewTrackingStatusEdit.Gender.ToClientList(vCrewTrackingStatusEdit)),
            "WillAcceptLowRank": @Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.ToClientList(vCrewTrackingStatusEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(vCrewTrackingStatusEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(vCrewTrackingStatusEdit.OldKeyName)" value="@Html.Raw(vCrewTrackingStatusEdit.OldKey)">
<div class="ew-edit-div"><!-- page* -->
@if (vCrewTrackingStatusEdit.IndividualCodeNumber.Visible) { // vCrewTrackingStatusEdit.IndividualCodeNumber.Visible (begin)
    <div id="r_IndividualCodeNumber" @Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_IndividualCodeNumber" for="x_IndividualCodeNumber" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.Caption)@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.CellAttributes)>
<span id="el_v_CrewTrackingStatus_IndividualCodeNumber">
<input type="@(vCrewTrackingStatusEdit.IndividualCodeNumber.InputTextType)" name="x_IndividualCodeNumber" id="x_IndividualCodeNumber" data-table="v_CrewTrackingStatus" data-field="x_IndividualCodeNumber" value="@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.IndividualCodeNumber.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.IndividualCodeNumber.FormatPattern)"@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.EditAttributes) aria-describedby="x_IndividualCodeNumber_help">
@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.IndividualCodeNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.IndividualCodeNumber.Visible (end) *@
@if (vCrewTrackingStatusEdit.FullName.Visible) { // vCrewTrackingStatusEdit.FullName.Visible (begin)
    <div id="r_FullName" @Html.Raw(vCrewTrackingStatusEdit.FullName.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_FullName" for="x_FullName" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.FullName.Caption)@Html.Raw(vCrewTrackingStatusEdit.FullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.FullName.CellAttributes)>
<span id="el_v_CrewTrackingStatus_FullName">
<input type="@(vCrewTrackingStatusEdit.FullName.InputTextType)" name="x_FullName" id="x_FullName" data-table="v_CrewTrackingStatus" data-field="x_FullName" value="@Html.Raw(vCrewTrackingStatusEdit.FullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.FullName.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.FullName.FormatPattern)"@Html.Raw(vCrewTrackingStatusEdit.FullName.EditAttributes) aria-describedby="x_FullName_help">
@Html.Raw(vCrewTrackingStatusEdit.FullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.FullName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.FullName.Visible (end) *@
@if (vCrewTrackingStatusEdit.RequiredPhoto.Visible) { // vCrewTrackingStatusEdit.RequiredPhoto.Visible (begin)
    <div id="r_RequiredPhoto" @Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_RequiredPhoto" for="x_RequiredPhoto" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.Caption)@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.CellAttributes)>
<span id="el_v_CrewTrackingStatus_RequiredPhoto">
<input type="@(vCrewTrackingStatusEdit.RequiredPhoto.InputTextType)" name="x_RequiredPhoto" id="x_RequiredPhoto" data-table="v_CrewTrackingStatus" data-field="x_RequiredPhoto" value="@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.RequiredPhoto.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.RequiredPhoto.FormatPattern)"@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.EditAttributes) aria-describedby="x_RequiredPhoto_help">
@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.RequiredPhoto.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.RequiredPhoto.Visible (end) *@
@if (vCrewTrackingStatusEdit.VisaPhoto.Visible) { // vCrewTrackingStatusEdit.VisaPhoto.Visible (begin)
    <div id="r_VisaPhoto" @Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_VisaPhoto" for="x_VisaPhoto" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.Caption)@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.CellAttributes)>
<span id="el_v_CrewTrackingStatus_VisaPhoto">
<input type="@(vCrewTrackingStatusEdit.VisaPhoto.InputTextType)" name="x_VisaPhoto" id="x_VisaPhoto" data-table="v_CrewTrackingStatus" data-field="x_VisaPhoto" value="@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.VisaPhoto.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.VisaPhoto.FormatPattern)"@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.EditAttributes) aria-describedby="x_VisaPhoto_help">
@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.VisaPhoto.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.VisaPhoto.Visible (end) *@
@if (vCrewTrackingStatusEdit.Gender.Visible) { // vCrewTrackingStatusEdit.Gender.Visible (begin)
    <div id="r_Gender" @Html.Raw(vCrewTrackingStatusEdit.Gender.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_Gender" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.Gender.Caption)@Html.Raw(vCrewTrackingStatusEdit.Gender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.Gender.CellAttributes)>
<span id="el_v_CrewTrackingStatus_Gender">
<span>@{
    if (IsRTL) {
        vCrewTrackingStatusEdit.Gender.EditAttrs["dir"] = "rtl";
    }
}</span>
<span id="as_x_Gender" class="ew-auto-suggest">
    <input type="text" class="form-control" name="sv_x_Gender" id="sv_x_Gender" value="@(RemoveHtml(ConvertToString(vCrewTrackingStatusEdit.Gender.EditValue)))" autocomplete="off" size="30" maxlength="1" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.Gender.PlaceHolder))" data-placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.Gender.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.Gender.FormatPattern)" @Html.Raw(vCrewTrackingStatusEdit.Gender.EditAttributes) aria-describedby="x_Gender_help">
</span>
<selection-list hidden class="form-control" data-table="v_CrewTrackingStatus" data-field="x_Gender" data-input="sv_x_Gender" data-value-separator="@(vCrewTrackingStatusEdit.Gender.DisplayValueSeparatorAttribute)" name="x_Gender" id="x_Gender" value="@(HtmlEncode(vCrewTrackingStatusEdit.Gender.CurrentValue))"></selection-list>
@Html.Raw(vCrewTrackingStatusEdit.Gender.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.Gender.GetErrorMessage())</div>
<script>
loadjs.ready(["fv_CrewTrackingStatusedit"], function() {
    fv_CrewTrackingStatusedit.createAutoSuggest(Object.assign({"id":"x_Gender","forceSelect":false}, { lookupAllDisplayFields: @(vCrewTrackingStatusEdit.Gender.Lookup.LookupAllDisplayFields ? "true" : "false") }, ew.vars.tables.v_CrewTrackingStatus.fields.Gender.autoSuggestOptions));
});
</script>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.Gender.Visible (end) *@
@if (vCrewTrackingStatusEdit.WillAcceptLowRank.Visible) { // vCrewTrackingStatusEdit.WillAcceptLowRank.Visible (begin)
    <div id="r_WillAcceptLowRank" @Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_WillAcceptLowRank" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.Caption)@Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.CellAttributes)>
<span id="el_v_CrewTrackingStatus_WillAcceptLowRank">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(vCrewTrackingStatusEdit.WillAcceptLowRank.IsInvalidClass)" data-table="v_CrewTrackingStatus" data-field="x_WillAcceptLowRank" data-boolean name="x_WillAcceptLowRank" id="x_WillAcceptLowRank" value="1" checked="@ConvertToBool(vCrewTrackingStatusEdit.WillAcceptLowRank.CurrentValue)" @Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.EditAttributes) aria-describedby="x_WillAcceptLowRank_help">
    <div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.GetErrorMessage())</div>
</div>
@Html.Raw(vCrewTrackingStatusEdit.WillAcceptLowRank.GetCustomMessage)
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.WillAcceptLowRank.Visible (end) *@
@if (vCrewTrackingStatusEdit.EmployeeStatus.Visible) { // vCrewTrackingStatusEdit.EmployeeStatus.Visible (begin)
    <div id="r_EmployeeStatus" @Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.RowAttributes)>
        <label id="elh_v_CrewTrackingStatus_EmployeeStatus" for="x_EmployeeStatus" class="@(vCrewTrackingStatusEdit.LeftColumnClass)">@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.Caption)@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(vCrewTrackingStatusEdit.RightColumnClass)"><div @Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.CellAttributes)>
<span id="el_v_CrewTrackingStatus_EmployeeStatus">
<input type="@(vCrewTrackingStatusEdit.EmployeeStatus.InputTextType)" name="x_EmployeeStatus" id="x_EmployeeStatus" data-table="v_CrewTrackingStatus" data-field="x_EmployeeStatus" value="@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.EmployeeStatus.PlaceHolder))" data-format-pattern="@(vCrewTrackingStatusEdit.EmployeeStatus.FormatPattern)"@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.EditAttributes) aria-describedby="x_EmployeeStatus_help">
@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(vCrewTrackingStatusEdit.EmployeeStatus.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* vCrewTrackingStatusEdit.EmployeeStatus.Visible (end) *@
</div><!-- /page* -->
    <input type="hidden" data-table="v_CrewTrackingStatus" data-field="x_ID" data-hidden="1" name="x_ID" id="x_ID" value="@Html.Raw(HtmlEncode(vCrewTrackingStatusEdit.ID.CurrentValue))">
@{ vCrewTrackingStatusEdit.CloseRecordset(); }
@Html.Raw(vCrewTrackingStatusEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(vCrewTrackingStatusEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fv_CrewTrackingStatusedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fv_CrewTrackingStatusedit" data-href="@AppPath(vCrewTrackingStatusEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(vCrewTrackingStatusEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
</main>
@vCrewTrackingStatusEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("v_CrewTrackingStatus");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
