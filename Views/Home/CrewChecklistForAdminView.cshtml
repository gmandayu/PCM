@{
    // View
    View = this;

    // Check action result
    if (crewChecklistForAdminView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewChecklistForAdminView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewChecklistForAdminView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewChecklistForAdminView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewChecklistForAdminView.ExportOptions.RenderBody()
    @crewChecklistForAdminView.OtherOptions.RenderBody()
</div>
}
@crewChecklistForAdminView.ShowPageHeader()
@crewChecklistForAdminView.ShowMessages()
<main class="view">
<form name="fCrewChecklistForAdminview" id="fCrewChecklistForAdminview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewChecklistForAdminView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewChecklistForAdminView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewChecklistForAdmin: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewChecklistForAdminview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewChecklistForAdminview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewChecklistForAdminView.IsModal)">
<table class="@(crewChecklistForAdminView.TableClass)">
@if (crewChecklistForAdminView.MTCrewID.Visible) { // crewChecklistForAdminView.MTCrewID.Visible (begin)
    <tr id="r_MTCrewID" @Html.Raw(crewChecklistForAdminView.MTCrewID.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_MTCrewID"><template id="tpc_CrewChecklistForAdmin_MTCrewID">@Html.Raw(crewChecklistForAdminView.MTCrewID.Caption)</template></span></td>
        <td data-name="MTCrewID" @Html.Raw(crewChecklistForAdminView.MTCrewID.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_MTCrewID"><span id="el_CrewChecklistForAdmin_MTCrewID">
<span @Html.Raw(crewChecklistForAdminView.MTCrewID.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.MTCrewID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.MTCrewID.Visible (end) *@
@if (crewChecklistForAdminView.Activity10.Visible) { // crewChecklistForAdminView.Activity10.Visible (begin)
    <tr id="r_Activity10" @Html.Raw(crewChecklistForAdminView.Activity10.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity10"><template id="tpc_CrewChecklistForAdmin_Activity10">@Html.Raw(crewChecklistForAdminView.Activity10.Caption)</template></span></td>
        <td data-name="Activity10" @Html.Raw(crewChecklistForAdminView.Activity10.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity10"><span id="el_CrewChecklistForAdmin_Activity10">
<span @Html.Raw(crewChecklistForAdminView.Activity10.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity10_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity10.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity10.CurrentValue))">
    <label class="form-check-label" for="x_Activity10_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity10.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity10.Visible) { // crewChecklistForAdminView.RemarkActivity10.Visible (begin)
    <tr id="r_RemarkActivity10" @Html.Raw(crewChecklistForAdminView.RemarkActivity10.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity10"><template id="tpc_CrewChecklistForAdmin_RemarkActivity10">@Html.Raw(crewChecklistForAdminView.RemarkActivity10.Caption)</template></span></td>
        <td data-name="RemarkActivity10" @Html.Raw(crewChecklistForAdminView.RemarkActivity10.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity10"><span id="el_CrewChecklistForAdmin_RemarkActivity10">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity10.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity10.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity10.Visible (end) *@
@if (crewChecklistForAdminView.Activity11.Visible) { // crewChecklistForAdminView.Activity11.Visible (begin)
    <tr id="r_Activity11" @Html.Raw(crewChecklistForAdminView.Activity11.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity11"><template id="tpc_CrewChecklistForAdmin_Activity11">@Html.Raw(crewChecklistForAdminView.Activity11.Caption)</template></span></td>
        <td data-name="Activity11" @Html.Raw(crewChecklistForAdminView.Activity11.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity11"><span id="el_CrewChecklistForAdmin_Activity11">
<span @Html.Raw(crewChecklistForAdminView.Activity11.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity11_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity11.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity11.CurrentValue))">
    <label class="form-check-label" for="x_Activity11_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity11.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity11.Visible) { // crewChecklistForAdminView.RemarkActivity11.Visible (begin)
    <tr id="r_RemarkActivity11" @Html.Raw(crewChecklistForAdminView.RemarkActivity11.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity11"><template id="tpc_CrewChecklistForAdmin_RemarkActivity11">@Html.Raw(crewChecklistForAdminView.RemarkActivity11.Caption)</template></span></td>
        <td data-name="RemarkActivity11" @Html.Raw(crewChecklistForAdminView.RemarkActivity11.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity11"><span id="el_CrewChecklistForAdmin_RemarkActivity11">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity11.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity11.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity11.Visible (end) *@
@if (crewChecklistForAdminView.Activity12.Visible) { // crewChecklistForAdminView.Activity12.Visible (begin)
    <tr id="r_Activity12" @Html.Raw(crewChecklistForAdminView.Activity12.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity12"><template id="tpc_CrewChecklistForAdmin_Activity12">@Html.Raw(crewChecklistForAdminView.Activity12.Caption)</template></span></td>
        <td data-name="Activity12" @Html.Raw(crewChecklistForAdminView.Activity12.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity12"><span id="el_CrewChecklistForAdmin_Activity12">
<span @Html.Raw(crewChecklistForAdminView.Activity12.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity12_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity12.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity12.CurrentValue))">
    <label class="form-check-label" for="x_Activity12_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity12.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity12.Visible) { // crewChecklistForAdminView.RemarkActivity12.Visible (begin)
    <tr id="r_RemarkActivity12" @Html.Raw(crewChecklistForAdminView.RemarkActivity12.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity12"><template id="tpc_CrewChecklistForAdmin_RemarkActivity12">@Html.Raw(crewChecklistForAdminView.RemarkActivity12.Caption)</template></span></td>
        <td data-name="RemarkActivity12" @Html.Raw(crewChecklistForAdminView.RemarkActivity12.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity12"><span id="el_CrewChecklistForAdmin_RemarkActivity12">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity12.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity12.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity12.Visible (end) *@
@if (crewChecklistForAdminView.Activity13.Visible) { // crewChecklistForAdminView.Activity13.Visible (begin)
    <tr id="r_Activity13" @Html.Raw(crewChecklistForAdminView.Activity13.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity13"><template id="tpc_CrewChecklistForAdmin_Activity13">@Html.Raw(crewChecklistForAdminView.Activity13.Caption)</template></span></td>
        <td data-name="Activity13" @Html.Raw(crewChecklistForAdminView.Activity13.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity13"><span id="el_CrewChecklistForAdmin_Activity13">
<span @Html.Raw(crewChecklistForAdminView.Activity13.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity13_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity13.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity13.CurrentValue))">
    <label class="form-check-label" for="x_Activity13_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity13.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity13.Visible) { // crewChecklistForAdminView.RemarkActivity13.Visible (begin)
    <tr id="r_RemarkActivity13" @Html.Raw(crewChecklistForAdminView.RemarkActivity13.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity13"><template id="tpc_CrewChecklistForAdmin_RemarkActivity13">@Html.Raw(crewChecklistForAdminView.RemarkActivity13.Caption)</template></span></td>
        <td data-name="RemarkActivity13" @Html.Raw(crewChecklistForAdminView.RemarkActivity13.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity13"><span id="el_CrewChecklistForAdmin_RemarkActivity13">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity13.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity13.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity13.Visible (end) *@
@if (crewChecklistForAdminView.Activity14.Visible) { // crewChecklistForAdminView.Activity14.Visible (begin)
    <tr id="r_Activity14" @Html.Raw(crewChecklistForAdminView.Activity14.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity14"><template id="tpc_CrewChecklistForAdmin_Activity14">@Html.Raw(crewChecklistForAdminView.Activity14.Caption)</template></span></td>
        <td data-name="Activity14" @Html.Raw(crewChecklistForAdminView.Activity14.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity14"><span id="el_CrewChecklistForAdmin_Activity14">
<span @Html.Raw(crewChecklistForAdminView.Activity14.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity14_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity14.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity14.CurrentValue))">
    <label class="form-check-label" for="x_Activity14_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity14.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity14.Visible) { // crewChecklistForAdminView.RemarkActivity14.Visible (begin)
    <tr id="r_RemarkActivity14" @Html.Raw(crewChecklistForAdminView.RemarkActivity14.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity14"><template id="tpc_CrewChecklistForAdmin_RemarkActivity14">@Html.Raw(crewChecklistForAdminView.RemarkActivity14.Caption)</template></span></td>
        <td data-name="RemarkActivity14" @Html.Raw(crewChecklistForAdminView.RemarkActivity14.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity14"><span id="el_CrewChecklistForAdmin_RemarkActivity14">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity14.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity14.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity14.Visible (end) *@
@if (crewChecklistForAdminView.Activity20.Visible) { // crewChecklistForAdminView.Activity20.Visible (begin)
    <tr id="r_Activity20" @Html.Raw(crewChecklistForAdminView.Activity20.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity20"><template id="tpc_CrewChecklistForAdmin_Activity20">@Html.Raw(crewChecklistForAdminView.Activity20.Caption)</template></span></td>
        <td data-name="Activity20" @Html.Raw(crewChecklistForAdminView.Activity20.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity20"><span id="el_CrewChecklistForAdmin_Activity20">
<span @Html.Raw(crewChecklistForAdminView.Activity20.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity20_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity20.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity20.CurrentValue))">
    <label class="form-check-label" for="x_Activity20_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity20.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity20.Visible) { // crewChecklistForAdminView.RemarkActivity20.Visible (begin)
    <tr id="r_RemarkActivity20" @Html.Raw(crewChecklistForAdminView.RemarkActivity20.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity20"><template id="tpc_CrewChecklistForAdmin_RemarkActivity20">@Html.Raw(crewChecklistForAdminView.RemarkActivity20.Caption)</template></span></td>
        <td data-name="RemarkActivity20" @Html.Raw(crewChecklistForAdminView.RemarkActivity20.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity20"><span id="el_CrewChecklistForAdmin_RemarkActivity20">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity20.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity20.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity20.Visible (end) *@
@if (crewChecklistForAdminView.Activity30.Visible) { // crewChecklistForAdminView.Activity30.Visible (begin)
    <tr id="r_Activity30" @Html.Raw(crewChecklistForAdminView.Activity30.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity30"><template id="tpc_CrewChecklistForAdmin_Activity30">@Html.Raw(crewChecklistForAdminView.Activity30.Caption)</template></span></td>
        <td data-name="Activity30" @Html.Raw(crewChecklistForAdminView.Activity30.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity30"><span id="el_CrewChecklistForAdmin_Activity30">
<span @Html.Raw(crewChecklistForAdminView.Activity30.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity30_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity30.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity30.CurrentValue))">
    <label class="form-check-label" for="x_Activity30_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity30.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity30.Visible) { // crewChecklistForAdminView.RemarkActivity30.Visible (begin)
    <tr id="r_RemarkActivity30" @Html.Raw(crewChecklistForAdminView.RemarkActivity30.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity30"><template id="tpc_CrewChecklistForAdmin_RemarkActivity30">@Html.Raw(crewChecklistForAdminView.RemarkActivity30.Caption)</template></span></td>
        <td data-name="RemarkActivity30" @Html.Raw(crewChecklistForAdminView.RemarkActivity30.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity30"><span id="el_CrewChecklistForAdmin_RemarkActivity30">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity30.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity30.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity30.Visible (end) *@
@if (crewChecklistForAdminView.Activity40.Visible) { // crewChecklistForAdminView.Activity40.Visible (begin)
    <tr id="r_Activity40" @Html.Raw(crewChecklistForAdminView.Activity40.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity40"><template id="tpc_CrewChecklistForAdmin_Activity40">@Html.Raw(crewChecklistForAdminView.Activity40.Caption)</template></span></td>
        <td data-name="Activity40" @Html.Raw(crewChecklistForAdminView.Activity40.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity40"><span id="el_CrewChecklistForAdmin_Activity40">
<span @Html.Raw(crewChecklistForAdminView.Activity40.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity40_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity40.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity40.CurrentValue))">
    <label class="form-check-label" for="x_Activity40_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity40.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity40.Visible) { // crewChecklistForAdminView.RemarkActivity40.Visible (begin)
    <tr id="r_RemarkActivity40" @Html.Raw(crewChecklistForAdminView.RemarkActivity40.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity40"><template id="tpc_CrewChecklistForAdmin_RemarkActivity40">@Html.Raw(crewChecklistForAdminView.RemarkActivity40.Caption)</template></span></td>
        <td data-name="RemarkActivity40" @Html.Raw(crewChecklistForAdminView.RemarkActivity40.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity40"><span id="el_CrewChecklistForAdmin_RemarkActivity40">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity40.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity40.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity40.Visible (end) *@
@if (crewChecklistForAdminView.Activity50.Visible) { // crewChecklistForAdminView.Activity50.Visible (begin)
    <tr id="r_Activity50" @Html.Raw(crewChecklistForAdminView.Activity50.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity50"><template id="tpc_CrewChecklistForAdmin_Activity50">@Html.Raw(crewChecklistForAdminView.Activity50.Caption)</template></span></td>
        <td data-name="Activity50" @Html.Raw(crewChecklistForAdminView.Activity50.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity50"><span id="el_CrewChecklistForAdmin_Activity50">
<span @Html.Raw(crewChecklistForAdminView.Activity50.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity50_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity50.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity50.CurrentValue))">
    <label class="form-check-label" for="x_Activity50_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity50.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity50.Visible) { // crewChecklistForAdminView.RemarkActivity50.Visible (begin)
    <tr id="r_RemarkActivity50" @Html.Raw(crewChecklistForAdminView.RemarkActivity50.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity50"><template id="tpc_CrewChecklistForAdmin_RemarkActivity50">@Html.Raw(crewChecklistForAdminView.RemarkActivity50.Caption)</template></span></td>
        <td data-name="RemarkActivity50" @Html.Raw(crewChecklistForAdminView.RemarkActivity50.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity50"><span id="el_CrewChecklistForAdmin_RemarkActivity50">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity50.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity50.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity50.Visible (end) *@
@if (crewChecklistForAdminView.Activity60.Visible) { // crewChecklistForAdminView.Activity60.Visible (begin)
    <tr id="r_Activity60" @Html.Raw(crewChecklistForAdminView.Activity60.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity60"><template id="tpc_CrewChecklistForAdmin_Activity60">@Html.Raw(crewChecklistForAdminView.Activity60.Caption)</template></span></td>
        <td data-name="Activity60" @Html.Raw(crewChecklistForAdminView.Activity60.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity60"><span id="el_CrewChecklistForAdmin_Activity60">
<span @Html.Raw(crewChecklistForAdminView.Activity60.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity60_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity60.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity60.CurrentValue))">
    <label class="form-check-label" for="x_Activity60_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity60.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity60.Visible) { // crewChecklistForAdminView.RemarkActivity60.Visible (begin)
    <tr id="r_RemarkActivity60" @Html.Raw(crewChecklistForAdminView.RemarkActivity60.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity60"><template id="tpc_CrewChecklistForAdmin_RemarkActivity60">@Html.Raw(crewChecklistForAdminView.RemarkActivity60.Caption)</template></span></td>
        <td data-name="RemarkActivity60" @Html.Raw(crewChecklistForAdminView.RemarkActivity60.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity60"><span id="el_CrewChecklistForAdmin_RemarkActivity60">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity60.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity60.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity60.Visible (end) *@
@if (crewChecklistForAdminView.Activity70.Visible) { // crewChecklistForAdminView.Activity70.Visible (begin)
    <tr id="r_Activity70" @Html.Raw(crewChecklistForAdminView.Activity70.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity70"><template id="tpc_CrewChecklistForAdmin_Activity70">@Html.Raw(crewChecklistForAdminView.Activity70.Caption)</template></span></td>
        <td data-name="Activity70" @Html.Raw(crewChecklistForAdminView.Activity70.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity70"><span id="el_CrewChecklistForAdmin_Activity70">
<span @Html.Raw(crewChecklistForAdminView.Activity70.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Activity70_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.Activity70.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.Activity70.CurrentValue))">
    <label class="form-check-label" for="x_Activity70_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity70.Visible (end) *@
@if (crewChecklistForAdminView.RemarkActivity70.Visible) { // crewChecklistForAdminView.RemarkActivity70.Visible (begin)
    <tr id="r_RemarkActivity70" @Html.Raw(crewChecklistForAdminView.RemarkActivity70.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_RemarkActivity70"><template id="tpc_CrewChecklistForAdmin_RemarkActivity70">@Html.Raw(crewChecklistForAdminView.RemarkActivity70.Caption)</template></span></td>
        <td data-name="RemarkActivity70" @Html.Raw(crewChecklistForAdminView.RemarkActivity70.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity70"><span id="el_CrewChecklistForAdmin_RemarkActivity70">
<span @Html.Raw(crewChecklistForAdminView.RemarkActivity70.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.RemarkActivity70.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.RemarkActivity70.Visible (end) *@
@if (crewChecklistForAdminView.InterviewerComment.Visible) { // crewChecklistForAdminView.InterviewerComment.Visible (begin)
    <tr id="r_InterviewerComment" @Html.Raw(crewChecklistForAdminView.InterviewerComment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewerComment"><template id="tpc_CrewChecklistForAdmin_InterviewerComment">@Html.Raw(crewChecklistForAdminView.InterviewerComment.Caption)</template></span></td>
        <td data-name="InterviewerComment" @Html.Raw(crewChecklistForAdminView.InterviewerComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewerComment"><span id="el_CrewChecklistForAdmin_InterviewerComment">
<span @Html.Raw(crewChecklistForAdminView.InterviewerComment.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewerComment.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewerComment.Visible (end) *@
@if (crewChecklistForAdminView.JobKnowledge.Visible) { // crewChecklistForAdminView.JobKnowledge.Visible (begin)
    <tr id="r_JobKnowledge" @Html.Raw(crewChecklistForAdminView.JobKnowledge.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_JobKnowledge"><template id="tpc_CrewChecklistForAdmin_JobKnowledge">@Html.Raw(crewChecklistForAdminView.JobKnowledge.Caption)</template></span></td>
        <td data-name="JobKnowledge" @Html.Raw(crewChecklistForAdminView.JobKnowledge.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_JobKnowledge"><span id="el_CrewChecklistForAdmin_JobKnowledge">
<span @Html.Raw(crewChecklistForAdminView.JobKnowledge.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.JobKnowledge.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.JobKnowledge.Visible (end) *@
@if (crewChecklistForAdminView.SafetyAwareness.Visible) { // crewChecklistForAdminView.SafetyAwareness.Visible (begin)
    <tr id="r_SafetyAwareness" @Html.Raw(crewChecklistForAdminView.SafetyAwareness.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_SafetyAwareness"><template id="tpc_CrewChecklistForAdmin_SafetyAwareness">@Html.Raw(crewChecklistForAdminView.SafetyAwareness.Caption)</template></span></td>
        <td data-name="SafetyAwareness" @Html.Raw(crewChecklistForAdminView.SafetyAwareness.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_SafetyAwareness"><span id="el_CrewChecklistForAdmin_SafetyAwareness">
<span @Html.Raw(crewChecklistForAdminView.SafetyAwareness.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.SafetyAwareness.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.SafetyAwareness.Visible (end) *@
@if (crewChecklistForAdminView.Personality.Visible) { // crewChecklistForAdminView.Personality.Visible (begin)
    <tr id="r_Personality" @Html.Raw(crewChecklistForAdminView.Personality.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Personality"><template id="tpc_CrewChecklistForAdmin_Personality">@Html.Raw(crewChecklistForAdminView.Personality.Caption)</template></span></td>
        <td data-name="Personality" @Html.Raw(crewChecklistForAdminView.Personality.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Personality"><span id="el_CrewChecklistForAdmin_Personality">
<span @Html.Raw(crewChecklistForAdminView.Personality.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.Personality.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Personality.Visible (end) *@
@if (crewChecklistForAdminView.EnglishProficiency.Visible) { // crewChecklistForAdminView.EnglishProficiency.Visible (begin)
    <tr id="r_EnglishProficiency" @Html.Raw(crewChecklistForAdminView.EnglishProficiency.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_EnglishProficiency"><template id="tpc_CrewChecklistForAdmin_EnglishProficiency">@Html.Raw(crewChecklistForAdminView.EnglishProficiency.Caption)</template></span></td>
        <td data-name="EnglishProficiency" @Html.Raw(crewChecklistForAdminView.EnglishProficiency.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_EnglishProficiency"><span id="el_CrewChecklistForAdmin_EnglishProficiency">
<span @Html.Raw(crewChecklistForAdminView.EnglishProficiency.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.EnglishProficiency.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.EnglishProficiency.Visible (end) *@
@if (crewChecklistForAdminView.PrincipalComment.Visible) { // crewChecklistForAdminView.PrincipalComment.Visible (begin)
    <tr id="r_PrincipalComment" @Html.Raw(crewChecklistForAdminView.PrincipalComment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_PrincipalComment"><template id="tpc_CrewChecklistForAdmin_PrincipalComment">@Html.Raw(crewChecklistForAdminView.PrincipalComment.Caption)</template></span></td>
        <td data-name="PrincipalComment" @Html.Raw(crewChecklistForAdminView.PrincipalComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_PrincipalComment"><span id="el_CrewChecklistForAdmin_PrincipalComment">
<span @Html.Raw(crewChecklistForAdminView.PrincipalComment.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.PrincipalComment.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.PrincipalComment.Visible (end) *@
@if (crewChecklistForAdminView.FinalInterviewComment.Visible) { // crewChecklistForAdminView.FinalInterviewComment.Visible (begin)
    <tr id="r_FinalInterviewComment" @Html.Raw(crewChecklistForAdminView.FinalInterviewComment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_FinalInterviewComment"><template id="tpc_CrewChecklistForAdmin_FinalInterviewComment">@Html.Raw(crewChecklistForAdminView.FinalInterviewComment.Caption)</template></span></td>
        <td data-name="FinalInterviewComment" @Html.Raw(crewChecklistForAdminView.FinalInterviewComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FinalInterviewComment"><span id="el_CrewChecklistForAdmin_FinalInterviewComment">
<span @Html.Raw(crewChecklistForAdminView.FinalInterviewComment.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.FinalInterviewComment.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.FinalInterviewComment.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonOneName.Visible) { // crewChecklistForAdminView.InterviewedByPersonOneName.Visible (begin)
    <tr id="r_InterviewedByPersonOneName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonOneName"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonOneName">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.Caption)</template></span></td>
        <td data-name="InterviewedByPersonOneName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonOneName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonOneName">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonOneName.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonOneRank.Visible) { // crewChecklistForAdminView.InterviewedByPersonOneRank.Visible (begin)
    <tr id="r_InterviewedByPersonOneRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonOneRank"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonOneRank">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.Caption)</template></span></td>
        <td data-name="InterviewedByPersonOneRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonOneRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonOneRank">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonOneRank.Visible (end) *@
@if (crewChecklistForAdminView.AssistantManagerPdeReviewedDate.Visible) { // crewChecklistForAdminView.AssistantManagerPdeReviewedDate.Visible (begin)
    <tr id="r_AssistantManagerPdeReviewedDate" @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate"><template id="tpc_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate">@Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.Caption)</template></span></td>
        <td data-name="AssistantManagerPdeReviewedDate" @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate"><span id="el_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate">
<span @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.AssistantManagerPdeReviewedDate.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonTwoName.Visible) { // crewChecklistForAdminView.InterviewedByPersonTwoName.Visible (begin)
    <tr id="r_InterviewedByPersonTwoName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonTwoName"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonTwoName">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.Caption)</template></span></td>
        <td data-name="InterviewedByPersonTwoName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonTwoName">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonTwoName.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonTwoRank.Visible) { // crewChecklistForAdminView.InterviewedByPersonTwoRank.Visible (begin)
    <tr id="r_InterviewedByPersonTwoRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonTwoRank"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonTwoRank">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.Caption)</template></span></td>
        <td data-name="InterviewedByPersonTwoRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonTwoRank">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonTwoRank.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonThreeName.Visible) { // crewChecklistForAdminView.InterviewedByPersonThreeName.Visible (begin)
    <tr id="r_InterviewedByPersonThreeName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonThreeName"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonThreeName">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.Caption)</template></span></td>
        <td data-name="InterviewedByPersonThreeName" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonThreeName">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonThreeName.Visible (end) *@
@if (crewChecklistForAdminView.InterviewedByPersonThreeRank.Visible) { // crewChecklistForAdminView.InterviewedByPersonThreeRank.Visible (begin)
    <tr id="r_InterviewedByPersonThreeRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewedByPersonThreeRank"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonThreeRank">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.Caption)</template></span></td>
        <td data-name="InterviewedByPersonThreeRank" @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonThreeRank">
<span @Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewedByPersonThreeRank.Visible (end) *@
@if (crewChecklistForAdminView.CrewingManagerApprovalDate.Visible) { // crewChecklistForAdminView.CrewingManagerApprovalDate.Visible (begin)
    <tr id="r_CrewingManagerApprovalDate" @Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_CrewingManagerApprovalDate"><template id="tpc_CrewChecklistForAdmin_CrewingManagerApprovalDate">@Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.Caption)</template></span></td>
        <td data-name="CrewingManagerApprovalDate" @Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_CrewingManagerApprovalDate"><span id="el_CrewChecklistForAdmin_CrewingManagerApprovalDate">
<span @Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.CrewingManagerApprovalDate.Visible (end) *@
@if (crewChecklistForAdminView.Activity14Attachment.Visible) { // crewChecklistForAdminView.Activity14Attachment.Visible (begin)
    <tr id="r_Activity14Attachment" @Html.Raw(crewChecklistForAdminView.Activity14Attachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity14Attachment"><template id="tpc_CrewChecklistForAdmin_Activity14Attachment">@Html.Raw(crewChecklistForAdminView.Activity14Attachment.Caption)</template></span></td>
        <td data-name="Activity14Attachment" @Html.Raw(crewChecklistForAdminView.Activity14Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity14Attachment"><span id="el_CrewChecklistForAdmin_Activity14Attachment">
<span @Html.Raw(crewChecklistForAdminView.Activity14Attachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.Activity14Attachment, ConvertToString(crewChecklistForAdminView.Activity14Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity14Attachment.Visible (end) *@
@if (crewChecklistForAdminView.Activity20Attachment.Visible) { // crewChecklistForAdminView.Activity20Attachment.Visible (begin)
    <tr id="r_Activity20Attachment" @Html.Raw(crewChecklistForAdminView.Activity20Attachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity20Attachment"><template id="tpc_CrewChecklistForAdmin_Activity20Attachment">@Html.Raw(crewChecklistForAdminView.Activity20Attachment.Caption)</template></span></td>
        <td data-name="Activity20Attachment" @Html.Raw(crewChecklistForAdminView.Activity20Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity20Attachment"><span id="el_CrewChecklistForAdmin_Activity20Attachment">
<span @Html.Raw(crewChecklistForAdminView.Activity20Attachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.Activity20Attachment, ConvertToString(crewChecklistForAdminView.Activity20Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity20Attachment.Visible (end) *@
@if (crewChecklistForAdminView.Activity30Attachment.Visible) { // crewChecklistForAdminView.Activity30Attachment.Visible (begin)
    <tr id="r_Activity30Attachment" @Html.Raw(crewChecklistForAdminView.Activity30Attachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity30Attachment"><template id="tpc_CrewChecklistForAdmin_Activity30Attachment">@Html.Raw(crewChecklistForAdminView.Activity30Attachment.Caption)</template></span></td>
        <td data-name="Activity30Attachment" @Html.Raw(crewChecklistForAdminView.Activity30Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity30Attachment"><span id="el_CrewChecklistForAdmin_Activity30Attachment">
<span @Html.Raw(crewChecklistForAdminView.Activity30Attachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.Activity30Attachment, ConvertToString(crewChecklistForAdminView.Activity30Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity30Attachment.Visible (end) *@
@if (crewChecklistForAdminView.Activity50Attachment.Visible) { // crewChecklistForAdminView.Activity50Attachment.Visible (begin)
    <tr id="r_Activity50Attachment" @Html.Raw(crewChecklistForAdminView.Activity50Attachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity50Attachment"><template id="tpc_CrewChecklistForAdmin_Activity50Attachment">@Html.Raw(crewChecklistForAdminView.Activity50Attachment.Caption)</template></span></td>
        <td data-name="Activity50Attachment" @Html.Raw(crewChecklistForAdminView.Activity50Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity50Attachment"><span id="el_CrewChecklistForAdmin_Activity50Attachment">
<span @Html.Raw(crewChecklistForAdminView.Activity50Attachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.Activity50Attachment, ConvertToString(crewChecklistForAdminView.Activity50Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity50Attachment.Visible (end) *@
@if (crewChecklistForAdminView.Activity70Attachment.Visible) { // crewChecklistForAdminView.Activity70Attachment.Visible (begin)
    <tr id="r_Activity70Attachment" @Html.Raw(crewChecklistForAdminView.Activity70Attachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_Activity70Attachment"><template id="tpc_CrewChecklistForAdmin_Activity70Attachment">@Html.Raw(crewChecklistForAdminView.Activity70Attachment.Caption)</template></span></td>
        <td data-name="Activity70Attachment" @Html.Raw(crewChecklistForAdminView.Activity70Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity70Attachment"><span id="el_CrewChecklistForAdmin_Activity70Attachment">
<span @Html.Raw(crewChecklistForAdminView.Activity70Attachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.Activity70Attachment, ConvertToString(crewChecklistForAdminView.Activity70Attachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.Activity70Attachment.Visible (end) *@
@if (crewChecklistForAdminView.FinalInterviewAttachment.Visible) { // crewChecklistForAdminView.FinalInterviewAttachment.Visible (begin)
    <tr id="r_FinalInterviewAttachment" @Html.Raw(crewChecklistForAdminView.FinalInterviewAttachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_FinalInterviewAttachment"><template id="tpc_CrewChecklistForAdmin_FinalInterviewAttachment">@Html.Raw(crewChecklistForAdminView.FinalInterviewAttachment.Caption)</template></span></td>
        <td data-name="FinalInterviewAttachment" @Html.Raw(crewChecklistForAdminView.FinalInterviewAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FinalInterviewAttachment"><span id="el_CrewChecklistForAdmin_FinalInterviewAttachment">
<span @Html.Raw(crewChecklistForAdminView.FinalInterviewAttachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.FinalInterviewAttachment, ConvertToString(crewChecklistForAdminView.FinalInterviewAttachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.FinalInterviewAttachment.Visible (end) *@
@if (crewChecklistForAdminView.PrincipalCommentAttachment.Visible) { // crewChecklistForAdminView.PrincipalCommentAttachment.Visible (begin)
    <tr id="r_PrincipalCommentAttachment" @Html.Raw(crewChecklistForAdminView.PrincipalCommentAttachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_PrincipalCommentAttachment"><template id="tpc_CrewChecklistForAdmin_PrincipalCommentAttachment">@Html.Raw(crewChecklistForAdminView.PrincipalCommentAttachment.Caption)</template></span></td>
        <td data-name="PrincipalCommentAttachment" @Html.Raw(crewChecklistForAdminView.PrincipalCommentAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_PrincipalCommentAttachment"><span id="el_CrewChecklistForAdmin_PrincipalCommentAttachment">
<span @Html.Raw(crewChecklistForAdminView.PrincipalCommentAttachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.PrincipalCommentAttachment, ConvertToString(crewChecklistForAdminView.PrincipalCommentAttachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.PrincipalCommentAttachment.Visible (end) *@
@if (crewChecklistForAdminView.FormPrintoutAttachment.Visible) { // crewChecklistForAdminView.FormPrintoutAttachment.Visible (begin)
    <tr id="r_FormPrintoutAttachment" @Html.Raw(crewChecklistForAdminView.FormPrintoutAttachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_FormPrintoutAttachment"><template id="tpc_CrewChecklistForAdmin_FormPrintoutAttachment">@Html.Raw(crewChecklistForAdminView.FormPrintoutAttachment.Caption)</template></span></td>
        <td data-name="FormPrintoutAttachment" @Html.Raw(crewChecklistForAdminView.FormPrintoutAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FormPrintoutAttachment"><span id="el_CrewChecklistForAdmin_FormPrintoutAttachment">
<span @Html.Raw(crewChecklistForAdminView.FormPrintoutAttachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.FormPrintoutAttachment, ConvertToString(crewChecklistForAdminView.FormPrintoutAttachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.FormPrintoutAttachment.Visible (end) *@
@if (crewChecklistForAdminView.AssistantManagerPdeReviewed.Visible) { // crewChecklistForAdminView.AssistantManagerPdeReviewed.Visible (begin)
    <tr id="r_AssistantManagerPdeReviewed" @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewed.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_AssistantManagerPdeReviewed"><template id="tpc_CrewChecklistForAdmin_AssistantManagerPdeReviewed">@Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewed.Caption)</template></span></td>
        <td data-name="AssistantManagerPdeReviewed" @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewed.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewed"><span id="el_CrewChecklistForAdmin_AssistantManagerPdeReviewed">
<span @Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewed.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_AssistantManagerPdeReviewed_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.AssistantManagerPdeReviewed.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.AssistantManagerPdeReviewed.CurrentValue))">
    <label class="form-check-label" for="x_AssistantManagerPdeReviewed_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.AssistantManagerPdeReviewed.Visible (end) *@
@if (crewChecklistForAdminView.CrewingManagerApproval.Visible) { // crewChecklistForAdminView.CrewingManagerApproval.Visible (begin)
    <tr id="r_CrewingManagerApproval" @Html.Raw(crewChecklistForAdminView.CrewingManagerApproval.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_CrewingManagerApproval"><template id="tpc_CrewChecklistForAdmin_CrewingManagerApproval">@Html.Raw(crewChecklistForAdminView.CrewingManagerApproval.Caption)</template></span></td>
        <td data-name="CrewingManagerApproval" @Html.Raw(crewChecklistForAdminView.CrewingManagerApproval.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_CrewingManagerApproval"><span id="el_CrewChecklistForAdmin_CrewingManagerApproval">
<span @Html.Raw(crewChecklistForAdminView.CrewingManagerApproval.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_CrewingManagerApproval_@(crewChecklistForAdminView.RowCount)" class="form-check-input" value="@(crewChecklistForAdminView.CrewingManagerApproval.GetViewValue())" disabled checked="@(ConvertToBool(crewChecklistForAdminView.CrewingManagerApproval.CurrentValue))">
    <label class="form-check-label" for="x_CrewingManagerApproval_@(crewChecklistForAdminView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.CrewingManagerApproval.Visible (end) *@
@if (crewChecklistForAdminView.InterviewDate.Visible) { // crewChecklistForAdminView.InterviewDate.Visible (begin)
    <tr id="r_InterviewDate" @Html.Raw(crewChecklistForAdminView.InterviewDate.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewDate"><template id="tpc_CrewChecklistForAdmin_InterviewDate">@Html.Raw(crewChecklistForAdminView.InterviewDate.Caption)</template></span></td>
        <td data-name="InterviewDate" @Html.Raw(crewChecklistForAdminView.InterviewDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewDate"><span id="el_CrewChecklistForAdmin_InterviewDate">
<span @Html.Raw(crewChecklistForAdminView.InterviewDate.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.InterviewDate.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewDate.Visible (end) *@
@if (crewChecklistForAdminView.InterviewAttachment.Visible) { // crewChecklistForAdminView.InterviewAttachment.Visible (begin)
    <tr id="r_InterviewAttachment" @Html.Raw(crewChecklistForAdminView.InterviewAttachment.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_InterviewAttachment"><template id="tpc_CrewChecklistForAdmin_InterviewAttachment">@Html.Raw(crewChecklistForAdminView.InterviewAttachment.Caption)</template></span></td>
        <td data-name="InterviewAttachment" @Html.Raw(crewChecklistForAdminView.InterviewAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewAttachment"><span id="el_CrewChecklistForAdmin_InterviewAttachment">
<span @Html.Raw(crewChecklistForAdminView.InterviewAttachment.ViewAttributes)>
@Html.Raw(await GetFileViewTag((DbField)crewChecklistForAdminView.InterviewAttachment, ConvertToString(crewChecklistForAdminView.InterviewAttachment.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.InterviewAttachment.Visible (end) *@
@if (crewChecklistForAdminView.ApprovedByUserID1.Visible) { // crewChecklistForAdminView.ApprovedByUserID1.Visible (begin)
    <tr id="r_ApprovedByUserID1" @Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_ApprovedByUserID1"><template id="tpc_CrewChecklistForAdmin_ApprovedByUserID1">@Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.Caption)</template></span></td>
        <td data-name="ApprovedByUserID1" @Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_ApprovedByUserID1"><span id="el_CrewChecklistForAdmin_ApprovedByUserID1">
<span @Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.ApprovedByUserID1.Visible (end) *@
@if (crewChecklistForAdminView.ApprovedByUserID2.Visible) { // crewChecklistForAdminView.ApprovedByUserID2.Visible (begin)
    <tr id="r_ApprovedByUserID2" @Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.RowAttributes)>
        <td class="@(crewChecklistForAdminView.TableLeftColumnClass)"><span id="elh_CrewChecklistForAdmin_ApprovedByUserID2"><template id="tpc_CrewChecklistForAdmin_ApprovedByUserID2">@Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.Caption)</template></span></td>
        <td data-name="ApprovedByUserID2" @Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_ApprovedByUserID2"><span id="el_CrewChecklistForAdmin_ApprovedByUserID2">
<span @Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.ViewAttributes)>
@Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewChecklistForAdminView.ApprovedByUserID2.Visible (end) *@
</table>
<div id="tpd_CrewChecklistForAdminview" class="ew-custom-template"></div>
<template id="tpm_CrewChecklistForAdminview">
<div id="ct_crewChecklistForAdminView"><fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">    
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Crew Information" : "Informasi Kru")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_RequiredPhoto" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Pass Photo 3 x 4" : "Pas Foto 3 x 4")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_VisaPhoto" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Visa Photo" : "Foto Visa")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_IndividualCodeNumber" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Individual's Seafarer ID" : "ID Pelaut Individu")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_FullName" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Full Name (Same As ID Card)" : "Nama Lengkap (Sesuai KTP)")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_RankAppliedFor" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Rank Applied For" : "Rank Yang Akan Dipilih")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_WillAcceptLowRank" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Willing To Accept Lower Rank" : "Bersedia Menerima Rank Lebih Rendah")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_AvailableFrom" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Available From" : "Bersedia Bekerja Dari")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_AvailableUntil" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Available Until" : "Bersedia Bekerja Sampai")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_EmployeeStatus" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Employee Status" : "Status Karyawan")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Checklist Items" : "Daftar Ceklis")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity10" class="mb-2 row">
                <label for="x_Activity10" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity10.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity10"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity10" class="mb-2 row">
                <label for="x_RemarkActivity10" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity10.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity10.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity10"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity11" class="mb-2 row">
                <label for="x_Activity11" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity11.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity11"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity11" class="mb-2 row">
                <label for="x_RemarkActivity11" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity11.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity11.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity11"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity12" class="mb-2 row">
                <label for="x_Activity12" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity12.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity12"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity12" class="mb-2 row">
                <label for="x_RemarkActivity12" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity12.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity12.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity12"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity13" class="mb-2 row">
                <label for="x_Activity13" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity13.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity13"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity13" class="mb-2 row">
                <label for="x_RemarkActivity13" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity13.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity13.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity13"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity14" class="mb-2 row">
                <label for="x_Activity14" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity14.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity14"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity14" class="mb-2 row">
                <label for="x_RemarkActivity14" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity14.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity14.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity14"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Activity14Attachment" class="mb-2 row">
                <label for="x_Activity14Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity14Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.Activity14Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity14Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity20" class="mb-2 row">
                <label for="x_Activity20" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity20.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity20"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity20" class="mb-2 row">
                <label for="x_RemarkActivity20" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity20.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity20.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity20"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Activity20Attachment" class="mb-2 row">
                <label for="x_Activity20Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity20Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.Activity20Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity20Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity30" class="mb-2 row">
                <label for="x_Activity30" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity30.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity30"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity30" class="mb-2 row">
                <label for="x_RemarkActivity30" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity30.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity30.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity30"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Activity30Attachment" class="mb-2 row">
                <label for="x_Activity30Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity30Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.Activity30Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity30Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity40" class="mb-2 row">
                <label for="x_Activity40" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity40.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity40"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity40" class="mb-2 row">
                <label for="x_RemarkActivity40" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity40.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity40.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity40"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity50" class="mb-2 row">
                <label for="x_Activity50" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity50.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity50"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity50" class="mb-2 row">
                <label for="x_RemarkActivity50" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity50.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity50.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity50"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Activity50Attachment" class="mb-2 row">
                <label for="x_Activity50Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity50Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.Activity50Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity50Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity60" class="mb-2 row">
                <label for="x_Activity60" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity60.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity60"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity60" class="mb-2 row">
                <label for="x_RemarkActivity60" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity60.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity60.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity60"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity70" class="mb-2 row">
                <label for="x_Activity70" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity70.Caption)</label>
                <div>
                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity70"></slot>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity70" class="mb-2 row">
                <label for="x_RemarkActivity70" class="col-form-label">@Html.Raw(crewChecklistForAdminView.RemarkActivity70.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.RemarkActivity70.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity70"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Activity70Attachment" class="mb-2 row">
                <label for="x_Activity70Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Activity70Attachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.Activity70Attachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity70Attachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Interview" : "Wawancara")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewerComment" class="mb-2 row">
                <label for="x_InterviewerComment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewerComment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewerComment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewerComment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewDate" class="mb-2 row">
                <label for="x_InterviewDate" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewDate.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewDate.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewDate"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_InterviewAttachment" class="mb-2 row">
                <label for="x_InterviewAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewAttachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewAttachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewAttachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 1" : "Wawancara 1")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonOneName" class="mb-2 row">
                <label for="x_InterviewedByPersonOneName" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonOneName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonOneName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonOneRank" class="mb-2 row">
                <label for="x_InterviewedByPersonOneRank" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonOneRank.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonOneRank.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonOneRank"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 2" : "Wawancara 2")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonTwoName" class="mb-2 row">
                <label for="x_InterviewedByPersonTwoName" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonTwoName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonTwoRank" class="mb-2 row">
                <label for="x_InterviewedByPersonTwoRank" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonTwoRank.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonTwoRank.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoRank"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 3" : "Wawancara 3")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonThreeName" class="mb-2 row">
                <label for="x_InterviewedByPersonThreeName" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonThreeName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonThreeRank" class="mb-2 row">
                <label for="x_InterviewedByPersonThreeRank" class="col-form-label">@Html.Raw(crewChecklistForAdminView.InterviewedByPersonThreeRank.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.InterviewedByPersonThreeRank.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeRank"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Final Interview" : "Interview Final")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_FinalInterviewComment" class="mb-2 row">
                <label for="x_FinalInterviewComment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.FinalInterviewComment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.FinalInterviewComment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FinalInterviewComment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_FinalInterviewAttachment" class="mb-2 row">
                <label for="x_FinalInterviewAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.FinalInterviewAttachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.FinalInterviewAttachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FinalInterviewAttachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Additional Remarks" : "Remark Tambahan")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_JobKnowledge" class="mb-2 row">
                        <label for="x_JobKnowledge" class="col-form-label">@Html.Raw(crewChecklistForAdminView.JobKnowledge.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewChecklistForAdminView.JobKnowledge.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_JobKnowledge"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_Personality" class="mb-2 row">
                        <label for="x_Personality" class="col-form-label">@Html.Raw(crewChecklistForAdminView.Personality.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewChecklistForAdminView.Personality.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Personality"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_SafetyAwareness" class="mb-2 row">
                        <label for="x_SafetyAwareness" class="col-form-label">@Html.Raw(crewChecklistForAdminView.SafetyAwareness.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewChecklistForAdminView.SafetyAwareness.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_SafetyAwareness"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_EnglishProficiency" class="mb-2 row">
                        <label for="x_EnglishProficiency" class="col-form-label">@Html.Raw(crewChecklistForAdminView.EnglishProficiency.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewChecklistForAdminView.EnglishProficiency.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_EnglishProficiency"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_PrincipalComment" class="mb-2 row">
                <label for="x_PrincipalComment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.PrincipalComment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.PrincipalComment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_PrincipalComment"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_PrincipalCommentAttachment" class="mb-2 row">
                <label for="x_PrincipalCommentAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.PrincipalCommentAttachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.PrincipalCommentAttachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_PrincipalCommentAttachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Approval" : "Persetujuan")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_AssistantManagerPdeReviewed" class="mb-2 row">
                <label for="x_AssistantManagerPdeReviewed" class="col-form-label">@Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewed.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.AssistantManagerPdeReviewed.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewed"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_ApprovedByUserID1" class="mb-2 row">
                <label for="x_ApprovedByUserID1" class="col-form-label">@Html.Raw(crewChecklistForAdminView.ApprovedByUserID1.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.ApprovedByUserID1.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_ApprovedByUserID1"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_AssistantManagerPdeReviewedDate" class="mb-2 row">
                <label for="x_AssistantManagerPdeReviewedDate" class="col-form-label">@Html.Raw(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.AssistantManagerPdeReviewedDate.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_CrewingManagerApproval" class="mb-2 row">
                <label for="x_CrewingManagerApproval" class="col-form-label">@Html.Raw(crewChecklistForAdminView.CrewingManagerApproval.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.CrewingManagerApproval.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_CrewingManagerApproval"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_ApprovedByUserID2" class="mb-2 row">
                <label for="x_ApprovedByUserID2" class="col-form-label">@Html.Raw(crewChecklistForAdminView.ApprovedByUserID2.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.ApprovedByUserID2.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_ApprovedByUserID2"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_CrewingManagerApprovalDate" class="mb-2 row">
                <label for="x_CrewingManagerApprovalDate" class="col-form-label">@Html.Raw(crewChecklistForAdminView.CrewingManagerApprovalDate.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.CrewingManagerApprovalDate.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_CrewingManagerApprovalDate"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Form Printout" : "Printout Form")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_FormPrintoutAttachment" class="mb-2 row">
                <label for="x_FormPrintoutAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminView.FormPrintoutAttachment.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewChecklistForAdminView.FormPrintoutAttachment.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FormPrintoutAttachment"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
        </div>
    </div>
</fieldset>
<div id="invite-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="invite-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="invite-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Invite Crew" : "Undang Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-invite-datetime" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_InviteDateTime" class="row">
                        <label for="x_InviteDateTime" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Checklist Invitation Date Time" : "Tanggal Dan Jam Undangan Ceklis")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_InviteDateTime">
                                    <div class="input-group" id="datetimepicker_InviteDateTime" data-target-input="nearest" data-td-target-toggle="nearest">
                                        <input
                                            type="text"
                                            name="x_InviteDateTime"
                                            id="x_InviteDateTime"
                                            value=""
                                            placeholder="@(CurrentLanguage == "en-US" ? "Checklist Invitation Date Time" : "Tanggal Dan Jam Undangan Ceklis")"
                                            data-format-pattern="dd MMM yyyy HH:mm:sszzz"
                                            class="form-control tempus-dominus-input"
                                            data-target="#datetimepicker_InviteDateTime"
                                        />
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_InviteNotes" class="row">
                        <label for="x_InviteNotes" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_InviteNotes">
                                    <textarea
                                        name="x_InviteNotes"
                                        id="x_InviteNotes"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder=@(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-add-invite-datetime" type="button">
                    @(CurrentLanguage == "en-US" ? "Invite Crew" : "Undang Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-invite-datetime" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="reject-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="reject-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="reject-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reject-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_RejectedReason" class="row">
                        <label for="x_RejectedReason" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Rejected Reason" : "Alasan Ditolak")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_RejectedReason">
                                    <textarea
                                        name="x_RejectedReason"
                                        id="x_RejectedReason"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder="Rejected Reason"
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-reject" type="button">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-reject-form" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="mcu-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="mcu-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="mcu-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Create MCU Schedule" : "Tambah Jadwal MCU")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-mcu-schedule" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_MCUScheduleDateTime" class="row">
                        <label for="x_MCUScheduleDateTime" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "MCU Schedule Date Time" : "Tanggal Dan Jam MCU")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_MCUScheduleDateTime">
                                    <div class="input-group" id="datetimepicker_MCUScheduleDateTime" data-target-input="nearest" data-td-target-toggle="nearest">
                                        <input
                                            type="text"
                                            name="x_MCUScheduleDateTime"
                                            id="x_MCUScheduleDateTime"
                                            value=""
                                            placeholder="MCU Date Time"
                                            data-format-pattern="dd MMM yyyy HH:mm:sszzz"
                                            class="form-control tempus-dominus-input"
                                            data-target="#datetimepicker_MCUScheduleDateTime"
                                        />
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_MCULocation" class="row">
                        <label for="x_MCULocation" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "MCU Location" : "Lokasi MCU")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_MCULocation">
                                    <input
                                        type="text"
                                        name="x_MCULocation"
                                        id="x_MCULocation"
                                        placeholder="MCU Location"
                                        class="form-control"
                                        maxlength="50"
                                    />
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-add-mcu-schedule" type="button">
                    @(CurrentLanguage == "en-US" ? "Create MCU Schedule" : "Tambah Jadwal MCU")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-mcu-schedule" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="approve-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="approve-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="approve-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Approve Crew Candidate" : "Setujui Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="approve-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_Password" class="row">
                        <label for="x_Password" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Password" : "Kata Sandi")
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group px-0">
                                <input
                                    type="password"
                                    name="x_Password"
                                    id="x_Password"
                                    placeholder=@(CurrentLanguage == "en-US" ? "Password" : "Kata Sandi")
                                    class="form-control"
                                    maxlength="50"
                                />
                                <button type="button" class="btn btn-default ew-toggle-password rounded-end" data-ew-action="password"><i class="fa-solid fa-eye"></i></button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-approve" type="button">
                    @(CurrentLanguage == "en-US" ? "Approve Crew Candidate" : "Setujui Kandidat Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-approve-form" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
</div>
</template>
@{ crewChecklistForAdminView.CloseRecordset(); }
@if (crewChecklistForAdminView.CurrentDetailTables.Contains("TRChecklistPerformance") && trChecklistPerformance.DetailView) {
    if (!Empty(crewChecklistForAdminView.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("TRChecklistPerformance", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("TrChecklistPerformanceGrid")
    View = this;
}
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewChecklistForAdminView.Rows)) };
    ew.applyTemplate("tpd_CrewChecklistForAdminview", "tpm_CrewChecklistForAdminview", "CrewChecklistForAdminview", "@(crewChecklistForAdminView.Export)", "CrewChecklistForAdmin", ew.templateData.rows[0], @(crewChecklistForAdminView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewChecklistForAdminView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewChecklistForAdminView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    const checklistID = parseInt(currentUrlObject.pathname.split('/').pop()); 
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    $('div.btn-toolbar.ew-toolbar').remove();
    $('.breadcrumb li.breadcrumb-item a:not(.ew-home)').attr('href', `${ew.PATH_BASE}ChecklistList`);
    const parentUrl = ew.PATH_BASE;
    const crewInfoApi = 'get-crew-info-for-checklist';
    $.ajax({
        url: `${parentUrl}api/Registration/${crewInfoApi}`,
        method: 'GET',
        data: {
            checklistID: checklistID
        },
        success: function (response) {
            if (response.success) {
                // Parse the data in the response
                const crewData = response.data;
                if (crewData.FullName !== '') {
                    $('div#r_crew_FullName div').append($('<span>').text(crewData.FullName));
                } else {
                    $('div#r_crew_FullName div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.EmployeeStatus !== '') {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').text(crewData.EmployeeStatus));
                } else {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.IndividualCodeNumber !== '') {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').text(crewData.IndividualCodeNumber));
                    if (crewData.RequiredPhoto !== '') {
                        const anchor = $("<a></a>", { 
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement", 
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const img = $("<img>", { 
                            class: "ew-image ew-lazy", 
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_RequiredPhoto div').append(span);
                    } else {
                        $('div#r_crew_RequiredPhoto div').append($('<span>').html('&nbsp;'));
                    }
                    if (crewData.VisaPhoto !== '') {
                        const anchor = $("<a></a>", { 
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement", 
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const img = $("<img>", { 
                            class: "ew-image ew-lazy", 
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_VisaPhoto div').append(span);
                    } else {
                        $('div#r_crew_VisaPhoto div').append($('<span>').html('&nbsp;'));
                    }
                } else {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.RankAppliedFor !== '') {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').text(crewData.RankAppliedFor));
                } else {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.WillAcceptLowRank !== '') {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').text(crewData.WillAcceptLowRank));
                } else {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableFrom !== '') {
                    $('div#r_crew_AvailableFrom div').append($('<span>').text(crewData.AvailableFrom));
                } else {
                    $('div#r_crew_AvailableFrom div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableUntil !== '') {
                    $('div#r_crew_AvailableUntil div').append($('<span>').text(crewData.AvailableUntil));
                } else {
                    $('div#r_crew_AvailableUntil div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.RankAppliedFor !== '' && crewData.EmployeeStatus !== '' && crewData.ID !== '') {
                    const getUserLevelApi = 'get-user-level';
                    $.ajax({
                        url: `${ew.PATH_BASE}api/Registration/${getUserLevelApi}`,
                        method: 'GET',
                        success: function(response) {
                            if (response.success) {
                                const userLevelName = response.data;
                                if (userLevelName === 'Assistant Manager PDE' || userLevelName === 'Crewing Manager') {
                                    const invokeApproveModalButton = $('<button/>', {
                                        'class': 'btn btn-default primary-green-bg primary-white-clr ew-btn me-auto',
                                        'name': 'btn-invoke-approve-modal',
                                        'id': 'btn-invoke-approve-modal',
                                        'type': 'button',
                                        'text': (selectedLanguage.id === 'en-US') ? 'Approve' : 'Setujui'
                                    });
                                    const backButton = $("<a></a>", { 
                                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                                        class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                                        id: "btn-back",
                                        name: "btn-back",
                                        href: `${parentUrl}ChecklistList`,
                                    });
                                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                                    flexDiv.append(invokeApproveModalButton);
                                    flexDiv.append(backButton);
                                    const buttonsDiv = $("<div class='row ew-buttons mt-3'></div>");
                                    buttonsDiv.append(flexDiv);
                                    $('form#fCrewChecklistForAdminview').append(buttonsDiv);
                                    $('#approve-modal-dialog').on('hidden.bs.modal', function() {
                                        $('#x_Password').val(null);
                                    });
                                    $('#btn-invoke-approve-modal').click(function() {
                                        $('#approve-modal-dialog').modal('show'); 
                                    });
                                    const approveChecklistUrl = "approve-checklist";
                                    $("#btn-approve").click(function() {
                                        const passwordValue = $('#x_Password').val();
                                        const passwordCaption = $(`label[for="x_Password"]`).text();
                                        if (passwordValue === '') {
                                            if (selectedLanguage.id === 'en-US') {
                                                ew.showToast(`Please enter required field - ${passwordCaption}`);
                                            } else {
                                                ew.showToast(`Masukkan input yang dibutuhkan - ${passwordCaption}`);
                                            }
                                            return;
                                        }
                                        const approveChecklistRequest = {
                                            password: passwordValue,
                                            userLevel: userLevelName,
                                            checklistID: checklistID,
                                        };
                                        $.ajax({
                                            method: "POST",
                                            url: `${parentUrl}api/Registration/${approveChecklistUrl}`,
                                            data: JSON.stringify(approveChecklistRequest),
                                            contentType: "application/json",
                                            success: function(response) {
                                                if (response.success) {
                                                    $('#approve-modal-dialog').modal('hide');
                                                    let successMessage = '';
                                                    if (selectedLanguage.id === 'en-US') {
                                                        successMessage = `Approve Crew Candidate Successful`;
                                                    } else {
                                                        successMessage = `Setujui Kandidat Kru Berhasil`;
                                                    }
                                                    const baseUrl = new URL(window.location.href).origin;
                                                    const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                                    const encodedSuccessMessage = encodeURIComponent(successMessage);
                                                    const params = new URLSearchParams(targetUrl.search);
                                                    params.set('successMessage', encodedSuccessMessage);
                                                    targetUrl.search = params.toString();
                                                    window.location.href = targetUrl.href;
                                                } else {
                                                    $('#approve-modal-dialog').modal('hide');
                                                    const errorMessage = response.errorMessage;
                                                    ew.showToast(errorMessage);
                                                }
                                            },
                                            error: function(xhr, textStatus, errorThrown) {
                                                $('#approve-modal-dialog').modal('hide');
                                                ew.showToast(errorThrown);
                                            }
                                        });
                                    });
                                } else if (userLevelName === 'Administrator') {
                                    // gmandayu: nambahin kondisi untuk "Crew Accepted dan Crew Rejected".
                                    if (crewData.EmployeeStatus === 'Candidate - Reviewed') {
                                        const printButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Print" : "Cetak",
                                            class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                                            id: "btn-print",
                                            name: "btn-print",
                                            href: `${parentUrl}PrintChecklist?id=${checklistID}`,
                                        });
                                        const editButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                                            class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                                            id: "btn-edit",
                                            name: "btn-edit",
                                            href: `${parentUrl}CrewChecklistForAdminEdit/${checklistID}?showdetail=TRChecklistPerformance`,
                                        });
                                        const invokeInviteModalButton = $('<button/>', {
                                            'class': 'btn btn-primary ew-btn me-3',
                                            'name': 'btn-invoke-invite-modal',
                                            'id': 'btn-invoke-invite-modal',
                                            'type': 'button',
                                            'text': (selectedLanguage.id === 'en-US') ? 'Invite' : 'Undang'
                                        });

                                        // initialize date time picker
                                        const format = "dd MMM yyyy HH:mm:00zzz";
                                        const options = {
                                            localization: {
                                                locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                                                hourCycle: format.match(/H/) ? "h24" : "h12",
                                                format,
                                                ...ew.language.phrase("datetimepicker")
                                            },
                                            display: {
                                                icons: {
                                                    previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                                                    next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                                                },
                                                components: {
                                                    hours: !!format.match(/h/i),
                                                    minutes: !!format.match(/m/),
                                                    seconds: !!format.match(/s/i)
                                                },
                                                theme: ew.isDark() ? "dark" : "auto"
                                            },
                                            defaultDate: new Date(new Date().setHours(8, 0, 0)).toISOString(),
                                        };
                                        ew.createDateTimePicker("add-invite-datetime", "x_InviteDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
                                        $('#x_InviteDateTime').val(replaceTimezoneOffset($('#x_InviteDateTime').val(), formatTimezoneOffset(new Date().getTimezoneOffset())));

                                        // Listen for input changes
                                        $('#x_InviteDateTime').on('change.td', function() {
                                            const timezoneOffset = new Date().getTimezoneOffset();
                                            const formattedTimezoneOffset = formatTimezoneOffset(timezoneOffset);
                                            const currentValue = $(this).val();
                                            const newValue = replaceTimezoneOffset(currentValue, formattedTimezoneOffset);
                                            $(this).val(newValue);
                                        });

                                        // Format timezone offset as needed
                                        function formatTimezoneOffset(offset) {
                                            const hours = Math.floor(Math.abs(offset) / 60);
                                            const sign = offset < 0 ? '+' : '-';
                                            return ' GMT ' + sign + hours;
                                        }

                                        // Helper function to add leading zero to single-digit numbers
                                        function addLeadingZero(num) {
                                            return num < 10 ? '0' + num : num;
                                        }

                                        // Replace "zzz" with the formatted timezone offset
                                        function replaceTimezoneOffset(str, offset) {
                                            return str.replace('zzz', offset);
                                        }
                                        $('#invite-modal-dialog').on('hidden.bs.modal', function() {
                                            $('#x_InviteDateTime').val(null);
                                            $('#x_InviteNotes').val(null);
                                        });
                                        const createNotificationUrl = "create-notification";
                                        $("#btn-add-invite-datetime").click(function() {
                                            const inviteDateTimeValue = $('#x_InviteDateTime').val();
                                            const inviteDateTimeCaption = $(`label[for="x_InviteDateTime"]`).text();
                                            if (inviteDateTimeValue == '') {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Please enter required field - ${inviteDateTimeCaption}`);
                                                } else {
                                                    ew.showToast(`Masukkan input yang dibutuhkan - ${inviteDateTimeCaption}`);
                                                }
                                                return;
                                            }
                                            const currentDate = new Date();
                                            const inviteDateObject = new Date(inviteDateTimeValue);
                                            if (isNaN(inviteDateObject)) {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Invalid date time - ${inviteDateTimeCaption}`);
                                                } else {
                                                    ew.showToast(`Tanggal dan jam tidak valid - ${inviteDateTimeCaption}`);
                                                }
                                                return;
                                            } 
                                            if (inviteDateObject < currentDate) {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`${inviteDateTimeCaption} must be later or equal than today`);
                                                } else {
                                                    ew.showToast(`${inviteDateTimeCaption} harus setelah atau sama dengan hari ini`);
                                                }
                                                return;
                                            }
                                            const createNotificationRequest = {
                                                subject: `Checklist Invitation`,
                                                body: `Please come on ${inviteDateTimeValue} for checklist process.`,
                                                crewID: parseInt(crewData.ID),
                                            };
                                            const inviteNotesValue = $('#x_InviteNotes').val();
                                            if (inviteNotesValue !== '') {
                                                createNotificationRequest.body += ` Notes: ${inviteNotesValue}`;
                                            }
                                            $.ajax({
                                                method: "POST",
                                                url: `${parentUrl}api/Registration/${createNotificationUrl}`,
                                                data: JSON.stringify(createNotificationRequest),
                                                contentType: "application/json",
                                                success: function(response) {
                                                    if (response.success) {
                                                        $('#invite-modal-dialog').modal('hide');
                                                        let successMessage = '';
                                                        if (selectedLanguage.id === 'en-US') {
                                                            successMessage = `Invite Crew Successful`;
                                                        } else {
                                                            successMessage = `Undang Kru Berhasil`;
                                                        }
                                                        const baseUrl = new URL(window.location.href).origin;
                                                        const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                                                        const params = new URLSearchParams(targetUrl.search);
                                                        params.set('successMessage', encodedSuccessMessage);
                                                        targetUrl.search = params.toString();
                                                        window.location.href = targetUrl.href;
                                                    } else {
                                                        $('#invite-modal-dialog').modal('hide');
                                                        const errorMessage = response.errorMessage;
                                                        ew.showToast(errorMessage);
                                                    }
                                                },
                                                error: function(xhr, textStatus, errorThrown) {
                                                    $('#invite-modal-dialog').modal('hide');
                                                    ew.showToast(errorThrown);
                                                }
                                            });
                                        });
                                        const invokeMCUModalButton = $('<button/>', {
                                            'class': 'btn btn-default ew-btn primary-green-bg me-3 primary-white-clr',
                                            'name': 'btn-invoke-mcu-modal',
                                            'id': 'btn-invoke-mcu-modal',
                                            'type': 'button',
                                            'text': (selectedLanguage.id === 'en-US') ? 'Accept' : 'Terima'
                                        });
                                        const invokeRejectModalButton = $('<button/>', {
                                            'class': 'btn btn-danger ew-btn me-auto primary-white-clr',
                                            'name': 'btn-invoke-reject-modal',
                                            'id': 'btn-invoke-reject-modal',
                                            'type': 'button',
                                            'text': (selectedLanguage.id === 'en-US') ? 'Reject' : 'Tolak'
                                        });
                                        const backButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                                            class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                                            id: "btn-back",
                                            name: "btn-back",
                                            href: `${parentUrl}ChecklistList`,
                                        });
                                        const flexDiv = $("<div class='d-flex mb-3'></div>");
                                        flexDiv.append(printButton);
                                        flexDiv.append(editButton);
                                        flexDiv.append(invokeInviteModalButton);
                                        if ($('#x_AssistantManagerPdeReviewed_0')[0].checked && $('#x_CrewingManagerApproval_0')[0].checked) {
                                            flexDiv.append(invokeMCUModalButton);
                                        }
                                        flexDiv.append(invokeRejectModalButton);
                                        flexDiv.append(backButton);
                                        const buttonsDiv = $("<div class='row ew-buttons mt-3'></div>");
                                        buttonsDiv.append(flexDiv);
                                        $('form#fCrewChecklistForAdminview').append(buttonsDiv);
                                        ew.createDateTimePicker("add-mcu-schedule", "x_MCUScheduleDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
                                        $('#x_MCUScheduleDateTime').val(replaceTimezoneOffset($('#x_MCUScheduleDateTime').val(), formatTimezoneOffset(new Date().getTimezoneOffset())));

                                        // Listen for input changes
                                        $('#x_MCUScheduleDateTime').on('change.td', function() {
                                            const timezoneOffset = new Date().getTimezoneOffset();
                                            const formattedTimezoneOffset = formatTimezoneOffset(timezoneOffset);
                                            const currentValue = $(this).val();
                                            const newValue = replaceTimezoneOffset(currentValue, formattedTimezoneOffset);
                                            $(this).val(newValue);
                                        });
                                        $('#btn-invoke-invite-modal').click(function() {
                                            $('#invite-modal-dialog').modal('show'); 
                                        });
                                        $('#btn-invoke-mcu-modal').click(function() {
                                            $('#mcu-modal-dialog').modal('show');
                                        });
                                        $('#mcu-modal-dialog').on('hidden.bs.modal', function() {
                                            $('#x_MCUScheduleDateTime').val(null);
                                            $('#x_MCULocation').val(null);
                                        });
                                        $('#btn-invoke-reject-modal').click(function() {
                                            $('#reject-modal-dialog').modal('show');
                                        });
                                        $('#reject-modal-dialog').on('hidden.bs.modal', function() {
                                            $('#x_RejectedReason').val(null);
                                        });
                                        const addMCUScheduleApiUrl = "add-mcu-schedule";
                                        $("#btn-add-mcu-schedule").click(function() {
                                            const mcuScheduleDateTimeValue = $('#x_MCUScheduleDateTime').val();
                                            const mcuScheduleDateTimeFormattedValue = mcuScheduleDateTimeValue.replace(/\sGMT ([+\-]\d+)/g, function(match, offset) {
                                                const hours = parseInt(offset);
                                                const sign = hours >= 0 ? '+' : '-';
                                                const formattedOffset = sign + Math.abs(hours).toString().padStart(2, '0') + ':00';
                                                return formattedOffset;
                                            });
                                            const mcuScheduleDateTimeCaption = $(`label[for="x_MCUScheduleDateTime"]`).text();
                                            if (mcuScheduleDateTimeFormattedValue == '') {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Please enter required field - ${mcuScheduleDateTimeCaption}`);
                                                } else {
                                                    ew.showToast(`Masukkan input yang dibutuhkan - ${mcuScheduleDateTimeCaption}`);
                                                }
                                                return;
                                            }
                                            const currentDate = new Date();
                                            const mcuScheduleDateObject = new Date(mcuScheduleDateTimeFormattedValue);
                                            if (isNaN(mcuScheduleDateObject)) {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Invalid date time - ${mcuScheduleDateTimeCaption}`);
                                                } else {
                                                    ew.showToast(`Tanggal dan jam tidak valid - ${mcuScheduleDateTimeCaption}`);
                                                }
                                                return;
                                            } 
                                            if (mcuScheduleDateObject < currentDate) {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`${mcuScheduleDateTimeCaption} must be later or equal than today`);
                                                } else {
                                                    ew.showToast(`${mcuScheduleDateTimeCaption} harus setelah atau sama dengan hari ini`);
                                                }
                                                return;
                                            }
                                            const mcuLocationValue = $('#x_MCULocation').val();
                                            const mcuLocationCaption = $(`label[for="x_MCULocation"]`).text();
                                            if (mcuLocationValue == '') {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Please enter required field - ${mcuLocationCaption}`);
                                                } else {
                                                    ew.showToast(`Masukkan input yang dibutuhkan - ${mcuLocationCaption}`);
                                                }
                                                return;
                                            }
                                            const mcuScheduleRequest = {
                                                mcuScheduleDateTime: mcuScheduleDateTimeFormattedValue,
                                                mcuLocation: mcuLocationValue,
                                                crewID: parseInt(crewData.ID),
                                            };
                                            $.ajax({
                                                method: "POST",
                                                url: `${parentUrl}api/Registration/${addMCUScheduleApiUrl}`,
                                                data: JSON.stringify(mcuScheduleRequest),
                                                contentType: "application/json",
                                                success: function(response) {
                                                    if (response.success) {
                                                        $('#mcu-modal-dialog').modal('hide');
                                                        let successMessage = '';
                                                        if (selectedLanguage.id === 'en-US') {
                                                            successMessage = `Add MCU Schedule Successful`;
                                                        } else {
                                                            successMessage = `Menambahkan Jadwal MCU Berhasil`;
                                                        }
                                                        const baseUrl = new URL(window.location.href).origin;
                                                        const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                                                        const params = new URLSearchParams(targetUrl.search);
                                                        params.set('successMessage', encodedSuccessMessage);
                                                        targetUrl.search = params.toString();
                                                        window.location.href = targetUrl.href;
                                                    } else {
                                                        $('#mcu-modal-dialog').modal('hide');
                                                        const errorMessage = response.errorMessage;
                                                        ew.showToast(errorMessage);
                                                    }
                                                },
                                                error: function(xhr, textStatus, errorThrown) {
                                                    $('#mcu-modal-dialog').modal('hide');
                                                    ew.showToast(errorThrown);
                                                }
                                            });
                                        });
                                        const rejectSingleCrewApiUrl = "reject-single-crew";
                                        $("#btn-reject").click(function() {
                                            const rejectedReasonValue = $('#x_RejectedReason').val();
                                            const rejectedReasonCaption = $(`label[for="x_RejectedReason"]`).text();
                                            if (rejectedReasonValue == '') {
                                                if (selectedLanguage.id === 'en-US') {
                                                    ew.showToast(`Please enter required field - ${rejectedReasonCaption}`);
                                                } else {
                                                    ew.showToast(`Masukkan input yang dibutuhkan - ${rejectedReasonCaption}`);
                                                }
                                            } else {
                                                const rejectSingleRequest = {
                                                    rejectReason: rejectedReasonValue,
                                                    crewID: parseInt(crewData.ID),
                                                };
                                                $.ajax({
                                                    method: "POST",
                                                    url: `${parentUrl}api/Registration/${rejectSingleCrewApiUrl}`,
                                                    data: JSON.stringify(rejectSingleRequest),
                                                    contentType: "application/json",
                                                    success: function(response) {
                                                        if (response.success) {
                                                            $('#reject-modal-dialog').modal('hide');
                                                            let successMessage = '';
                                                            if (selectedLanguage.id === 'en-US') {
                                                                successMessage = `Add ${rejectedReasonCaption} Successful`;
                                                            } else {
                                                                successMessage = `Menambahkan ${rejectedReasonCaption} Berhasil`;
                                                            }
                                                            const baseUrl = new URL(window.location.href).origin;
                                                            const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                                            const encodedSuccessMessage = encodeURIComponent(successMessage);
                                                            const params = new URLSearchParams(targetUrl.search);
                                                            params.set('successMessage', encodedSuccessMessage);
                                                            targetUrl.search = params.toString();
                                                            window.location.href = targetUrl.href;
                                                        } else {
                                                            $('#reject-modal-dialog').modal('hide');
                                                            const errorMessage = response.errorMessage;
                                                            ew.showToast(errorMessage);
                                                        }
                                                    },
                                                    error: function(xhr, textStatus, errorThrown) {
                                                        $('#reject-modal-dialog').modal('hide');
                                                        ew.showToast(errorThrown);
                                                    }
                                                });
                                            }
                                        });
                                    }
                                    // gmandayu: nambahin kondisi untuk "Crew Accepted dan Crew Rejected".
                                    else if (crewData.EmployeeStatus === 'Candidate - Accepted') {
                                        const printButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Print" : "Cetak",
                                            class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                                            id: "btn-print",
                                            name: "btn-print",
                                            href: `${parentUrl}PrintChecklist?id=${checklistID}`,
                                        });
                                        const backButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                                            class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                                            id: "btn-back",
                                            name: "btn-back",
                                            href: `${parentUrl}VCrewAcceptedForAdminList`,
                                        });
                                        const flexDiv = $("<div class='d-flex mb-3'></div>");
                                        flexDiv.append(printButton);
                                        flexDiv.append(backButton);
                                        const buttonsDiv = $("<div class='row ew-buttons mt-3'></div>");
                                        buttonsDiv.append(flexDiv);
                                        $('form#fCrewChecklistForAdminview').append(buttonsDiv);
                                    } else if (crewData.EmployeeStatus === 'Candidate - Rejected') {
                                        const printButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Print" : "Cetak",
                                            class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                                            id: "btn-print",
                                            name: "btn-print",
                                            href: `${parentUrl}PrintChecklist?id=${checklistID}`,
                                        });
                                        const backButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                                            class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                                            id: "btn-back",
                                            name: "btn-back",
                                            href: `${parentUrl}VCrewTemporaryRejectedForAdminList`,
                                        });
                                        const flexDiv = $("<div class='d-flex mb-3'></div>");
                                        flexDiv.append(printButton);
                                        flexDiv.append(backButton);
                                        const buttonsDiv = $("<div class='row ew-buttons mt-3'></div>");
                                        buttonsDiv.append(flexDiv);
                                        $('form#fCrewChecklistForAdminview').append(buttonsDiv);
                                    } else if (crewData.EmployeeStatus === 'Candidate - Temporary Rejected') {
                                        const printButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Print" : "Cetak",
                                            class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                                            id: "btn-print",
                                            name: "btn-print",
                                            href: `${parentUrl}PrintChecklist?id=${checklistID}`,
                                        });
                                        const backButton = $("<a></a>", { 
                                            text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                                            class: "btn btn-default ew-btn primary-black-clr gray-bg", 
                                            id: "btn-back",
                                            name: "btn-back",
                                            href: `${parentUrl}VCrewTemporaryRejectedForAdminList`,
                                        });
                                        const flexDiv = $("<div class='d-flex mb-3'></div>");
                                        flexDiv.append(printButton);
                                        flexDiv.append(backButton);
                                        const buttonsDiv = $("<div class='row ew-buttons mt-3'></div>");
                                        buttonsDiv.append(flexDiv);
                                        $('form#fCrewChecklistForAdminview').append(buttonsDiv);
                                    }
                                }
                            } else {
                                ew.showToast(response.errorMessage);
                            }
                        },
                        error: function(xhr, textStatus, errorThrown) {
                            ew.showToast(errorThrown);
                        }
                    });
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function (xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
});
</script>
}
