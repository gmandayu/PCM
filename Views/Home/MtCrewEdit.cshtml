@{
    // View
    View = this;

    // Check action result
    if (mtCrewEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtCrewEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtCrewEdit.ShowPageHeader()
@mtCrewEdit.ShowMessages()
<main class="edit">
<form name="fMTCrewedit" id="fMTCrewedit" class="@(mtCrewEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(mtCrewEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTCrew: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fMTCrewedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTCrewedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["IndividualCodeNumber", [fields.IndividualCodeNumber.visible && fields.IndividualCodeNumber.required ? ew.Validators.required(fields.IndividualCodeNumber.caption) : null], fields.IndividualCodeNumber.isInvalid],
            ["FullName", [fields.FullName.visible && fields.FullName.required ? ew.Validators.required(fields.FullName.caption) : null], fields.FullName.isInvalid],
            ["RequiredPhoto", [fields.RequiredPhoto.visible && fields.RequiredPhoto.required ? ew.Validators.fileRequired(fields.RequiredPhoto.caption) : null], fields.RequiredPhoto.isInvalid],
            ["VisaPhoto", [fields.VisaPhoto.visible && fields.VisaPhoto.required ? ew.Validators.fileRequired(fields.VisaPhoto.caption) : null], fields.VisaPhoto.isInvalid],
            ["Nationality_CountryID", [fields.Nationality_CountryID.visible && fields.Nationality_CountryID.required ? ew.Validators.required(fields.Nationality_CountryID.caption) : null], fields.Nationality_CountryID.isInvalid],
            ["CountryOfOrigin_CountryID", [fields.CountryOfOrigin_CountryID.visible && fields.CountryOfOrigin_CountryID.required ? ew.Validators.required(fields.CountryOfOrigin_CountryID.caption) : null], fields.CountryOfOrigin_CountryID.isInvalid],
            ["DateOfBirth", [fields.DateOfBirth.visible && fields.DateOfBirth.required ? ew.Validators.required(fields.DateOfBirth.caption) : null, ew.Validators.datetime(fields.DateOfBirth.clientFormatPattern)], fields.DateOfBirth.isInvalid],
            ["CityOfBirth", [fields.CityOfBirth.visible && fields.CityOfBirth.required ? ew.Validators.required(fields.CityOfBirth.caption) : null], fields.CityOfBirth.isInvalid],
            ["MaritalStatus", [fields.MaritalStatus.visible && fields.MaritalStatus.required ? ew.Validators.required(fields.MaritalStatus.caption) : null], fields.MaritalStatus.isInvalid],
            ["Gender", [fields.Gender.visible && fields.Gender.required ? ew.Validators.required(fields.Gender.caption) : null], fields.Gender.isInvalid],
            ["ReligionID", [fields.ReligionID.visible && fields.ReligionID.required ? ew.Validators.required(fields.ReligionID.caption) : null], fields.ReligionID.isInvalid],
            ["BloodType", [fields.BloodType.visible && fields.BloodType.required ? ew.Validators.required(fields.BloodType.caption) : null], fields.BloodType.isInvalid],
            ["RankAppliedFor_RankID", [fields.RankAppliedFor_RankID.visible && fields.RankAppliedFor_RankID.required ? ew.Validators.required(fields.RankAppliedFor_RankID.caption) : null], fields.RankAppliedFor_RankID.isInvalid],
            ["WillAcceptLowRank", [fields.WillAcceptLowRank.visible && fields.WillAcceptLowRank.required ? ew.Validators.required(fields.WillAcceptLowRank.caption) : null], fields.WillAcceptLowRank.isInvalid],
            ["AvailableFrom", [fields.AvailableFrom.visible && fields.AvailableFrom.required ? ew.Validators.required(fields.AvailableFrom.caption) : null, ew.Validators.datetime(fields.AvailableFrom.clientFormatPattern)], fields.AvailableFrom.isInvalid],
            ["AvailableUntil", [fields.AvailableUntil.visible && fields.AvailableUntil.required ? ew.Validators.required(fields.AvailableUntil.caption) : null, ew.Validators.datetime(fields.AvailableUntil.clientFormatPattern)], fields.AvailableUntil.isInvalid],
            ["PrimaryAddressDetail", [fields.PrimaryAddressDetail.visible && fields.PrimaryAddressDetail.required ? ew.Validators.required(fields.PrimaryAddressDetail.caption) : null], fields.PrimaryAddressDetail.isInvalid],
            ["PrimaryAddressCity", [fields.PrimaryAddressCity.visible && fields.PrimaryAddressCity.required ? ew.Validators.required(fields.PrimaryAddressCity.caption) : null], fields.PrimaryAddressCity.isInvalid],
            ["PrimaryAddressState", [fields.PrimaryAddressState.visible && fields.PrimaryAddressState.required ? ew.Validators.required(fields.PrimaryAddressState.caption) : null], fields.PrimaryAddressState.isInvalid],
            ["PrimaryAddressNearestAirport", [fields.PrimaryAddressNearestAirport.visible && fields.PrimaryAddressNearestAirport.required ? ew.Validators.required(fields.PrimaryAddressNearestAirport.caption) : null], fields.PrimaryAddressNearestAirport.isInvalid],
            ["PrimaryAddressPostCode", [fields.PrimaryAddressPostCode.visible && fields.PrimaryAddressPostCode.required ? ew.Validators.required(fields.PrimaryAddressPostCode.caption) : null], fields.PrimaryAddressPostCode.isInvalid],
            ["PrimaryAddressCountryID", [fields.PrimaryAddressCountryID.visible && fields.PrimaryAddressCountryID.required ? ew.Validators.required(fields.PrimaryAddressCountryID.caption) : null], fields.PrimaryAddressCountryID.isInvalid],
            ["PrimaryAddressHomeTel", [fields.PrimaryAddressHomeTel.visible && fields.PrimaryAddressHomeTel.required ? ew.Validators.required(fields.PrimaryAddressHomeTel.caption) : null], fields.PrimaryAddressHomeTel.isInvalid],
            ["PrimaryAddressFax", [fields.PrimaryAddressFax.visible && fields.PrimaryAddressFax.required ? ew.Validators.required(fields.PrimaryAddressFax.caption) : null], fields.PrimaryAddressFax.isInvalid],
            ["AlternativeAddressDetail", [fields.AlternativeAddressDetail.visible && fields.AlternativeAddressDetail.required ? ew.Validators.required(fields.AlternativeAddressDetail.caption) : null], fields.AlternativeAddressDetail.isInvalid],
            ["AlternativeAddressCity", [fields.AlternativeAddressCity.visible && fields.AlternativeAddressCity.required ? ew.Validators.required(fields.AlternativeAddressCity.caption) : null], fields.AlternativeAddressCity.isInvalid],
            ["AlternativeAddressState", [fields.AlternativeAddressState.visible && fields.AlternativeAddressState.required ? ew.Validators.required(fields.AlternativeAddressState.caption) : null], fields.AlternativeAddressState.isInvalid],
            ["AlternativeAddressHomeTel", [fields.AlternativeAddressHomeTel.visible && fields.AlternativeAddressHomeTel.required ? ew.Validators.required(fields.AlternativeAddressHomeTel.caption) : null], fields.AlternativeAddressHomeTel.isInvalid],
            ["AlternativeAddressPostCode", [fields.AlternativeAddressPostCode.visible && fields.AlternativeAddressPostCode.required ? ew.Validators.required(fields.AlternativeAddressPostCode.caption) : null], fields.AlternativeAddressPostCode.isInvalid],
            ["AlternativeAddressCountryID", [fields.AlternativeAddressCountryID.visible && fields.AlternativeAddressCountryID.required ? ew.Validators.required(fields.AlternativeAddressCountryID.caption) : null], fields.AlternativeAddressCountryID.isInvalid],
            ["MobileNumber", [fields.MobileNumber.visible && fields.MobileNumber.required ? ew.Validators.required(fields.MobileNumber.caption) : null], fields.MobileNumber.isInvalid],
            ["_Email", [fields._Email.visible && fields._Email.required ? ew.Validators.required(fields._Email.caption) : null, ew.Validators.email], fields._Email.isInvalid],
            ["ContactMethodEmail", [fields.ContactMethodEmail.visible && fields.ContactMethodEmail.required ? ew.Validators.required(fields.ContactMethodEmail.caption) : null], fields.ContactMethodEmail.isInvalid],
            ["ContactMethodFax", [fields.ContactMethodFax.visible && fields.ContactMethodFax.required ? ew.Validators.required(fields.ContactMethodFax.caption) : null], fields.ContactMethodFax.isInvalid],
            ["ContactMethodMobilePhone", [fields.ContactMethodMobilePhone.visible && fields.ContactMethodMobilePhone.required ? ew.Validators.required(fields.ContactMethodMobilePhone.caption) : null], fields.ContactMethodMobilePhone.isInvalid],
            ["ContactMethodHomePhone", [fields.ContactMethodHomePhone.visible && fields.ContactMethodHomePhone.required ? ew.Validators.required(fields.ContactMethodHomePhone.caption) : null], fields.ContactMethodHomePhone.isInvalid],
            ["ContactMethodPost", [fields.ContactMethodPost.visible && fields.ContactMethodPost.required ? ew.Validators.required(fields.ContactMethodPost.caption) : null], fields.ContactMethodPost.isInvalid],
            ["CollarSize", [fields.CollarSize.visible && fields.CollarSize.required ? ew.Validators.required(fields.CollarSize.caption) : null, ew.Validators.float], fields.CollarSize.isInvalid],
            ["ChestSize", [fields.ChestSize.visible && fields.ChestSize.required ? ew.Validators.required(fields.ChestSize.caption) : null, ew.Validators.float], fields.ChestSize.isInvalid],
            ["WaistSize", [fields.WaistSize.visible && fields.WaistSize.required ? ew.Validators.required(fields.WaistSize.caption) : null, ew.Validators.float], fields.WaistSize.isInvalid],
            ["InsideLegSize", [fields.InsideLegSize.visible && fields.InsideLegSize.required ? ew.Validators.required(fields.InsideLegSize.caption) : null, ew.Validators.float], fields.InsideLegSize.isInvalid],
            ["CapSize", [fields.CapSize.visible && fields.CapSize.required ? ew.Validators.required(fields.CapSize.caption) : null, ew.Validators.float], fields.CapSize.isInvalid],
            ["SweaterSize_ClothesSizeID", [fields.SweaterSize_ClothesSizeID.visible && fields.SweaterSize_ClothesSizeID.required ? ew.Validators.required(fields.SweaterSize_ClothesSizeID.caption) : null], fields.SweaterSize_ClothesSizeID.isInvalid],
            ["BoilersuitSize_ClothesSizeID", [fields.BoilersuitSize_ClothesSizeID.visible && fields.BoilersuitSize_ClothesSizeID.required ? ew.Validators.required(fields.BoilersuitSize_ClothesSizeID.caption) : null], fields.BoilersuitSize_ClothesSizeID.isInvalid],
            ["SocialSecurityNumber", [fields.SocialSecurityNumber.visible && fields.SocialSecurityNumber.required ? ew.Validators.required(fields.SocialSecurityNumber.caption) : null], fields.SocialSecurityNumber.isInvalid],
            ["SocialSecurityIssuingCountryID", [fields.SocialSecurityIssuingCountryID.visible && fields.SocialSecurityIssuingCountryID.required ? ew.Validators.required(fields.SocialSecurityIssuingCountryID.caption) : null], fields.SocialSecurityIssuingCountryID.isInvalid],
            ["SocialSecurityImage", [fields.SocialSecurityImage.visible && fields.SocialSecurityImage.required ? ew.Validators.fileRequired(fields.SocialSecurityImage.caption) : null], fields.SocialSecurityImage.isInvalid],
            ["PersonalTaxNumber", [fields.PersonalTaxNumber.visible && fields.PersonalTaxNumber.required ? ew.Validators.required(fields.PersonalTaxNumber.caption) : null], fields.PersonalTaxNumber.isInvalid],
            ["PersonalTaxIssuingCountryID", [fields.PersonalTaxIssuingCountryID.visible && fields.PersonalTaxIssuingCountryID.required ? ew.Validators.required(fields.PersonalTaxIssuingCountryID.caption) : null], fields.PersonalTaxIssuingCountryID.isInvalid],
            ["PersonalTaxImage", [fields.PersonalTaxImage.visible && fields.PersonalTaxImage.required ? ew.Validators.fileRequired(fields.PersonalTaxImage.caption) : null], fields.PersonalTaxImage.isInvalid],
            ["NomineeFullName", [fields.NomineeFullName.visible && fields.NomineeFullName.required ? ew.Validators.required(fields.NomineeFullName.caption) : null], fields.NomineeFullName.isInvalid],
            ["NomineeRelationship", [fields.NomineeRelationship.visible && fields.NomineeRelationship.required ? ew.Validators.required(fields.NomineeRelationship.caption) : null], fields.NomineeRelationship.isInvalid],
            ["NomineeGender", [fields.NomineeGender.visible && fields.NomineeGender.required ? ew.Validators.required(fields.NomineeGender.caption) : null], fields.NomineeGender.isInvalid],
            ["NomineeNationality_CountryID", [fields.NomineeNationality_CountryID.visible && fields.NomineeNationality_CountryID.required ? ew.Validators.required(fields.NomineeNationality_CountryID.caption) : null], fields.NomineeNationality_CountryID.isInvalid],
            ["NomineeAddressDetail", [fields.NomineeAddressDetail.visible && fields.NomineeAddressDetail.required ? ew.Validators.required(fields.NomineeAddressDetail.caption) : null], fields.NomineeAddressDetail.isInvalid],
            ["NomineeAddressCity", [fields.NomineeAddressCity.visible && fields.NomineeAddressCity.required ? ew.Validators.required(fields.NomineeAddressCity.caption) : null], fields.NomineeAddressCity.isInvalid],
            ["NomineeAddressPostCode", [fields.NomineeAddressPostCode.visible && fields.NomineeAddressPostCode.required ? ew.Validators.required(fields.NomineeAddressPostCode.caption) : null], fields.NomineeAddressPostCode.isInvalid],
            ["NomineeAddressCountryID", [fields.NomineeAddressCountryID.visible && fields.NomineeAddressCountryID.required ? ew.Validators.required(fields.NomineeAddressCountryID.caption) : null], fields.NomineeAddressCountryID.isInvalid],
            ["NomineeAddressHomeTel", [fields.NomineeAddressHomeTel.visible && fields.NomineeAddressHomeTel.required ? ew.Validators.required(fields.NomineeAddressHomeTel.caption) : null], fields.NomineeAddressHomeTel.isInvalid],
            ["NomineeEmail", [fields.NomineeEmail.visible && fields.NomineeEmail.required ? ew.Validators.required(fields.NomineeEmail.caption) : null, ew.Validators.email], fields.NomineeEmail.isInvalid],
            ["NomineeMobileNumber", [fields.NomineeMobileNumber.visible && fields.NomineeMobileNumber.required ? ew.Validators.required(fields.NomineeMobileNumber.caption) : null], fields.NomineeMobileNumber.isInvalid],
            ["NomineeValidVisa", [fields.NomineeValidVisa.visible && fields.NomineeValidVisa.required ? ew.Validators.required(fields.NomineeValidVisa.caption) : null], fields.NomineeValidVisa.isInvalid],
            ["BankName", [fields.BankName.visible && fields.BankName.required ? ew.Validators.required(fields.BankName.caption) : null], fields.BankName.isInvalid],
            ["BankAddress", [fields.BankAddress.visible && fields.BankAddress.required ? ew.Validators.required(fields.BankAddress.caption) : null], fields.BankAddress.isInvalid],
            ["BankAccountName", [fields.BankAccountName.visible && fields.BankAccountName.required ? ew.Validators.required(fields.BankAccountName.caption) : null], fields.BankAccountName.isInvalid],
            ["BankAccountNumber", [fields.BankAccountNumber.visible && fields.BankAccountNumber.required ? ew.Validators.required(fields.BankAccountNumber.caption) : null], fields.BankAccountNumber.isInvalid],
            ["BankSortCode", [fields.BankSortCode.visible && fields.BankSortCode.required ? ew.Validators.required(fields.BankSortCode.caption) : null], fields.BankSortCode.isInvalid],
            ["MNOPF", [fields.MNOPF.visible && fields.MNOPF.required ? ew.Validators.required(fields.MNOPF.caption) : null], fields.MNOPF.isInvalid],
            ["MembershipNumber", [fields.MembershipNumber.visible && fields.MembershipNumber.required ? ew.Validators.required(fields.MembershipNumber.caption) : null], fields.MembershipNumber.isInvalid],
            ["NationalInsuranceNumber", [fields.NationalInsuranceNumber.visible && fields.NationalInsuranceNumber.required ? ew.Validators.required(fields.NationalInsuranceNumber.caption) : null], fields.NationalInsuranceNumber.isInvalid],
            ["AVC", [fields.AVC.visible && fields.AVC.required ? ew.Validators.required(fields.AVC.caption) : null], fields.AVC.isInvalid],
            ["ForeignVisaHasBeenDenied", [fields.ForeignVisaHasBeenDenied.visible && fields.ForeignVisaHasBeenDenied.required ? ew.Validators.required(fields.ForeignVisaHasBeenDenied.caption) : null], fields.ForeignVisaHasBeenDenied.isInvalid],
            ["ForeignVisaDenied_CountryID", [fields.ForeignVisaDenied_CountryID.visible && fields.ForeignVisaDenied_CountryID.required ? ew.Validators.required(fields.ForeignVisaDenied_CountryID.caption) : null], fields.ForeignVisaDenied_CountryID.isInvalid],
            ["ForeignVisaDeniedReason", [fields.ForeignVisaDeniedReason.visible && fields.ForeignVisaDeniedReason.required ? ew.Validators.required(fields.ForeignVisaDeniedReason.caption) : null], fields.ForeignVisaDeniedReason.isInvalid],
            ["HasMaritimeAccidentOrCourtOfEnquiry", [fields.HasMaritimeAccidentOrCourtOfEnquiry.visible && fields.HasMaritimeAccidentOrCourtOfEnquiry.required ? ew.Validators.required(fields.HasMaritimeAccidentOrCourtOfEnquiry.caption) : null], fields.HasMaritimeAccidentOrCourtOfEnquiry.isInvalid],
            ["HasMaritimeAccidentOrCourtOfEnquiryDetails", [fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.visible && fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.required ? ew.Validators.required(fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.caption) : null], fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.isInvalid],
            ["Reference1CompanyName", [fields.Reference1CompanyName.visible && fields.Reference1CompanyName.required ? ew.Validators.required(fields.Reference1CompanyName.caption) : null], fields.Reference1CompanyName.isInvalid],
            ["Reference1ContactPersonName", [fields.Reference1ContactPersonName.visible && fields.Reference1ContactPersonName.required ? ew.Validators.required(fields.Reference1ContactPersonName.caption) : null], fields.Reference1ContactPersonName.isInvalid],
            ["Reference1CompanyAddress", [fields.Reference1CompanyAddress.visible && fields.Reference1CompanyAddress.required ? ew.Validators.required(fields.Reference1CompanyAddress.caption) : null], fields.Reference1CompanyAddress.isInvalid],
            ["Reference1CompanyCountryID", [fields.Reference1CompanyCountryID.visible && fields.Reference1CompanyCountryID.required ? ew.Validators.required(fields.Reference1CompanyCountryID.caption) : null], fields.Reference1CompanyCountryID.isInvalid],
            ["Reference1CompanyTelephone", [fields.Reference1CompanyTelephone.visible && fields.Reference1CompanyTelephone.required ? ew.Validators.required(fields.Reference1CompanyTelephone.caption) : null], fields.Reference1CompanyTelephone.isInvalid],
            ["Reference2CompanyName", [fields.Reference2CompanyName.visible && fields.Reference2CompanyName.required ? ew.Validators.required(fields.Reference2CompanyName.caption) : null], fields.Reference2CompanyName.isInvalid],
            ["Reference2ContactPersonName", [fields.Reference2ContactPersonName.visible && fields.Reference2ContactPersonName.required ? ew.Validators.required(fields.Reference2ContactPersonName.caption) : null], fields.Reference2ContactPersonName.isInvalid],
            ["Reference2CompanyAddress", [fields.Reference2CompanyAddress.visible && fields.Reference2CompanyAddress.required ? ew.Validators.required(fields.Reference2CompanyAddress.caption) : null], fields.Reference2CompanyAddress.isInvalid],
            ["Reference2CompanyCountryID", [fields.Reference2CompanyCountryID.visible && fields.Reference2CompanyCountryID.required ? ew.Validators.required(fields.Reference2CompanyCountryID.caption) : null], fields.Reference2CompanyCountryID.isInvalid],
            ["Reference2CompanyTelephone", [fields.Reference2CompanyTelephone.visible && fields.Reference2CompanyTelephone.required ? ew.Validators.required(fields.Reference2CompanyTelephone.caption) : null], fields.Reference2CompanyTelephone.isInvalid],
            ["Status", [fields.Status.visible && fields.Status.required ? ew.Validators.required(fields.Status.caption) : null], fields.Status.isInvalid],
            ["Reason", [fields.Reason.visible && fields.Reason.required ? ew.Validators.required(fields.Reason.caption) : null], fields.Reason.isInvalid],
            ["Weight", [fields.Weight.visible && fields.Weight.required ? ew.Validators.required(fields.Weight.caption) : null, ew.Validators.integer], fields.Weight.isInvalid],
            ["Height", [fields.Height.visible && fields.Height.required ? ew.Validators.required(fields.Height.caption) : null, ew.Validators.integer], fields.Height.isInvalid],
            ["CoverallSize", [fields.CoverallSize.visible && fields.CoverallSize.required ? ew.Validators.required(fields.CoverallSize.caption) : null], fields.CoverallSize.isInvalid],
            ["SafetyShoesSize", [fields.SafetyShoesSize.visible && fields.SafetyShoesSize.required ? ew.Validators.required(fields.SafetyShoesSize.caption) : null, ew.Validators.integer], fields.SafetyShoesSize.isInvalid],
            ["ShirtSize", [fields.ShirtSize.visible && fields.ShirtSize.required ? ew.Validators.required(fields.ShirtSize.caption) : null], fields.ShirtSize.isInvalid],
            ["TrousersSize", [fields.TrousersSize.visible && fields.TrousersSize.required ? ew.Validators.required(fields.TrousersSize.caption) : null], fields.TrousersSize.isInvalid],
            ["NSSF_Health_Number", [fields.NSSF_Health_Number.visible && fields.NSSF_Health_Number.required ? ew.Validators.required(fields.NSSF_Health_Number.caption) : null], fields.NSSF_Health_Number.isInvalid],
            ["NSSF_Occupation_Number", [fields.NSSF_Occupation_Number.visible && fields.NSSF_Occupation_Number.required ? ew.Validators.required(fields.NSSF_Occupation_Number.caption) : null], fields.NSSF_Occupation_Number.isInvalid],
            ["FinalAcceptedDate", [fields.FinalAcceptedDate.visible && fields.FinalAcceptedDate.required ? ew.Validators.required(fields.FinalAcceptedDate.caption) : null, ew.Validators.datetime(fields.FinalAcceptedDate.clientFormatPattern)], fields.FinalAcceptedDate.isInvalid],
            ["Reference1CompanyTelephoneCode_CountryID", [fields.Reference1CompanyTelephoneCode_CountryID.visible && fields.Reference1CompanyTelephoneCode_CountryID.required ? ew.Validators.required(fields.Reference1CompanyTelephoneCode_CountryID.caption) : null], fields.Reference1CompanyTelephoneCode_CountryID.isInvalid],
            ["Reference2CompanyTelephoneCode_CountryID", [fields.Reference2CompanyTelephoneCode_CountryID.visible && fields.Reference2CompanyTelephoneCode_CountryID.required ? ew.Validators.required(fields.Reference2CompanyTelephoneCode_CountryID.caption) : null], fields.Reference2CompanyTelephoneCode_CountryID.isInvalid],
            ["MobileNumberCode_CountryID", [fields.MobileNumberCode_CountryID.visible && fields.MobileNumberCode_CountryID.required ? ew.Validators.required(fields.MobileNumberCode_CountryID.caption) : null], fields.MobileNumberCode_CountryID.isInvalid],
            ["PrimaryAddressHomeTelCode_CountryID", [fields.PrimaryAddressHomeTelCode_CountryID.visible && fields.PrimaryAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.PrimaryAddressHomeTelCode_CountryID.caption) : null], fields.PrimaryAddressHomeTelCode_CountryID.isInvalid],
            ["AlternativeAddressHomeTelCode_CountryID", [fields.AlternativeAddressHomeTelCode_CountryID.visible && fields.AlternativeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.AlternativeAddressHomeTelCode_CountryID.caption) : null], fields.AlternativeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeAddressHomeTelCode_CountryID", [fields.NomineeAddressHomeTelCode_CountryID.visible && fields.NomineeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.NomineeAddressHomeTelCode_CountryID.caption) : null], fields.NomineeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeMobileNumberCode_CountryID", [fields.NomineeMobileNumberCode_CountryID.visible && fields.NomineeMobileNumberCode_CountryID.required ? ew.Validators.required(fields.NomineeMobileNumberCode_CountryID.caption) : null], fields.NomineeMobileNumberCode_CountryID.isInvalid],
            ["RevisedReason", [fields.RevisedReason.visible && fields.RevisedReason.required ? ew.Validators.required(fields.RevisedReason.caption) : null], fields.RevisedReason.isInvalid],
            ["RevisedDateTime", [fields.RevisedDateTime.visible && fields.RevisedDateTime.required ? ew.Validators.required(fields.RevisedDateTime.caption) : null, ew.Validators.datetime(fields.RevisedDateTime.clientFormatPattern)], fields.RevisedDateTime.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Nationality_CountryID": @Html.Raw(mtCrewEdit.Nationality_CountryID.ToClientList(mtCrewEdit)),
            "CountryOfOrigin_CountryID": @Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.ToClientList(mtCrewEdit)),
            "MaritalStatus": @Html.Raw(mtCrewEdit.MaritalStatus.ToClientList(mtCrewEdit)),
            "Gender": @Html.Raw(mtCrewEdit.Gender.ToClientList(mtCrewEdit)),
            "ReligionID": @Html.Raw(mtCrewEdit.ReligionID.ToClientList(mtCrewEdit)),
            "BloodType": @Html.Raw(mtCrewEdit.BloodType.ToClientList(mtCrewEdit)),
            "RankAppliedFor_RankID": @Html.Raw(mtCrewEdit.RankAppliedFor_RankID.ToClientList(mtCrewEdit)),
            "WillAcceptLowRank": @Html.Raw(mtCrewEdit.WillAcceptLowRank.ToClientList(mtCrewEdit)),
            "PrimaryAddressCountryID": @Html.Raw(mtCrewEdit.PrimaryAddressCountryID.ToClientList(mtCrewEdit)),
            "AlternativeAddressCountryID": @Html.Raw(mtCrewEdit.AlternativeAddressCountryID.ToClientList(mtCrewEdit)),
            "ContactMethodEmail": @Html.Raw(mtCrewEdit.ContactMethodEmail.ToClientList(mtCrewEdit)),
            "ContactMethodFax": @Html.Raw(mtCrewEdit.ContactMethodFax.ToClientList(mtCrewEdit)),
            "ContactMethodMobilePhone": @Html.Raw(mtCrewEdit.ContactMethodMobilePhone.ToClientList(mtCrewEdit)),
            "ContactMethodHomePhone": @Html.Raw(mtCrewEdit.ContactMethodHomePhone.ToClientList(mtCrewEdit)),
            "ContactMethodPost": @Html.Raw(mtCrewEdit.ContactMethodPost.ToClientList(mtCrewEdit)),
            "SweaterSize_ClothesSizeID": @Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.ToClientList(mtCrewEdit)),
            "BoilersuitSize_ClothesSizeID": @Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.ToClientList(mtCrewEdit)),
            "SocialSecurityIssuingCountryID": @Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.ToClientList(mtCrewEdit)),
            "PersonalTaxIssuingCountryID": @Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.ToClientList(mtCrewEdit)),
            "NomineeGender": @Html.Raw(mtCrewEdit.NomineeGender.ToClientList(mtCrewEdit)),
            "NomineeNationality_CountryID": @Html.Raw(mtCrewEdit.NomineeNationality_CountryID.ToClientList(mtCrewEdit)),
            "NomineeAddressCountryID": @Html.Raw(mtCrewEdit.NomineeAddressCountryID.ToClientList(mtCrewEdit)),
            "NomineeValidVisa": @Html.Raw(mtCrewEdit.NomineeValidVisa.ToClientList(mtCrewEdit)),
            "ForeignVisaHasBeenDenied": @Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.ToClientList(mtCrewEdit)),
            "ForeignVisaDenied_CountryID": @Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.ToClientList(mtCrewEdit)),
            "HasMaritimeAccidentOrCourtOfEnquiry": @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.ToClientList(mtCrewEdit)),
            "Reference1CompanyCountryID": @Html.Raw(mtCrewEdit.Reference1CompanyCountryID.ToClientList(mtCrewEdit)),
            "Reference2CompanyCountryID": @Html.Raw(mtCrewEdit.Reference2CompanyCountryID.ToClientList(mtCrewEdit)),
            "Reference1CompanyTelephoneCode_CountryID": @Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.ToClientList(mtCrewEdit)),
            "Reference2CompanyTelephoneCode_CountryID": @Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.ToClientList(mtCrewEdit)),
            "MobileNumberCode_CountryID": @Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.ToClientList(mtCrewEdit)),
            "PrimaryAddressHomeTelCode_CountryID": @Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.ToClientList(mtCrewEdit)),
            "AlternativeAddressHomeTelCode_CountryID": @Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.ToClientList(mtCrewEdit)),
            "NomineeAddressHomeTelCode_CountryID": @Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.ToClientList(mtCrewEdit)),
            "NomineeMobileNumberCode_CountryID": @Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.ToClientList(mtCrewEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(mtCrewEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtCrewEdit.OldKeyName)" value="@Html.Raw(mtCrewEdit.OldKey)">
<div class="ew-edit-div"><!-- page* -->
@if (mtCrewEdit.IndividualCodeNumber.Visible) { // mtCrewEdit.IndividualCodeNumber.Visible (begin)
    <div id="r_IndividualCodeNumber" @Html.Raw(mtCrewEdit.IndividualCodeNumber.RowAttributes)>
        <label id="elh_MTCrew_IndividualCodeNumber" for="x_IndividualCodeNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.IndividualCodeNumber.Caption)@Html.Raw(mtCrewEdit.IndividualCodeNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.IndividualCodeNumber.CellAttributes)>
<span id="el_MTCrew_IndividualCodeNumber">
<input type="@(mtCrewEdit.IndividualCodeNumber.InputTextType)" name="x_IndividualCodeNumber" id="x_IndividualCodeNumber" data-table="MTCrew" data-field="x_IndividualCodeNumber" value="@Html.Raw(mtCrewEdit.IndividualCodeNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.IndividualCodeNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.IndividualCodeNumber.FormatPattern)"@Html.Raw(mtCrewEdit.IndividualCodeNumber.EditAttributes) aria-describedby="x_IndividualCodeNumber_help">
@Html.Raw(mtCrewEdit.IndividualCodeNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.IndividualCodeNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.IndividualCodeNumber.Visible (end) *@
@if (mtCrewEdit.FullName.Visible) { // mtCrewEdit.FullName.Visible (begin)
    <div id="r_FullName" @Html.Raw(mtCrewEdit.FullName.RowAttributes)>
        <label id="elh_MTCrew_FullName" for="x_FullName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.FullName.Caption)@Html.Raw(mtCrewEdit.FullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.FullName.CellAttributes)>
<span id="el_MTCrew_FullName">
<input type="@(mtCrewEdit.FullName.InputTextType)" name="x_FullName" id="x_FullName" data-table="MTCrew" data-field="x_FullName" value="@Html.Raw(mtCrewEdit.FullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.FullName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.FullName.FormatPattern)"@Html.Raw(mtCrewEdit.FullName.EditAttributes) aria-describedby="x_FullName_help">
@Html.Raw(mtCrewEdit.FullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.FullName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.FullName.Visible (end) *@
@if (mtCrewEdit.RequiredPhoto.Visible) { // mtCrewEdit.RequiredPhoto.Visible (begin)
    <div id="r_RequiredPhoto" @Html.Raw(mtCrewEdit.RequiredPhoto.RowAttributes)>
        <label id="elh_MTCrew_RequiredPhoto" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.RequiredPhoto.Caption)@Html.Raw(mtCrewEdit.RequiredPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.RequiredPhoto.CellAttributes)>
<span id="el_MTCrew_RequiredPhoto">
<div id="fd_x_RequiredPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_RequiredPhoto"
        name="x_RequiredPhoto"
        class="form-control ew-file-input"
        title="@(mtCrewEdit.RequiredPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_RequiredPhoto"
        data-size="100"
        data-accept-file-types="@(mtCrewEdit.RequiredPhoto.AcceptFileTypes)"
        data-max-file-size="@(mtCrewEdit.RequiredPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewEdit.RequiredPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_RequiredPhoto_help"
        @Html.Raw((mtCrewEdit.RequiredPhoto.ReadOnly || mtCrewEdit.RequiredPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewEdit.RequiredPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewEdit.RequiredPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.RequiredPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_RequiredPhoto" id= "fn_x_RequiredPhoto" value="@(mtCrewEdit.RequiredPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_RequiredPhoto" id= "fa_x_RequiredPhoto" value="@(Post("fa_x_RequiredPhoto") == "0" ? "0" : "1")">
<table id="ft_x_RequiredPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewEdit.RequiredPhoto.Visible (end) *@
@if (mtCrewEdit.VisaPhoto.Visible) { // mtCrewEdit.VisaPhoto.Visible (begin)
    <div id="r_VisaPhoto" @Html.Raw(mtCrewEdit.VisaPhoto.RowAttributes)>
        <label id="elh_MTCrew_VisaPhoto" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.VisaPhoto.Caption)@Html.Raw(mtCrewEdit.VisaPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.VisaPhoto.CellAttributes)>
<span id="el_MTCrew_VisaPhoto">
<div id="fd_x_VisaPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_VisaPhoto"
        name="x_VisaPhoto"
        class="form-control ew-file-input"
        title="@(mtCrewEdit.VisaPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_VisaPhoto"
        data-size="100"
        data-accept-file-types="@(mtCrewEdit.VisaPhoto.AcceptFileTypes)"
        data-max-file-size="@(mtCrewEdit.VisaPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewEdit.VisaPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_VisaPhoto_help"
        @Html.Raw((mtCrewEdit.VisaPhoto.ReadOnly || mtCrewEdit.VisaPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewEdit.VisaPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewEdit.VisaPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.VisaPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_VisaPhoto" id= "fn_x_VisaPhoto" value="@(mtCrewEdit.VisaPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_VisaPhoto" id= "fa_x_VisaPhoto" value="@(Post("fa_x_VisaPhoto") == "0" ? "0" : "1")">
<table id="ft_x_VisaPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewEdit.VisaPhoto.Visible (end) *@
@if (mtCrewEdit.Nationality_CountryID.Visible) { // mtCrewEdit.Nationality_CountryID.Visible (begin)
    <div id="r_Nationality_CountryID" @Html.Raw(mtCrewEdit.Nationality_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Nationality_CountryID" for="x_Nationality_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Nationality_CountryID.Caption)@Html.Raw(mtCrewEdit.Nationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Nationality_CountryID.CellAttributes)>
<span id="el_MTCrew_Nationality_CountryID">
    <select
        id="x_Nationality_CountryID"
        name="x_Nationality_CountryID"
        class="form-select ew-select@(mtCrewEdit.Nationality_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Nationality_CountryID"
        data-table="MTCrew"
        data-field="x_Nationality_CountryID"
        data-value-separator="@(mtCrewEdit.Nationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Nationality_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Nationality_CountryID.EditAttributes)>
        @(mtCrewEdit.Nationality_CountryID.SelectOptionListHtml("x_Nationality_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.Nationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Nationality_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.Nationality_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_Nationality_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Nationality_CountryID", selectId: "fMTCrewedit_x_Nationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Nationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Nationality_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Nationality_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Nationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Nationality_CountryID.Visible (end) *@
@if (mtCrewEdit.CountryOfOrigin_CountryID.Visible) { // mtCrewEdit.CountryOfOrigin_CountryID.Visible (begin)
    <div id="r_CountryOfOrigin_CountryID" @Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.RowAttributes)>
        <label id="elh_MTCrew_CountryOfOrigin_CountryID" for="x_CountryOfOrigin_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.Caption)@Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.CellAttributes)>
<span id="el_MTCrew_CountryOfOrigin_CountryID">
    <select
        id="x_CountryOfOrigin_CountryID"
        name="x_CountryOfOrigin_CountryID"
        class="form-select ew-select@(mtCrewEdit.CountryOfOrigin_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_CountryOfOrigin_CountryID"
        data-table="MTCrew"
        data-field="x_CountryOfOrigin_CountryID"
        data-value-separator="@(mtCrewEdit.CountryOfOrigin_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.CountryOfOrigin_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.EditAttributes)>
        @(mtCrewEdit.CountryOfOrigin_CountryID.SelectOptionListHtml("x_CountryOfOrigin_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.CountryOfOrigin_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_CountryOfOrigin_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_CountryOfOrigin_CountryID", selectId: "fMTCrewedit_x_CountryOfOrigin_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.CountryOfOrigin_CountryID?.lookupOptions.length) {
        options.data = { id: "x_CountryOfOrigin_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_CountryOfOrigin_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.CountryOfOrigin_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.CountryOfOrigin_CountryID.Visible (end) *@
@if (mtCrewEdit.DateOfBirth.Visible) { // mtCrewEdit.DateOfBirth.Visible (begin)
    <div id="r_DateOfBirth" @Html.Raw(mtCrewEdit.DateOfBirth.RowAttributes)>
        <label id="elh_MTCrew_DateOfBirth" for="x_DateOfBirth" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.DateOfBirth.Caption)@Html.Raw(mtCrewEdit.DateOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.DateOfBirth.CellAttributes)>
<span id="el_MTCrew_DateOfBirth">
<input type="@(mtCrewEdit.DateOfBirth.InputTextType)" name="x_DateOfBirth" id="x_DateOfBirth" data-table="MTCrew" data-field="x_DateOfBirth" value="@Html.Raw(mtCrewEdit.DateOfBirth.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.DateOfBirth.PlaceHolder))" data-format-pattern="@(mtCrewEdit.DateOfBirth.FormatPattern)"@Html.Raw(mtCrewEdit.DateOfBirth.EditAttributes) aria-describedby="x_DateOfBirth_help">
@Html.Raw(mtCrewEdit.DateOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.DateOfBirth.GetErrorMessage())</div>
@if (!mtCrewEdit.DateOfBirth.ReadOnly && !mtCrewEdit.DateOfBirth.Disabled && !mtCrewEdit.DateOfBirth.EditAttrs.Is("readonly") && !mtCrewEdit.DateOfBirth.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewedit", "x_DateOfBirth", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewEdit.DateOfBirth.Visible (end) *@
@if (mtCrewEdit.CityOfBirth.Visible) { // mtCrewEdit.CityOfBirth.Visible (begin)
    <div id="r_CityOfBirth" @Html.Raw(mtCrewEdit.CityOfBirth.RowAttributes)>
        <label id="elh_MTCrew_CityOfBirth" for="x_CityOfBirth" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.CityOfBirth.Caption)@Html.Raw(mtCrewEdit.CityOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.CityOfBirth.CellAttributes)>
<span id="el_MTCrew_CityOfBirth">
<input type="@(mtCrewEdit.CityOfBirth.InputTextType)" name="x_CityOfBirth" id="x_CityOfBirth" data-table="MTCrew" data-field="x_CityOfBirth" value="@Html.Raw(mtCrewEdit.CityOfBirth.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.CityOfBirth.PlaceHolder))" data-format-pattern="@(mtCrewEdit.CityOfBirth.FormatPattern)"@Html.Raw(mtCrewEdit.CityOfBirth.EditAttributes) aria-describedby="x_CityOfBirth_help">
@Html.Raw(mtCrewEdit.CityOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.CityOfBirth.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.CityOfBirth.Visible (end) *@
@if (mtCrewEdit.MaritalStatus.Visible) { // mtCrewEdit.MaritalStatus.Visible (begin)
    <div id="r_MaritalStatus" @Html.Raw(mtCrewEdit.MaritalStatus.RowAttributes)>
        <label id="elh_MTCrew_MaritalStatus" for="x_MaritalStatus" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.MaritalStatus.Caption)@Html.Raw(mtCrewEdit.MaritalStatus.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.MaritalStatus.CellAttributes)>
<span id="el_MTCrew_MaritalStatus">
    <select
        id="x_MaritalStatus"
        name="x_MaritalStatus"
        class="form-select ew-select@(mtCrewEdit.MaritalStatus.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_MaritalStatus"
        data-table="MTCrew"
        data-field="x_MaritalStatus"
        data-value-separator="@(mtCrewEdit.MaritalStatus.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.MaritalStatus.PlaceHolder))"
        @Html.Raw(mtCrewEdit.MaritalStatus.EditAttributes)>
        @(mtCrewEdit.MaritalStatus.SelectOptionListHtml("x_MaritalStatus"))
    </select>
    @Html.Raw(mtCrewEdit.MaritalStatus.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.MaritalStatus.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_MaritalStatus", selectId: "fMTCrewedit_x_MaritalStatus" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.MaritalStatus?.lookupOptions.length) {
        options.data = { id: "x_MaritalStatus", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_MaritalStatus", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.MaritalStatus.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.MaritalStatus.Visible (end) *@
@if (mtCrewEdit.Gender.Visible) { // mtCrewEdit.Gender.Visible (begin)
    <div id="r_Gender" @Html.Raw(mtCrewEdit.Gender.RowAttributes)>
        <label id="elh_MTCrew_Gender" for="x_Gender" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Gender.Caption)@Html.Raw(mtCrewEdit.Gender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Gender.CellAttributes)>
<span id="el_MTCrew_Gender">
    <select
        id="x_Gender"
        name="x_Gender"
        class="form-select ew-select@(mtCrewEdit.Gender.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Gender"
        data-table="MTCrew"
        data-field="x_Gender"
        data-value-separator="@(mtCrewEdit.Gender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Gender.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Gender.EditAttributes)>
        @(mtCrewEdit.Gender.SelectOptionListHtml("x_Gender"))
    </select>
    @Html.Raw(mtCrewEdit.Gender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Gender.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Gender", selectId: "fMTCrewedit_x_Gender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Gender?.lookupOptions.length) {
        options.data = { id: "x_Gender", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Gender", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Gender.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Gender.Visible (end) *@
@if (mtCrewEdit.ReligionID.Visible) { // mtCrewEdit.ReligionID.Visible (begin)
    <div id="r_ReligionID" @Html.Raw(mtCrewEdit.ReligionID.RowAttributes)>
        <label id="elh_MTCrew_ReligionID" for="x_ReligionID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ReligionID.Caption)@Html.Raw(mtCrewEdit.ReligionID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ReligionID.CellAttributes)>
<span id="el_MTCrew_ReligionID">
    <select
        id="x_ReligionID"
        name="x_ReligionID"
        class="form-select ew-select@(mtCrewEdit.ReligionID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_ReligionID"
        data-table="MTCrew"
        data-field="x_ReligionID"
        data-value-separator="@(mtCrewEdit.ReligionID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.ReligionID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.ReligionID.EditAttributes)>
        @(mtCrewEdit.ReligionID.SelectOptionListHtml("x_ReligionID"))
    </select>
    @Html.Raw(mtCrewEdit.ReligionID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ReligionID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.ReligionID.Lookup.GetParamTag(mtCrewEdit, "p_x_ReligionID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_ReligionID", selectId: "fMTCrewedit_x_ReligionID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.ReligionID?.lookupOptions.length) {
        options.data = { id: "x_ReligionID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_ReligionID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.ReligionID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.ReligionID.Visible (end) *@
@if (mtCrewEdit.BloodType.Visible) { // mtCrewEdit.BloodType.Visible (begin)
    <div id="r_BloodType" @Html.Raw(mtCrewEdit.BloodType.RowAttributes)>
        <label id="elh_MTCrew_BloodType" for="x_BloodType" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BloodType.Caption)@Html.Raw(mtCrewEdit.BloodType.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BloodType.CellAttributes)>
<span id="el_MTCrew_BloodType">
    <select
        id="x_BloodType"
        name="x_BloodType"
        class="form-select ew-select@(mtCrewEdit.BloodType.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_BloodType"
        data-table="MTCrew"
        data-field="x_BloodType"
        data-value-separator="@(mtCrewEdit.BloodType.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.BloodType.PlaceHolder))"
        @Html.Raw(mtCrewEdit.BloodType.EditAttributes)>
        @(mtCrewEdit.BloodType.SelectOptionListHtml("x_BloodType"))
    </select>
    @Html.Raw(mtCrewEdit.BloodType.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.BloodType.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_BloodType", selectId: "fMTCrewedit_x_BloodType" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.BloodType?.lookupOptions.length) {
        options.data = { id: "x_BloodType", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_BloodType", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.BloodType.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BloodType.Visible (end) *@
@if (mtCrewEdit.RankAppliedFor_RankID.Visible) { // mtCrewEdit.RankAppliedFor_RankID.Visible (begin)
    <div id="r_RankAppliedFor_RankID" @Html.Raw(mtCrewEdit.RankAppliedFor_RankID.RowAttributes)>
        <label id="elh_MTCrew_RankAppliedFor_RankID" for="x_RankAppliedFor_RankID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.RankAppliedFor_RankID.Caption)@Html.Raw(mtCrewEdit.RankAppliedFor_RankID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.RankAppliedFor_RankID.CellAttributes)>
<span id="el_MTCrew_RankAppliedFor_RankID">
    <select
        id="x_RankAppliedFor_RankID"
        name="x_RankAppliedFor_RankID"
        class="form-select ew-select@(mtCrewEdit.RankAppliedFor_RankID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_RankAppliedFor_RankID"
        data-table="MTCrew"
        data-field="x_RankAppliedFor_RankID"
        data-value-separator="@(mtCrewEdit.RankAppliedFor_RankID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.RankAppliedFor_RankID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.RankAppliedFor_RankID.EditAttributes)>
        @(mtCrewEdit.RankAppliedFor_RankID.SelectOptionListHtml("x_RankAppliedFor_RankID"))
    </select>
    @Html.Raw(mtCrewEdit.RankAppliedFor_RankID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.RankAppliedFor_RankID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.RankAppliedFor_RankID.Lookup.GetParamTag(mtCrewEdit, "p_x_RankAppliedFor_RankID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_RankAppliedFor_RankID", selectId: "fMTCrewedit_x_RankAppliedFor_RankID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.RankAppliedFor_RankID?.lookupOptions.length) {
        options.data = { id: "x_RankAppliedFor_RankID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_RankAppliedFor_RankID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.RankAppliedFor_RankID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.RankAppliedFor_RankID.Visible (end) *@
@if (mtCrewEdit.WillAcceptLowRank.Visible) { // mtCrewEdit.WillAcceptLowRank.Visible (begin)
    <div id="r_WillAcceptLowRank" @Html.Raw(mtCrewEdit.WillAcceptLowRank.RowAttributes)>
        <label id="elh_MTCrew_WillAcceptLowRank" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.WillAcceptLowRank.Caption)@Html.Raw(mtCrewEdit.WillAcceptLowRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.WillAcceptLowRank.CellAttributes)>
<span id="el_MTCrew_WillAcceptLowRank">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.WillAcceptLowRank.IsInvalidClass)" data-table="MTCrew" data-field="x_WillAcceptLowRank" data-boolean name="x_WillAcceptLowRank" id="x_WillAcceptLowRank" value="1" checked="@ConvertToBool(mtCrewEdit.WillAcceptLowRank.CurrentValue)" @Html.Raw(mtCrewEdit.WillAcceptLowRank.EditAttributes) aria-describedby="x_WillAcceptLowRank_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.WillAcceptLowRank.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.WillAcceptLowRank.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.WillAcceptLowRank.Visible (end) *@
@if (mtCrewEdit.AvailableFrom.Visible) { // mtCrewEdit.AvailableFrom.Visible (begin)
    <div id="r_AvailableFrom" @Html.Raw(mtCrewEdit.AvailableFrom.RowAttributes)>
        <label id="elh_MTCrew_AvailableFrom" for="x_AvailableFrom" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AvailableFrom.Caption)@Html.Raw(mtCrewEdit.AvailableFrom.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AvailableFrom.CellAttributes)>
<span id="el_MTCrew_AvailableFrom">
<input type="@(mtCrewEdit.AvailableFrom.InputTextType)" name="x_AvailableFrom" id="x_AvailableFrom" data-table="MTCrew" data-field="x_AvailableFrom" value="@Html.Raw(mtCrewEdit.AvailableFrom.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AvailableFrom.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AvailableFrom.FormatPattern)"@Html.Raw(mtCrewEdit.AvailableFrom.EditAttributes) aria-describedby="x_AvailableFrom_help">
@Html.Raw(mtCrewEdit.AvailableFrom.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AvailableFrom.GetErrorMessage())</div>
@if (!mtCrewEdit.AvailableFrom.ReadOnly && !mtCrewEdit.AvailableFrom.Disabled && !mtCrewEdit.AvailableFrom.EditAttrs.Is("readonly") && !mtCrewEdit.AvailableFrom.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewedit", "x_AvailableFrom", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewEdit.AvailableFrom.Visible (end) *@
@if (mtCrewEdit.AvailableUntil.Visible) { // mtCrewEdit.AvailableUntil.Visible (begin)
    <div id="r_AvailableUntil" @Html.Raw(mtCrewEdit.AvailableUntil.RowAttributes)>
        <label id="elh_MTCrew_AvailableUntil" for="x_AvailableUntil" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AvailableUntil.Caption)@Html.Raw(mtCrewEdit.AvailableUntil.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AvailableUntil.CellAttributes)>
<span id="el_MTCrew_AvailableUntil">
<input type="@(mtCrewEdit.AvailableUntil.InputTextType)" name="x_AvailableUntil" id="x_AvailableUntil" data-table="MTCrew" data-field="x_AvailableUntil" value="@Html.Raw(mtCrewEdit.AvailableUntil.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AvailableUntil.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AvailableUntil.FormatPattern)"@Html.Raw(mtCrewEdit.AvailableUntil.EditAttributes) aria-describedby="x_AvailableUntil_help">
@Html.Raw(mtCrewEdit.AvailableUntil.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AvailableUntil.GetErrorMessage())</div>
@if (!mtCrewEdit.AvailableUntil.ReadOnly && !mtCrewEdit.AvailableUntil.Disabled && !mtCrewEdit.AvailableUntil.EditAttrs.Is("readonly") && !mtCrewEdit.AvailableUntil.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewedit", "x_AvailableUntil", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewEdit.AvailableUntil.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressDetail.Visible) { // mtCrewEdit.PrimaryAddressDetail.Visible (begin)
    <div id="r_PrimaryAddressDetail" @Html.Raw(mtCrewEdit.PrimaryAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressDetail" for="x_PrimaryAddressDetail" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressDetail.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressDetail.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressDetail">
<textarea data-table="MTCrew" data-field="x_PrimaryAddressDetail" name="x_PrimaryAddressDetail" id="x_PrimaryAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressDetail.PlaceHolder))"@Html.Raw(mtCrewEdit.PrimaryAddressDetail.EditAttributes) aria-describedby="x_PrimaryAddressDetail_help">@(mtCrewEdit.PrimaryAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewEdit.PrimaryAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressDetail.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressCity.Visible) { // mtCrewEdit.PrimaryAddressCity.Visible (begin)
    <div id="r_PrimaryAddressCity" @Html.Raw(mtCrewEdit.PrimaryAddressCity.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressCity" for="x_PrimaryAddressCity" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressCity.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressCity.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressCity">
<input type="@(mtCrewEdit.PrimaryAddressCity.InputTextType)" name="x_PrimaryAddressCity" id="x_PrimaryAddressCity" data-table="MTCrew" data-field="x_PrimaryAddressCity" value="@Html.Raw(mtCrewEdit.PrimaryAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressCity.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressCity.EditAttributes) aria-describedby="x_PrimaryAddressCity_help">
@Html.Raw(mtCrewEdit.PrimaryAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressCity.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressState.Visible) { // mtCrewEdit.PrimaryAddressState.Visible (begin)
    <div id="r_PrimaryAddressState" @Html.Raw(mtCrewEdit.PrimaryAddressState.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressState" for="x_PrimaryAddressState" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressState.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressState.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressState">
<input type="@(mtCrewEdit.PrimaryAddressState.InputTextType)" name="x_PrimaryAddressState" id="x_PrimaryAddressState" data-table="MTCrew" data-field="x_PrimaryAddressState" value="@Html.Raw(mtCrewEdit.PrimaryAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressState.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressState.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressState.EditAttributes) aria-describedby="x_PrimaryAddressState_help">
@Html.Raw(mtCrewEdit.PrimaryAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressState.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressState.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressNearestAirport.Visible) { // mtCrewEdit.PrimaryAddressNearestAirport.Visible (begin)
    <div id="r_PrimaryAddressNearestAirport" @Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressNearestAirport" for="x_PrimaryAddressNearestAirport" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressNearestAirport">
<input type="@(mtCrewEdit.PrimaryAddressNearestAirport.InputTextType)" name="x_PrimaryAddressNearestAirport" id="x_PrimaryAddressNearestAirport" data-table="MTCrew" data-field="x_PrimaryAddressNearestAirport" value="@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressNearestAirport.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressNearestAirport.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.EditAttributes) aria-describedby="x_PrimaryAddressNearestAirport_help">
@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressNearestAirport.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressNearestAirport.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressPostCode.Visible) { // mtCrewEdit.PrimaryAddressPostCode.Visible (begin)
    <div id="r_PrimaryAddressPostCode" @Html.Raw(mtCrewEdit.PrimaryAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressPostCode" for="x_PrimaryAddressPostCode" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressPostCode.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressPostCode">
<input type="@(mtCrewEdit.PrimaryAddressPostCode.InputTextType)" name="x_PrimaryAddressPostCode" id="x_PrimaryAddressPostCode" data-table="MTCrew" data-field="x_PrimaryAddressPostCode" value="@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressPostCode.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.EditAttributes) aria-describedby="x_PrimaryAddressPostCode_help">
@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressPostCode.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressCountryID.Visible) { // mtCrewEdit.PrimaryAddressCountryID.Visible (begin)
    <div id="r_PrimaryAddressCountryID" @Html.Raw(mtCrewEdit.PrimaryAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressCountryID" for="x_PrimaryAddressCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressCountryID.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressCountryID.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressCountryID">
    <select
        id="x_PrimaryAddressCountryID"
        name="x_PrimaryAddressCountryID"
        class="form-select ew-select@(mtCrewEdit.PrimaryAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_PrimaryAddressCountryID"
        data-table="MTCrew"
        data-field="x_PrimaryAddressCountryID"
        data-value-separator="@(mtCrewEdit.PrimaryAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.PrimaryAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.PrimaryAddressCountryID.EditAttributes)>
        @(mtCrewEdit.PrimaryAddressCountryID.SelectOptionListHtml("x_PrimaryAddressCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.PrimaryAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.PrimaryAddressCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_PrimaryAddressCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_PrimaryAddressCountryID", selectId: "fMTCrewedit_x_PrimaryAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.PrimaryAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_PrimaryAddressCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PrimaryAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressCountryID.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressHomeTel.Visible) { // mtCrewEdit.PrimaryAddressHomeTel.Visible (begin)
    <div id="r_PrimaryAddressHomeTel" @Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressHomeTel" for="x_PrimaryAddressHomeTel" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressHomeTel">
<input type="@(mtCrewEdit.PrimaryAddressHomeTel.InputTextType)" name="x_PrimaryAddressHomeTel" id="x_PrimaryAddressHomeTel" data-table="MTCrew" data-field="x_PrimaryAddressHomeTel" value="@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.EditAttributes) aria-describedby="x_PrimaryAddressHomeTel_help">
@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressHomeTel.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressFax.Visible) { // mtCrewEdit.PrimaryAddressFax.Visible (begin)
    <div id="r_PrimaryAddressFax" @Html.Raw(mtCrewEdit.PrimaryAddressFax.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressFax" for="x_PrimaryAddressFax" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressFax.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressFax.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressFax.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressFax">
<input type="@(mtCrewEdit.PrimaryAddressFax.InputTextType)" name="x_PrimaryAddressFax" id="x_PrimaryAddressFax" data-table="MTCrew" data-field="x_PrimaryAddressFax" value="@Html.Raw(mtCrewEdit.PrimaryAddressFax.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PrimaryAddressFax.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PrimaryAddressFax.FormatPattern)"@Html.Raw(mtCrewEdit.PrimaryAddressFax.EditAttributes) aria-describedby="x_PrimaryAddressFax_help">
@Html.Raw(mtCrewEdit.PrimaryAddressFax.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressFax.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressFax.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressDetail.Visible) { // mtCrewEdit.AlternativeAddressDetail.Visible (begin)
    <div id="r_AlternativeAddressDetail" @Html.Raw(mtCrewEdit.AlternativeAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressDetail" for="x_AlternativeAddressDetail" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressDetail.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressDetail.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressDetail">
<textarea data-table="MTCrew" data-field="x_AlternativeAddressDetail" name="x_AlternativeAddressDetail" id="x_AlternativeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AlternativeAddressDetail.PlaceHolder))"@Html.Raw(mtCrewEdit.AlternativeAddressDetail.EditAttributes) aria-describedby="x_AlternativeAddressDetail_help">@(mtCrewEdit.AlternativeAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewEdit.AlternativeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressDetail.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressCity.Visible) { // mtCrewEdit.AlternativeAddressCity.Visible (begin)
    <div id="r_AlternativeAddressCity" @Html.Raw(mtCrewEdit.AlternativeAddressCity.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressCity" for="x_AlternativeAddressCity" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressCity.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressCity.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressCity">
<input type="@(mtCrewEdit.AlternativeAddressCity.InputTextType)" name="x_AlternativeAddressCity" id="x_AlternativeAddressCity" data-table="MTCrew" data-field="x_AlternativeAddressCity" value="@Html.Raw(mtCrewEdit.AlternativeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AlternativeAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AlternativeAddressCity.FormatPattern)"@Html.Raw(mtCrewEdit.AlternativeAddressCity.EditAttributes) aria-describedby="x_AlternativeAddressCity_help">
@Html.Raw(mtCrewEdit.AlternativeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressCity.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressState.Visible) { // mtCrewEdit.AlternativeAddressState.Visible (begin)
    <div id="r_AlternativeAddressState" @Html.Raw(mtCrewEdit.AlternativeAddressState.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressState" for="x_AlternativeAddressState" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressState.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressState.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressState">
<input type="@(mtCrewEdit.AlternativeAddressState.InputTextType)" name="x_AlternativeAddressState" id="x_AlternativeAddressState" data-table="MTCrew" data-field="x_AlternativeAddressState" value="@Html.Raw(mtCrewEdit.AlternativeAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AlternativeAddressState.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AlternativeAddressState.FormatPattern)"@Html.Raw(mtCrewEdit.AlternativeAddressState.EditAttributes) aria-describedby="x_AlternativeAddressState_help">
@Html.Raw(mtCrewEdit.AlternativeAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressState.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressState.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressHomeTel.Visible) { // mtCrewEdit.AlternativeAddressHomeTel.Visible (begin)
    <div id="r_AlternativeAddressHomeTel" @Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressHomeTel" for="x_AlternativeAddressHomeTel" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressHomeTel">
<input type="@(mtCrewEdit.AlternativeAddressHomeTel.InputTextType)" name="x_AlternativeAddressHomeTel" id="x_AlternativeAddressHomeTel" data-table="MTCrew" data-field="x_AlternativeAddressHomeTel" value="@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AlternativeAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AlternativeAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.EditAttributes) aria-describedby="x_AlternativeAddressHomeTel_help">
@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressHomeTel.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressPostCode.Visible) { // mtCrewEdit.AlternativeAddressPostCode.Visible (begin)
    <div id="r_AlternativeAddressPostCode" @Html.Raw(mtCrewEdit.AlternativeAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressPostCode" for="x_AlternativeAddressPostCode" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressPostCode.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressPostCode">
<input type="@(mtCrewEdit.AlternativeAddressPostCode.InputTextType)" name="x_AlternativeAddressPostCode" id="x_AlternativeAddressPostCode" data-table="MTCrew" data-field="x_AlternativeAddressPostCode" value="@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AlternativeAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AlternativeAddressPostCode.FormatPattern)"@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.EditAttributes) aria-describedby="x_AlternativeAddressPostCode_help">
@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressPostCode.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressCountryID.Visible) { // mtCrewEdit.AlternativeAddressCountryID.Visible (begin)
    <div id="r_AlternativeAddressCountryID" @Html.Raw(mtCrewEdit.AlternativeAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressCountryID" for="x_AlternativeAddressCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressCountryID.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressCountryID.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressCountryID">
    <select
        id="x_AlternativeAddressCountryID"
        name="x_AlternativeAddressCountryID"
        class="form-select ew-select@(mtCrewEdit.AlternativeAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_AlternativeAddressCountryID"
        data-table="MTCrew"
        data-field="x_AlternativeAddressCountryID"
        data-value-separator="@(mtCrewEdit.AlternativeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.AlternativeAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.AlternativeAddressCountryID.EditAttributes)>
        @(mtCrewEdit.AlternativeAddressCountryID.SelectOptionListHtml("x_AlternativeAddressCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.AlternativeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.AlternativeAddressCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_AlternativeAddressCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_AlternativeAddressCountryID", selectId: "fMTCrewedit_x_AlternativeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.AlternativeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_AlternativeAddressCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.AlternativeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressCountryID.Visible (end) *@
@if (mtCrewEdit.MobileNumber.Visible) { // mtCrewEdit.MobileNumber.Visible (begin)
    <div id="r_MobileNumber" @Html.Raw(mtCrewEdit.MobileNumber.RowAttributes)>
        <label id="elh_MTCrew_MobileNumber" for="x_MobileNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.MobileNumber.Caption)@Html.Raw(mtCrewEdit.MobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.MobileNumber.CellAttributes)>
<span id="el_MTCrew_MobileNumber">
<input type="@(mtCrewEdit.MobileNumber.InputTextType)" name="x_MobileNumber" id="x_MobileNumber" data-table="MTCrew" data-field="x_MobileNumber" value="@Html.Raw(mtCrewEdit.MobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.MobileNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.MobileNumber.FormatPattern)"@Html.Raw(mtCrewEdit.MobileNumber.EditAttributes) aria-describedby="x_MobileNumber_help">
@Html.Raw(mtCrewEdit.MobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.MobileNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.MobileNumber.Visible (end) *@
@if (mtCrewEdit._Email.Visible) { // mtCrewEdit._Email.Visible (begin)
    <div id="r__Email" @Html.Raw(mtCrewEdit._Email.RowAttributes)>
        <label id="elh_MTCrew__Email" for="x__Email" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit._Email.Caption)@Html.Raw(mtCrewEdit._Email.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit._Email.CellAttributes)>
<span id="el_MTCrew__Email">
<input type="@(mtCrewEdit._Email.InputTextType)" name="x__Email" id="x__Email" data-table="MTCrew" data-field="x__Email" value="@Html.Raw(mtCrewEdit._Email.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit._Email.PlaceHolder))" data-format-pattern="@(mtCrewEdit._Email.FormatPattern)"@Html.Raw(mtCrewEdit._Email.EditAttributes) aria-describedby="x__Email_help">
@Html.Raw(mtCrewEdit._Email.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit._Email.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit._Email.Visible (end) *@
@if (mtCrewEdit.ContactMethodEmail.Visible) { // mtCrewEdit.ContactMethodEmail.Visible (begin)
    <div id="r_ContactMethodEmail" @Html.Raw(mtCrewEdit.ContactMethodEmail.RowAttributes)>
        <label id="elh_MTCrew_ContactMethodEmail" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ContactMethodEmail.Caption)@Html.Raw(mtCrewEdit.ContactMethodEmail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ContactMethodEmail.CellAttributes)>
<span id="el_MTCrew_ContactMethodEmail">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ContactMethodEmail.IsInvalidClass)" data-table="MTCrew" data-field="x_ContactMethodEmail" data-boolean name="x_ContactMethodEmail" id="x_ContactMethodEmail" value="1" checked="@ConvertToBool(mtCrewEdit.ContactMethodEmail.CurrentValue)" @Html.Raw(mtCrewEdit.ContactMethodEmail.EditAttributes) aria-describedby="x_ContactMethodEmail_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ContactMethodEmail.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ContactMethodEmail.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ContactMethodEmail.Visible (end) *@
@if (mtCrewEdit.ContactMethodFax.Visible) { // mtCrewEdit.ContactMethodFax.Visible (begin)
    <div id="r_ContactMethodFax" @Html.Raw(mtCrewEdit.ContactMethodFax.RowAttributes)>
        <label id="elh_MTCrew_ContactMethodFax" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ContactMethodFax.Caption)@Html.Raw(mtCrewEdit.ContactMethodFax.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ContactMethodFax.CellAttributes)>
<span id="el_MTCrew_ContactMethodFax">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ContactMethodFax.IsInvalidClass)" data-table="MTCrew" data-field="x_ContactMethodFax" data-boolean name="x_ContactMethodFax" id="x_ContactMethodFax" value="1" checked="@ConvertToBool(mtCrewEdit.ContactMethodFax.CurrentValue)" @Html.Raw(mtCrewEdit.ContactMethodFax.EditAttributes) aria-describedby="x_ContactMethodFax_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ContactMethodFax.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ContactMethodFax.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ContactMethodFax.Visible (end) *@
@if (mtCrewEdit.ContactMethodMobilePhone.Visible) { // mtCrewEdit.ContactMethodMobilePhone.Visible (begin)
    <div id="r_ContactMethodMobilePhone" @Html.Raw(mtCrewEdit.ContactMethodMobilePhone.RowAttributes)>
        <label id="elh_MTCrew_ContactMethodMobilePhone" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ContactMethodMobilePhone.Caption)@Html.Raw(mtCrewEdit.ContactMethodMobilePhone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ContactMethodMobilePhone.CellAttributes)>
<span id="el_MTCrew_ContactMethodMobilePhone">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ContactMethodMobilePhone.IsInvalidClass)" data-table="MTCrew" data-field="x_ContactMethodMobilePhone" data-boolean name="x_ContactMethodMobilePhone" id="x_ContactMethodMobilePhone" value="1" checked="@ConvertToBool(mtCrewEdit.ContactMethodMobilePhone.CurrentValue)" @Html.Raw(mtCrewEdit.ContactMethodMobilePhone.EditAttributes) aria-describedby="x_ContactMethodMobilePhone_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ContactMethodMobilePhone.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ContactMethodMobilePhone.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ContactMethodMobilePhone.Visible (end) *@
@if (mtCrewEdit.ContactMethodHomePhone.Visible) { // mtCrewEdit.ContactMethodHomePhone.Visible (begin)
    <div id="r_ContactMethodHomePhone" @Html.Raw(mtCrewEdit.ContactMethodHomePhone.RowAttributes)>
        <label id="elh_MTCrew_ContactMethodHomePhone" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ContactMethodHomePhone.Caption)@Html.Raw(mtCrewEdit.ContactMethodHomePhone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ContactMethodHomePhone.CellAttributes)>
<span id="el_MTCrew_ContactMethodHomePhone">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ContactMethodHomePhone.IsInvalidClass)" data-table="MTCrew" data-field="x_ContactMethodHomePhone" data-boolean name="x_ContactMethodHomePhone" id="x_ContactMethodHomePhone" value="1" checked="@ConvertToBool(mtCrewEdit.ContactMethodHomePhone.CurrentValue)" @Html.Raw(mtCrewEdit.ContactMethodHomePhone.EditAttributes) aria-describedby="x_ContactMethodHomePhone_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ContactMethodHomePhone.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ContactMethodHomePhone.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ContactMethodHomePhone.Visible (end) *@
@if (mtCrewEdit.ContactMethodPost.Visible) { // mtCrewEdit.ContactMethodPost.Visible (begin)
    <div id="r_ContactMethodPost" @Html.Raw(mtCrewEdit.ContactMethodPost.RowAttributes)>
        <label id="elh_MTCrew_ContactMethodPost" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ContactMethodPost.Caption)@Html.Raw(mtCrewEdit.ContactMethodPost.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ContactMethodPost.CellAttributes)>
<span id="el_MTCrew_ContactMethodPost">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ContactMethodPost.IsInvalidClass)" data-table="MTCrew" data-field="x_ContactMethodPost" data-boolean name="x_ContactMethodPost" id="x_ContactMethodPost" value="1" checked="@ConvertToBool(mtCrewEdit.ContactMethodPost.CurrentValue)" @Html.Raw(mtCrewEdit.ContactMethodPost.EditAttributes) aria-describedby="x_ContactMethodPost_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ContactMethodPost.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ContactMethodPost.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ContactMethodPost.Visible (end) *@
@if (mtCrewEdit.CollarSize.Visible) { // mtCrewEdit.CollarSize.Visible (begin)
    <div id="r_CollarSize" @Html.Raw(mtCrewEdit.CollarSize.RowAttributes)>
        <label id="elh_MTCrew_CollarSize" for="x_CollarSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.CollarSize.Caption)@Html.Raw(mtCrewEdit.CollarSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.CollarSize.CellAttributes)>
<span id="el_MTCrew_CollarSize">
<input type="@(mtCrewEdit.CollarSize.InputTextType)" name="x_CollarSize" id="x_CollarSize" data-table="MTCrew" data-field="x_CollarSize" value="@Html.Raw(mtCrewEdit.CollarSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.CollarSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.CollarSize.FormatPattern)"@Html.Raw(mtCrewEdit.CollarSize.EditAttributes) aria-describedby="x_CollarSize_help">
@Html.Raw(mtCrewEdit.CollarSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.CollarSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.CollarSize.Visible (end) *@
@if (mtCrewEdit.ChestSize.Visible) { // mtCrewEdit.ChestSize.Visible (begin)
    <div id="r_ChestSize" @Html.Raw(mtCrewEdit.ChestSize.RowAttributes)>
        <label id="elh_MTCrew_ChestSize" for="x_ChestSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ChestSize.Caption)@Html.Raw(mtCrewEdit.ChestSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ChestSize.CellAttributes)>
<span id="el_MTCrew_ChestSize">
<input type="@(mtCrewEdit.ChestSize.InputTextType)" name="x_ChestSize" id="x_ChestSize" data-table="MTCrew" data-field="x_ChestSize" value="@Html.Raw(mtCrewEdit.ChestSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.ChestSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.ChestSize.FormatPattern)"@Html.Raw(mtCrewEdit.ChestSize.EditAttributes) aria-describedby="x_ChestSize_help">
@Html.Raw(mtCrewEdit.ChestSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.ChestSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.ChestSize.Visible (end) *@
@if (mtCrewEdit.WaistSize.Visible) { // mtCrewEdit.WaistSize.Visible (begin)
    <div id="r_WaistSize" @Html.Raw(mtCrewEdit.WaistSize.RowAttributes)>
        <label id="elh_MTCrew_WaistSize" for="x_WaistSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.WaistSize.Caption)@Html.Raw(mtCrewEdit.WaistSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.WaistSize.CellAttributes)>
<span id="el_MTCrew_WaistSize">
<input type="@(mtCrewEdit.WaistSize.InputTextType)" name="x_WaistSize" id="x_WaistSize" data-table="MTCrew" data-field="x_WaistSize" value="@Html.Raw(mtCrewEdit.WaistSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.WaistSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.WaistSize.FormatPattern)"@Html.Raw(mtCrewEdit.WaistSize.EditAttributes) aria-describedby="x_WaistSize_help">
@Html.Raw(mtCrewEdit.WaistSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.WaistSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.WaistSize.Visible (end) *@
@if (mtCrewEdit.InsideLegSize.Visible) { // mtCrewEdit.InsideLegSize.Visible (begin)
    <div id="r_InsideLegSize" @Html.Raw(mtCrewEdit.InsideLegSize.RowAttributes)>
        <label id="elh_MTCrew_InsideLegSize" for="x_InsideLegSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.InsideLegSize.Caption)@Html.Raw(mtCrewEdit.InsideLegSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.InsideLegSize.CellAttributes)>
<span id="el_MTCrew_InsideLegSize">
<input type="@(mtCrewEdit.InsideLegSize.InputTextType)" name="x_InsideLegSize" id="x_InsideLegSize" data-table="MTCrew" data-field="x_InsideLegSize" value="@Html.Raw(mtCrewEdit.InsideLegSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.InsideLegSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.InsideLegSize.FormatPattern)"@Html.Raw(mtCrewEdit.InsideLegSize.EditAttributes) aria-describedby="x_InsideLegSize_help">
@Html.Raw(mtCrewEdit.InsideLegSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.InsideLegSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.InsideLegSize.Visible (end) *@
@if (mtCrewEdit.CapSize.Visible) { // mtCrewEdit.CapSize.Visible (begin)
    <div id="r_CapSize" @Html.Raw(mtCrewEdit.CapSize.RowAttributes)>
        <label id="elh_MTCrew_CapSize" for="x_CapSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.CapSize.Caption)@Html.Raw(mtCrewEdit.CapSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.CapSize.CellAttributes)>
<span id="el_MTCrew_CapSize">
<input type="@(mtCrewEdit.CapSize.InputTextType)" name="x_CapSize" id="x_CapSize" data-table="MTCrew" data-field="x_CapSize" value="@Html.Raw(mtCrewEdit.CapSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.CapSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.CapSize.FormatPattern)"@Html.Raw(mtCrewEdit.CapSize.EditAttributes) aria-describedby="x_CapSize_help">
@Html.Raw(mtCrewEdit.CapSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.CapSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.CapSize.Visible (end) *@
@if (mtCrewEdit.SweaterSize_ClothesSizeID.Visible) { // mtCrewEdit.SweaterSize_ClothesSizeID.Visible (begin)
    <div id="r_SweaterSize_ClothesSizeID" @Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.RowAttributes)>
        <label id="elh_MTCrew_SweaterSize_ClothesSizeID" for="x_SweaterSize_ClothesSizeID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.Caption)@Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.CellAttributes)>
<span id="el_MTCrew_SweaterSize_ClothesSizeID">
    <select
        id="x_SweaterSize_ClothesSizeID"
        name="x_SweaterSize_ClothesSizeID"
        class="form-select ew-select@(mtCrewEdit.SweaterSize_ClothesSizeID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_SweaterSize_ClothesSizeID"
        data-table="MTCrew"
        data-field="x_SweaterSize_ClothesSizeID"
        data-value-separator="@(mtCrewEdit.SweaterSize_ClothesSizeID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.SweaterSize_ClothesSizeID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.EditAttributes)>
        @(mtCrewEdit.SweaterSize_ClothesSizeID.SelectOptionListHtml("x_SweaterSize_ClothesSizeID"))
    </select>
    @Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.SweaterSize_ClothesSizeID.Lookup.GetParamTag(mtCrewEdit, "p_x_SweaterSize_ClothesSizeID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_SweaterSize_ClothesSizeID", selectId: "fMTCrewedit_x_SweaterSize_ClothesSizeID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.SweaterSize_ClothesSizeID?.lookupOptions.length) {
        options.data = { id: "x_SweaterSize_ClothesSizeID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_SweaterSize_ClothesSizeID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.SweaterSize_ClothesSizeID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.SweaterSize_ClothesSizeID.Visible (end) *@
@if (mtCrewEdit.BoilersuitSize_ClothesSizeID.Visible) { // mtCrewEdit.BoilersuitSize_ClothesSizeID.Visible (begin)
    <div id="r_BoilersuitSize_ClothesSizeID" @Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.RowAttributes)>
        <label id="elh_MTCrew_BoilersuitSize_ClothesSizeID" for="x_BoilersuitSize_ClothesSizeID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.Caption)@Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.CellAttributes)>
<span id="el_MTCrew_BoilersuitSize_ClothesSizeID">
    <select
        id="x_BoilersuitSize_ClothesSizeID"
        name="x_BoilersuitSize_ClothesSizeID"
        class="form-select ew-select@(mtCrewEdit.BoilersuitSize_ClothesSizeID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_BoilersuitSize_ClothesSizeID"
        data-table="MTCrew"
        data-field="x_BoilersuitSize_ClothesSizeID"
        data-value-separator="@(mtCrewEdit.BoilersuitSize_ClothesSizeID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.BoilersuitSize_ClothesSizeID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.EditAttributes)>
        @(mtCrewEdit.BoilersuitSize_ClothesSizeID.SelectOptionListHtml("x_BoilersuitSize_ClothesSizeID"))
    </select>
    @Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.BoilersuitSize_ClothesSizeID.Lookup.GetParamTag(mtCrewEdit, "p_x_BoilersuitSize_ClothesSizeID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_BoilersuitSize_ClothesSizeID", selectId: "fMTCrewedit_x_BoilersuitSize_ClothesSizeID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.BoilersuitSize_ClothesSizeID?.lookupOptions.length) {
        options.data = { id: "x_BoilersuitSize_ClothesSizeID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_BoilersuitSize_ClothesSizeID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.BoilersuitSize_ClothesSizeID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BoilersuitSize_ClothesSizeID.Visible (end) *@
@if (mtCrewEdit.SocialSecurityNumber.Visible) { // mtCrewEdit.SocialSecurityNumber.Visible (begin)
    <div id="r_SocialSecurityNumber" @Html.Raw(mtCrewEdit.SocialSecurityNumber.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityNumber" for="x_SocialSecurityNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.SocialSecurityNumber.Caption)@Html.Raw(mtCrewEdit.SocialSecurityNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.SocialSecurityNumber.CellAttributes)>
<span id="el_MTCrew_SocialSecurityNumber">
<input type="@(mtCrewEdit.SocialSecurityNumber.InputTextType)" name="x_SocialSecurityNumber" id="x_SocialSecurityNumber" data-table="MTCrew" data-field="x_SocialSecurityNumber" value="@Html.Raw(mtCrewEdit.SocialSecurityNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.SocialSecurityNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.SocialSecurityNumber.FormatPattern)"@Html.Raw(mtCrewEdit.SocialSecurityNumber.EditAttributes) aria-describedby="x_SocialSecurityNumber_help">
@Html.Raw(mtCrewEdit.SocialSecurityNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.SocialSecurityNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.SocialSecurityNumber.Visible (end) *@
@if (mtCrewEdit.SocialSecurityIssuingCountryID.Visible) { // mtCrewEdit.SocialSecurityIssuingCountryID.Visible (begin)
    <div id="r_SocialSecurityIssuingCountryID" @Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityIssuingCountryID" for="x_SocialSecurityIssuingCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.Caption)@Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.CellAttributes)>
<span id="el_MTCrew_SocialSecurityIssuingCountryID">
    <select
        id="x_SocialSecurityIssuingCountryID"
        name="x_SocialSecurityIssuingCountryID"
        class="form-select ew-select@(mtCrewEdit.SocialSecurityIssuingCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_SocialSecurityIssuingCountryID"
        data-table="MTCrew"
        data-field="x_SocialSecurityIssuingCountryID"
        data-value-separator="@(mtCrewEdit.SocialSecurityIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.SocialSecurityIssuingCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.EditAttributes)>
        @(mtCrewEdit.SocialSecurityIssuingCountryID.SelectOptionListHtml("x_SocialSecurityIssuingCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.SocialSecurityIssuingCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_SocialSecurityIssuingCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_SocialSecurityIssuingCountryID", selectId: "fMTCrewedit_x_SocialSecurityIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.SocialSecurityIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_SocialSecurityIssuingCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_SocialSecurityIssuingCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.SocialSecurityIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.SocialSecurityIssuingCountryID.Visible (end) *@
@if (mtCrewEdit.SocialSecurityImage.Visible) { // mtCrewEdit.SocialSecurityImage.Visible (begin)
    <div id="r_SocialSecurityImage" @Html.Raw(mtCrewEdit.SocialSecurityImage.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityImage" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.SocialSecurityImage.Caption)@Html.Raw(mtCrewEdit.SocialSecurityImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.SocialSecurityImage.CellAttributes)>
<span id="el_MTCrew_SocialSecurityImage">
<div id="fd_x_SocialSecurityImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_SocialSecurityImage"
        name="x_SocialSecurityImage"
        class="form-control ew-file-input"
        title="@(mtCrewEdit.SocialSecurityImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_SocialSecurityImage"
        data-size="100"
        data-accept-file-types="@(mtCrewEdit.SocialSecurityImage.AcceptFileTypes)"
        data-max-file-size="@(mtCrewEdit.SocialSecurityImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewEdit.SocialSecurityImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_SocialSecurityImage_help"
        @Html.Raw((mtCrewEdit.SocialSecurityImage.ReadOnly || mtCrewEdit.SocialSecurityImage.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewEdit.SocialSecurityImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewEdit.SocialSecurityImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.SocialSecurityImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_SocialSecurityImage" id= "fn_x_SocialSecurityImage" value="@(mtCrewEdit.SocialSecurityImage.Upload.FileName)">
<input type="hidden" name="fa_x_SocialSecurityImage" id= "fa_x_SocialSecurityImage" value="@(Post("fa_x_SocialSecurityImage") == "0" ? "0" : "1")">
<table id="ft_x_SocialSecurityImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewEdit.SocialSecurityImage.Visible (end) *@
@if (mtCrewEdit.PersonalTaxNumber.Visible) { // mtCrewEdit.PersonalTaxNumber.Visible (begin)
    <div id="r_PersonalTaxNumber" @Html.Raw(mtCrewEdit.PersonalTaxNumber.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxNumber" for="x_PersonalTaxNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PersonalTaxNumber.Caption)@Html.Raw(mtCrewEdit.PersonalTaxNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PersonalTaxNumber.CellAttributes)>
<span id="el_MTCrew_PersonalTaxNumber">
<input type="@(mtCrewEdit.PersonalTaxNumber.InputTextType)" name="x_PersonalTaxNumber" id="x_PersonalTaxNumber" data-table="MTCrew" data-field="x_PersonalTaxNumber" value="@Html.Raw(mtCrewEdit.PersonalTaxNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.PersonalTaxNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.PersonalTaxNumber.FormatPattern)"@Html.Raw(mtCrewEdit.PersonalTaxNumber.EditAttributes) aria-describedby="x_PersonalTaxNumber_help">
@Html.Raw(mtCrewEdit.PersonalTaxNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PersonalTaxNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PersonalTaxNumber.Visible (end) *@
@if (mtCrewEdit.PersonalTaxIssuingCountryID.Visible) { // mtCrewEdit.PersonalTaxIssuingCountryID.Visible (begin)
    <div id="r_PersonalTaxIssuingCountryID" @Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxIssuingCountryID" for="x_PersonalTaxIssuingCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.Caption)@Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.CellAttributes)>
<span id="el_MTCrew_PersonalTaxIssuingCountryID">
    <select
        id="x_PersonalTaxIssuingCountryID"
        name="x_PersonalTaxIssuingCountryID"
        class="form-select ew-select@(mtCrewEdit.PersonalTaxIssuingCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_PersonalTaxIssuingCountryID"
        data-table="MTCrew"
        data-field="x_PersonalTaxIssuingCountryID"
        data-value-separator="@(mtCrewEdit.PersonalTaxIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.PersonalTaxIssuingCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.EditAttributes)>
        @(mtCrewEdit.PersonalTaxIssuingCountryID.SelectOptionListHtml("x_PersonalTaxIssuingCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.PersonalTaxIssuingCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_PersonalTaxIssuingCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_PersonalTaxIssuingCountryID", selectId: "fMTCrewedit_x_PersonalTaxIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.PersonalTaxIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_PersonalTaxIssuingCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_PersonalTaxIssuingCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PersonalTaxIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PersonalTaxIssuingCountryID.Visible (end) *@
@if (mtCrewEdit.PersonalTaxImage.Visible) { // mtCrewEdit.PersonalTaxImage.Visible (begin)
    <div id="r_PersonalTaxImage" @Html.Raw(mtCrewEdit.PersonalTaxImage.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxImage" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PersonalTaxImage.Caption)@Html.Raw(mtCrewEdit.PersonalTaxImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PersonalTaxImage.CellAttributes)>
<span id="el_MTCrew_PersonalTaxImage">
<div id="fd_x_PersonalTaxImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_PersonalTaxImage"
        name="x_PersonalTaxImage"
        class="form-control ew-file-input"
        title="@(mtCrewEdit.PersonalTaxImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_PersonalTaxImage"
        data-size="100"
        data-accept-file-types="@(mtCrewEdit.PersonalTaxImage.AcceptFileTypes)"
        data-max-file-size="@(mtCrewEdit.PersonalTaxImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewEdit.PersonalTaxImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_PersonalTaxImage_help"
        @Html.Raw((mtCrewEdit.PersonalTaxImage.ReadOnly || mtCrewEdit.PersonalTaxImage.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewEdit.PersonalTaxImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewEdit.PersonalTaxImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.PersonalTaxImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_PersonalTaxImage" id= "fn_x_PersonalTaxImage" value="@(mtCrewEdit.PersonalTaxImage.Upload.FileName)">
<input type="hidden" name="fa_x_PersonalTaxImage" id= "fa_x_PersonalTaxImage" value="@(Post("fa_x_PersonalTaxImage") == "0" ? "0" : "1")">
<table id="ft_x_PersonalTaxImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PersonalTaxImage.Visible (end) *@
@if (mtCrewEdit.NomineeFullName.Visible) { // mtCrewEdit.NomineeFullName.Visible (begin)
    <div id="r_NomineeFullName" @Html.Raw(mtCrewEdit.NomineeFullName.RowAttributes)>
        <label id="elh_MTCrew_NomineeFullName" for="x_NomineeFullName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeFullName.Caption)@Html.Raw(mtCrewEdit.NomineeFullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeFullName.CellAttributes)>
<span id="el_MTCrew_NomineeFullName">
<input type="@(mtCrewEdit.NomineeFullName.InputTextType)" name="x_NomineeFullName" id="x_NomineeFullName" data-table="MTCrew" data-field="x_NomineeFullName" value="@Html.Raw(mtCrewEdit.NomineeFullName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeFullName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeFullName.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeFullName.EditAttributes) aria-describedby="x_NomineeFullName_help">
@Html.Raw(mtCrewEdit.NomineeFullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeFullName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeFullName.Visible (end) *@
@if (mtCrewEdit.NomineeRelationship.Visible) { // mtCrewEdit.NomineeRelationship.Visible (begin)
    <div id="r_NomineeRelationship" @Html.Raw(mtCrewEdit.NomineeRelationship.RowAttributes)>
        <label id="elh_MTCrew_NomineeRelationship" for="x_NomineeRelationship" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeRelationship.Caption)@Html.Raw(mtCrewEdit.NomineeRelationship.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeRelationship.CellAttributes)>
<span id="el_MTCrew_NomineeRelationship">
<input type="@(mtCrewEdit.NomineeRelationship.InputTextType)" name="x_NomineeRelationship" id="x_NomineeRelationship" data-table="MTCrew" data-field="x_NomineeRelationship" value="@Html.Raw(mtCrewEdit.NomineeRelationship.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeRelationship.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeRelationship.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeRelationship.EditAttributes) aria-describedby="x_NomineeRelationship_help">
@Html.Raw(mtCrewEdit.NomineeRelationship.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeRelationship.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeRelationship.Visible (end) *@
@if (mtCrewEdit.NomineeGender.Visible) { // mtCrewEdit.NomineeGender.Visible (begin)
    <div id="r_NomineeGender" @Html.Raw(mtCrewEdit.NomineeGender.RowAttributes)>
        <label id="elh_MTCrew_NomineeGender" for="x_NomineeGender" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeGender.Caption)@Html.Raw(mtCrewEdit.NomineeGender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeGender.CellAttributes)>
<span id="el_MTCrew_NomineeGender">
    <select
        id="x_NomineeGender"
        name="x_NomineeGender"
        class="form-select ew-select@(mtCrewEdit.NomineeGender.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_NomineeGender"
        data-table="MTCrew"
        data-field="x_NomineeGender"
        data-value-separator="@(mtCrewEdit.NomineeGender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.NomineeGender.PlaceHolder))"
        @Html.Raw(mtCrewEdit.NomineeGender.EditAttributes)>
        @(mtCrewEdit.NomineeGender.SelectOptionListHtml("x_NomineeGender"))
    </select>
    @Html.Raw(mtCrewEdit.NomineeGender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeGender.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_NomineeGender", selectId: "fMTCrewedit_x_NomineeGender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.NomineeGender?.lookupOptions.length) {
        options.data = { id: "x_NomineeGender", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_NomineeGender", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeGender.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeGender.Visible (end) *@
@if (mtCrewEdit.NomineeNationality_CountryID.Visible) { // mtCrewEdit.NomineeNationality_CountryID.Visible (begin)
    <div id="r_NomineeNationality_CountryID" @Html.Raw(mtCrewEdit.NomineeNationality_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeNationality_CountryID" for="x_NomineeNationality_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeNationality_CountryID.Caption)@Html.Raw(mtCrewEdit.NomineeNationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeNationality_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeNationality_CountryID">
    <select
        id="x_NomineeNationality_CountryID"
        name="x_NomineeNationality_CountryID"
        class="form-select ew-select@(mtCrewEdit.NomineeNationality_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_NomineeNationality_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeNationality_CountryID"
        data-value-separator="@(mtCrewEdit.NomineeNationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.NomineeNationality_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.NomineeNationality_CountryID.EditAttributes)>
        @(mtCrewEdit.NomineeNationality_CountryID.SelectOptionListHtml("x_NomineeNationality_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.NomineeNationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeNationality_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.NomineeNationality_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_NomineeNationality_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_NomineeNationality_CountryID", selectId: "fMTCrewedit_x_NomineeNationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.NomineeNationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeNationality_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_NomineeNationality_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeNationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeNationality_CountryID.Visible (end) *@
@if (mtCrewEdit.NomineeAddressDetail.Visible) { // mtCrewEdit.NomineeAddressDetail.Visible (begin)
    <div id="r_NomineeAddressDetail" @Html.Raw(mtCrewEdit.NomineeAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressDetail" for="x_NomineeAddressDetail" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressDetail.Caption)@Html.Raw(mtCrewEdit.NomineeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressDetail.CellAttributes)>
<span id="el_MTCrew_NomineeAddressDetail">
<textarea data-table="MTCrew" data-field="x_NomineeAddressDetail" name="x_NomineeAddressDetail" id="x_NomineeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeAddressDetail.PlaceHolder))"@Html.Raw(mtCrewEdit.NomineeAddressDetail.EditAttributes) aria-describedby="x_NomineeAddressDetail_help">@(mtCrewEdit.NomineeAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewEdit.NomineeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressDetail.Visible (end) *@
@if (mtCrewEdit.NomineeAddressCity.Visible) { // mtCrewEdit.NomineeAddressCity.Visible (begin)
    <div id="r_NomineeAddressCity" @Html.Raw(mtCrewEdit.NomineeAddressCity.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressCity" for="x_NomineeAddressCity" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressCity.Caption)@Html.Raw(mtCrewEdit.NomineeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressCity.CellAttributes)>
<span id="el_MTCrew_NomineeAddressCity">
<input type="@(mtCrewEdit.NomineeAddressCity.InputTextType)" name="x_NomineeAddressCity" id="x_NomineeAddressCity" data-table="MTCrew" data-field="x_NomineeAddressCity" value="@Html.Raw(mtCrewEdit.NomineeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeAddressCity.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeAddressCity.EditAttributes) aria-describedby="x_NomineeAddressCity_help">
@Html.Raw(mtCrewEdit.NomineeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressCity.Visible (end) *@
@if (mtCrewEdit.NomineeAddressPostCode.Visible) { // mtCrewEdit.NomineeAddressPostCode.Visible (begin)
    <div id="r_NomineeAddressPostCode" @Html.Raw(mtCrewEdit.NomineeAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressPostCode" for="x_NomineeAddressPostCode" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressPostCode.Caption)@Html.Raw(mtCrewEdit.NomineeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressPostCode.CellAttributes)>
<span id="el_MTCrew_NomineeAddressPostCode">
<input type="@(mtCrewEdit.NomineeAddressPostCode.InputTextType)" name="x_NomineeAddressPostCode" id="x_NomineeAddressPostCode" data-table="MTCrew" data-field="x_NomineeAddressPostCode" value="@Html.Raw(mtCrewEdit.NomineeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeAddressPostCode.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeAddressPostCode.EditAttributes) aria-describedby="x_NomineeAddressPostCode_help">
@Html.Raw(mtCrewEdit.NomineeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressPostCode.Visible (end) *@
@if (mtCrewEdit.NomineeAddressCountryID.Visible) { // mtCrewEdit.NomineeAddressCountryID.Visible (begin)
    <div id="r_NomineeAddressCountryID" @Html.Raw(mtCrewEdit.NomineeAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressCountryID" for="x_NomineeAddressCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressCountryID.Caption)@Html.Raw(mtCrewEdit.NomineeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressCountryID.CellAttributes)>
<span id="el_MTCrew_NomineeAddressCountryID">
    <select
        id="x_NomineeAddressCountryID"
        name="x_NomineeAddressCountryID"
        class="form-select ew-select@(mtCrewEdit.NomineeAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_NomineeAddressCountryID"
        data-table="MTCrew"
        data-field="x_NomineeAddressCountryID"
        data-value-separator="@(mtCrewEdit.NomineeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.NomineeAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.NomineeAddressCountryID.EditAttributes)>
        @(mtCrewEdit.NomineeAddressCountryID.SelectOptionListHtml("x_NomineeAddressCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.NomineeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.NomineeAddressCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_NomineeAddressCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_NomineeAddressCountryID", selectId: "fMTCrewedit_x_NomineeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.NomineeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_NomineeAddressCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressCountryID.Visible (end) *@
@if (mtCrewEdit.NomineeAddressHomeTel.Visible) { // mtCrewEdit.NomineeAddressHomeTel.Visible (begin)
    <div id="r_NomineeAddressHomeTel" @Html.Raw(mtCrewEdit.NomineeAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressHomeTel" for="x_NomineeAddressHomeTel" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.Caption)@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_NomineeAddressHomeTel">
<input type="@(mtCrewEdit.NomineeAddressHomeTel.InputTextType)" name="x_NomineeAddressHomeTel" id="x_NomineeAddressHomeTel" data-table="MTCrew" data-field="x_NomineeAddressHomeTel" value="@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.EditAttributes) aria-describedby="x_NomineeAddressHomeTel_help">
@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressHomeTel.Visible (end) *@
@if (mtCrewEdit.NomineeEmail.Visible) { // mtCrewEdit.NomineeEmail.Visible (begin)
    <div id="r_NomineeEmail" @Html.Raw(mtCrewEdit.NomineeEmail.RowAttributes)>
        <label id="elh_MTCrew_NomineeEmail" for="x_NomineeEmail" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeEmail.Caption)@Html.Raw(mtCrewEdit.NomineeEmail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeEmail.CellAttributes)>
<span id="el_MTCrew_NomineeEmail">
<input type="@(mtCrewEdit.NomineeEmail.InputTextType)" name="x_NomineeEmail" id="x_NomineeEmail" data-table="MTCrew" data-field="x_NomineeEmail" value="@Html.Raw(mtCrewEdit.NomineeEmail.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeEmail.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeEmail.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeEmail.EditAttributes) aria-describedby="x_NomineeEmail_help">
@Html.Raw(mtCrewEdit.NomineeEmail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeEmail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeEmail.Visible (end) *@
@if (mtCrewEdit.NomineeMobileNumber.Visible) { // mtCrewEdit.NomineeMobileNumber.Visible (begin)
    <div id="r_NomineeMobileNumber" @Html.Raw(mtCrewEdit.NomineeMobileNumber.RowAttributes)>
        <label id="elh_MTCrew_NomineeMobileNumber" for="x_NomineeMobileNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeMobileNumber.Caption)@Html.Raw(mtCrewEdit.NomineeMobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeMobileNumber.CellAttributes)>
<span id="el_MTCrew_NomineeMobileNumber">
<input type="@(mtCrewEdit.NomineeMobileNumber.InputTextType)" name="x_NomineeMobileNumber" id="x_NomineeMobileNumber" data-table="MTCrew" data-field="x_NomineeMobileNumber" value="@Html.Raw(mtCrewEdit.NomineeMobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeMobileNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeMobileNumber.FormatPattern)"@Html.Raw(mtCrewEdit.NomineeMobileNumber.EditAttributes) aria-describedby="x_NomineeMobileNumber_help">
@Html.Raw(mtCrewEdit.NomineeMobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeMobileNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeMobileNumber.Visible (end) *@
@if (mtCrewEdit.NomineeValidVisa.Visible) { // mtCrewEdit.NomineeValidVisa.Visible (begin)
    <div id="r_NomineeValidVisa" @Html.Raw(mtCrewEdit.NomineeValidVisa.RowAttributes)>
        <label id="elh_MTCrew_NomineeValidVisa" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeValidVisa.Caption)@Html.Raw(mtCrewEdit.NomineeValidVisa.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeValidVisa.CellAttributes)>
<span id="el_MTCrew_NomineeValidVisa">
<span>@{
    if (IsRTL) {
        mtCrewEdit.NomineeValidVisa.EditAttrs["dir"] = "rtl";
    }
}</span>
<span id="as_x_NomineeValidVisa" class="ew-auto-suggest">
    <input type="text" class="form-control" name="sv_x_NomineeValidVisa" id="sv_x_NomineeValidVisa" value="@(RemoveHtml(ConvertToString(mtCrewEdit.NomineeValidVisa.EditValue)))" autocomplete="off" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeValidVisa.PlaceHolder))" data-placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NomineeValidVisa.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NomineeValidVisa.FormatPattern)" @Html.Raw(mtCrewEdit.NomineeValidVisa.EditAttributes) aria-describedby="x_NomineeValidVisa_help">
</span>
<selection-list hidden class="form-control" data-table="MTCrew" data-field="x_NomineeValidVisa" data-input="sv_x_NomineeValidVisa" data-value-separator="@(mtCrewEdit.NomineeValidVisa.DisplayValueSeparatorAttribute)" name="x_NomineeValidVisa" id="x_NomineeValidVisa" value="@(HtmlEncode(mtCrewEdit.NomineeValidVisa.CurrentValue))"></selection-list>
@Html.Raw(mtCrewEdit.NomineeValidVisa.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeValidVisa.GetErrorMessage())</div>
<script>
loadjs.ready(["fMTCrewedit"], function() {
    fMTCrewedit.createAutoSuggest(Object.assign({"id":"x_NomineeValidVisa","forceSelect":false}, { lookupAllDisplayFields: @(mtCrewEdit.NomineeValidVisa.Lookup.LookupAllDisplayFields ? "true" : "false") }, ew.vars.tables.MTCrew.fields.NomineeValidVisa.autoSuggestOptions));
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeValidVisa.Visible (end) *@
@if (mtCrewEdit.BankName.Visible) { // mtCrewEdit.BankName.Visible (begin)
    <div id="r_BankName" @Html.Raw(mtCrewEdit.BankName.RowAttributes)>
        <label id="elh_MTCrew_BankName" for="x_BankName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BankName.Caption)@Html.Raw(mtCrewEdit.BankName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BankName.CellAttributes)>
<span id="el_MTCrew_BankName">
<input type="@(mtCrewEdit.BankName.InputTextType)" name="x_BankName" id="x_BankName" data-table="MTCrew" data-field="x_BankName" value="@Html.Raw(mtCrewEdit.BankName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.BankName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.BankName.FormatPattern)"@Html.Raw(mtCrewEdit.BankName.EditAttributes) aria-describedby="x_BankName_help">
@Html.Raw(mtCrewEdit.BankName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.BankName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BankName.Visible (end) *@
@if (mtCrewEdit.BankAddress.Visible) { // mtCrewEdit.BankAddress.Visible (begin)
    <div id="r_BankAddress" @Html.Raw(mtCrewEdit.BankAddress.RowAttributes)>
        <label id="elh_MTCrew_BankAddress" for="x_BankAddress" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BankAddress.Caption)@Html.Raw(mtCrewEdit.BankAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BankAddress.CellAttributes)>
<span id="el_MTCrew_BankAddress">
<textarea data-table="MTCrew" data-field="x_BankAddress" name="x_BankAddress" id="x_BankAddress" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.BankAddress.PlaceHolder))"@Html.Raw(mtCrewEdit.BankAddress.EditAttributes) aria-describedby="x_BankAddress_help">@(mtCrewEdit.BankAddress.EditValue)</textarea>
@Html.Raw(mtCrewEdit.BankAddress.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.BankAddress.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BankAddress.Visible (end) *@
@if (mtCrewEdit.BankAccountName.Visible) { // mtCrewEdit.BankAccountName.Visible (begin)
    <div id="r_BankAccountName" @Html.Raw(mtCrewEdit.BankAccountName.RowAttributes)>
        <label id="elh_MTCrew_BankAccountName" for="x_BankAccountName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BankAccountName.Caption)@Html.Raw(mtCrewEdit.BankAccountName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BankAccountName.CellAttributes)>
<span id="el_MTCrew_BankAccountName">
<input type="@(mtCrewEdit.BankAccountName.InputTextType)" name="x_BankAccountName" id="x_BankAccountName" data-table="MTCrew" data-field="x_BankAccountName" value="@Html.Raw(mtCrewEdit.BankAccountName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.BankAccountName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.BankAccountName.FormatPattern)"@Html.Raw(mtCrewEdit.BankAccountName.EditAttributes) aria-describedby="x_BankAccountName_help">
@Html.Raw(mtCrewEdit.BankAccountName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.BankAccountName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BankAccountName.Visible (end) *@
@if (mtCrewEdit.BankAccountNumber.Visible) { // mtCrewEdit.BankAccountNumber.Visible (begin)
    <div id="r_BankAccountNumber" @Html.Raw(mtCrewEdit.BankAccountNumber.RowAttributes)>
        <label id="elh_MTCrew_BankAccountNumber" for="x_BankAccountNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BankAccountNumber.Caption)@Html.Raw(mtCrewEdit.BankAccountNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BankAccountNumber.CellAttributes)>
<span id="el_MTCrew_BankAccountNumber">
<input type="@(mtCrewEdit.BankAccountNumber.InputTextType)" name="x_BankAccountNumber" id="x_BankAccountNumber" data-table="MTCrew" data-field="x_BankAccountNumber" value="@Html.Raw(mtCrewEdit.BankAccountNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.BankAccountNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.BankAccountNumber.FormatPattern)"@Html.Raw(mtCrewEdit.BankAccountNumber.EditAttributes) aria-describedby="x_BankAccountNumber_help">
@Html.Raw(mtCrewEdit.BankAccountNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.BankAccountNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BankAccountNumber.Visible (end) *@
@if (mtCrewEdit.BankSortCode.Visible) { // mtCrewEdit.BankSortCode.Visible (begin)
    <div id="r_BankSortCode" @Html.Raw(mtCrewEdit.BankSortCode.RowAttributes)>
        <label id="elh_MTCrew_BankSortCode" for="x_BankSortCode" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.BankSortCode.Caption)@Html.Raw(mtCrewEdit.BankSortCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.BankSortCode.CellAttributes)>
<span id="el_MTCrew_BankSortCode">
<input type="@(mtCrewEdit.BankSortCode.InputTextType)" name="x_BankSortCode" id="x_BankSortCode" data-table="MTCrew" data-field="x_BankSortCode" value="@Html.Raw(mtCrewEdit.BankSortCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.BankSortCode.PlaceHolder))" data-format-pattern="@(mtCrewEdit.BankSortCode.FormatPattern)"@Html.Raw(mtCrewEdit.BankSortCode.EditAttributes) aria-describedby="x_BankSortCode_help">
@Html.Raw(mtCrewEdit.BankSortCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.BankSortCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.BankSortCode.Visible (end) *@
@if (mtCrewEdit.MNOPF.Visible) { // mtCrewEdit.MNOPF.Visible (begin)
    <div id="r_MNOPF" @Html.Raw(mtCrewEdit.MNOPF.RowAttributes)>
        <label id="elh_MTCrew_MNOPF" for="x_MNOPF" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.MNOPF.Caption)@Html.Raw(mtCrewEdit.MNOPF.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.MNOPF.CellAttributes)>
<span id="el_MTCrew_MNOPF">
<input type="@(mtCrewEdit.MNOPF.InputTextType)" name="x_MNOPF" id="x_MNOPF" data-table="MTCrew" data-field="x_MNOPF" value="@Html.Raw(mtCrewEdit.MNOPF.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.MNOPF.PlaceHolder))" data-format-pattern="@(mtCrewEdit.MNOPF.FormatPattern)"@Html.Raw(mtCrewEdit.MNOPF.EditAttributes) aria-describedby="x_MNOPF_help">
@Html.Raw(mtCrewEdit.MNOPF.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.MNOPF.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.MNOPF.Visible (end) *@
@if (mtCrewEdit.MembershipNumber.Visible) { // mtCrewEdit.MembershipNumber.Visible (begin)
    <div id="r_MembershipNumber" @Html.Raw(mtCrewEdit.MembershipNumber.RowAttributes)>
        <label id="elh_MTCrew_MembershipNumber" for="x_MembershipNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.MembershipNumber.Caption)@Html.Raw(mtCrewEdit.MembershipNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.MembershipNumber.CellAttributes)>
<span id="el_MTCrew_MembershipNumber">
<input type="@(mtCrewEdit.MembershipNumber.InputTextType)" name="x_MembershipNumber" id="x_MembershipNumber" data-table="MTCrew" data-field="x_MembershipNumber" value="@Html.Raw(mtCrewEdit.MembershipNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.MembershipNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.MembershipNumber.FormatPattern)"@Html.Raw(mtCrewEdit.MembershipNumber.EditAttributes) aria-describedby="x_MembershipNumber_help">
@Html.Raw(mtCrewEdit.MembershipNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.MembershipNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.MembershipNumber.Visible (end) *@
@if (mtCrewEdit.NationalInsuranceNumber.Visible) { // mtCrewEdit.NationalInsuranceNumber.Visible (begin)
    <div id="r_NationalInsuranceNumber" @Html.Raw(mtCrewEdit.NationalInsuranceNumber.RowAttributes)>
        <label id="elh_MTCrew_NationalInsuranceNumber" for="x_NationalInsuranceNumber" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NationalInsuranceNumber.Caption)@Html.Raw(mtCrewEdit.NationalInsuranceNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NationalInsuranceNumber.CellAttributes)>
<span id="el_MTCrew_NationalInsuranceNumber">
<input type="@(mtCrewEdit.NationalInsuranceNumber.InputTextType)" name="x_NationalInsuranceNumber" id="x_NationalInsuranceNumber" data-table="MTCrew" data-field="x_NationalInsuranceNumber" value="@Html.Raw(mtCrewEdit.NationalInsuranceNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NationalInsuranceNumber.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NationalInsuranceNumber.FormatPattern)"@Html.Raw(mtCrewEdit.NationalInsuranceNumber.EditAttributes) aria-describedby="x_NationalInsuranceNumber_help">
@Html.Raw(mtCrewEdit.NationalInsuranceNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NationalInsuranceNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NationalInsuranceNumber.Visible (end) *@
@if (mtCrewEdit.AVC.Visible) { // mtCrewEdit.AVC.Visible (begin)
    <div id="r_AVC" @Html.Raw(mtCrewEdit.AVC.RowAttributes)>
        <label id="elh_MTCrew_AVC" for="x_AVC" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AVC.Caption)@Html.Raw(mtCrewEdit.AVC.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AVC.CellAttributes)>
<span id="el_MTCrew_AVC">
<input type="@(mtCrewEdit.AVC.InputTextType)" name="x_AVC" id="x_AVC" data-table="MTCrew" data-field="x_AVC" value="@Html.Raw(mtCrewEdit.AVC.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.AVC.PlaceHolder))" data-format-pattern="@(mtCrewEdit.AVC.FormatPattern)"@Html.Raw(mtCrewEdit.AVC.EditAttributes) aria-describedby="x_AVC_help">
@Html.Raw(mtCrewEdit.AVC.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.AVC.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AVC.Visible (end) *@
@if (mtCrewEdit.ForeignVisaHasBeenDenied.Visible) { // mtCrewEdit.ForeignVisaHasBeenDenied.Visible (begin)
    <div id="r_ForeignVisaHasBeenDenied" @Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaHasBeenDenied" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.Caption)@Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.CellAttributes)>
<span id="el_MTCrew_ForeignVisaHasBeenDenied">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.ForeignVisaHasBeenDenied.IsInvalidClass)" data-table="MTCrew" data-field="x_ForeignVisaHasBeenDenied" data-boolean name="x_ForeignVisaHasBeenDenied" id="x_ForeignVisaHasBeenDenied" value="1" checked="@ConvertToBool(mtCrewEdit.ForeignVisaHasBeenDenied.CurrentValue)" @Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.EditAttributes) aria-describedby="x_ForeignVisaHasBeenDenied_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.ForeignVisaHasBeenDenied.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.ForeignVisaHasBeenDenied.Visible (end) *@
@if (mtCrewEdit.ForeignVisaDenied_CountryID.Visible) { // mtCrewEdit.ForeignVisaDenied_CountryID.Visible (begin)
    <div id="r_ForeignVisaDenied_CountryID" @Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaDenied_CountryID" for="x_ForeignVisaDenied_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.Caption)@Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.CellAttributes)>
<span id="el_MTCrew_ForeignVisaDenied_CountryID">
    <select
        id="x_ForeignVisaDenied_CountryID"
        name="x_ForeignVisaDenied_CountryID"
        class="form-select ew-select@(mtCrewEdit.ForeignVisaDenied_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_ForeignVisaDenied_CountryID"
        data-table="MTCrew"
        data-field="x_ForeignVisaDenied_CountryID"
        data-value-separator="@(mtCrewEdit.ForeignVisaDenied_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.ForeignVisaDenied_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.EditAttributes)>
        @(mtCrewEdit.ForeignVisaDenied_CountryID.SelectOptionListHtml("x_ForeignVisaDenied_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.ForeignVisaDenied_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_ForeignVisaDenied_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_ForeignVisaDenied_CountryID", selectId: "fMTCrewedit_x_ForeignVisaDenied_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.ForeignVisaDenied_CountryID?.lookupOptions.length) {
        options.data = { id: "x_ForeignVisaDenied_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_ForeignVisaDenied_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.ForeignVisaDenied_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.ForeignVisaDenied_CountryID.Visible (end) *@
@if (mtCrewEdit.ForeignVisaDeniedReason.Visible) { // mtCrewEdit.ForeignVisaDeniedReason.Visible (begin)
    <div id="r_ForeignVisaDeniedReason" @Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaDeniedReason" for="x_ForeignVisaDeniedReason" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.Caption)@Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.CellAttributes)>
<span id="el_MTCrew_ForeignVisaDeniedReason">
<textarea data-table="MTCrew" data-field="x_ForeignVisaDeniedReason" name="x_ForeignVisaDeniedReason" id="x_ForeignVisaDeniedReason" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.ForeignVisaDeniedReason.PlaceHolder))"@Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.EditAttributes) aria-describedby="x_ForeignVisaDeniedReason_help">@(mtCrewEdit.ForeignVisaDeniedReason.EditValue)</textarea>
@Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.ForeignVisaDeniedReason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.ForeignVisaDeniedReason.Visible (end) *@
@if (mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.Visible) { // mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.Visible (begin)
    <div id="r_HasMaritimeAccidentOrCourtOfEnquiry" @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.RowAttributes)>
        <label id="elh_MTCrew_HasMaritimeAccidentOrCourtOfEnquiry" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.Caption)@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.CellAttributes)>
<span id="el_MTCrew_HasMaritimeAccidentOrCourtOfEnquiry">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.IsInvalidClass)" data-table="MTCrew" data-field="x_HasMaritimeAccidentOrCourtOfEnquiry" data-boolean name="x_HasMaritimeAccidentOrCourtOfEnquiry" id="x_HasMaritimeAccidentOrCourtOfEnquiry" value="1" checked="@ConvertToBool(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.CurrentValue)" @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.EditAttributes) aria-describedby="x_HasMaritimeAccidentOrCourtOfEnquiry_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiry.Visible (end) *@
@if (mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible) { // mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible (begin)
    <div id="r_HasMaritimeAccidentOrCourtOfEnquiryDetails" @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.RowAttributes)>
        <label id="elh_MTCrew_HasMaritimeAccidentOrCourtOfEnquiryDetails" for="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.Caption)@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.CellAttributes)>
<span id="el_MTCrew_HasMaritimeAccidentOrCourtOfEnquiryDetails">
<textarea data-table="MTCrew" data-field="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" name="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" id="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.PlaceHolder))"@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.EditAttributes) aria-describedby="x_HasMaritimeAccidentOrCourtOfEnquiryDetails_help">@(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.EditValue)</textarea>
@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible (end) *@
@if (mtCrewEdit.Reference1CompanyName.Visible) { // mtCrewEdit.Reference1CompanyName.Visible (begin)
    <div id="r_Reference1CompanyName" @Html.Raw(mtCrewEdit.Reference1CompanyName.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyName" for="x_Reference1CompanyName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1CompanyName.Caption)@Html.Raw(mtCrewEdit.Reference1CompanyName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1CompanyName.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyName">
<input type="@(mtCrewEdit.Reference1CompanyName.InputTextType)" name="x_Reference1CompanyName" id="x_Reference1CompanyName" data-table="MTCrew" data-field="x_Reference1CompanyName" value="@Html.Raw(mtCrewEdit.Reference1CompanyName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference1CompanyName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference1CompanyName.FormatPattern)"@Html.Raw(mtCrewEdit.Reference1CompanyName.EditAttributes) aria-describedby="x_Reference1CompanyName_help">
@Html.Raw(mtCrewEdit.Reference1CompanyName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1CompanyName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1CompanyName.Visible (end) *@
@if (mtCrewEdit.Reference1ContactPersonName.Visible) { // mtCrewEdit.Reference1ContactPersonName.Visible (begin)
    <div id="r_Reference1ContactPersonName" @Html.Raw(mtCrewEdit.Reference1ContactPersonName.RowAttributes)>
        <label id="elh_MTCrew_Reference1ContactPersonName" for="x_Reference1ContactPersonName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1ContactPersonName.Caption)@Html.Raw(mtCrewEdit.Reference1ContactPersonName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1ContactPersonName.CellAttributes)>
<span id="el_MTCrew_Reference1ContactPersonName">
<input type="@(mtCrewEdit.Reference1ContactPersonName.InputTextType)" name="x_Reference1ContactPersonName" id="x_Reference1ContactPersonName" data-table="MTCrew" data-field="x_Reference1ContactPersonName" value="@Html.Raw(mtCrewEdit.Reference1ContactPersonName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference1ContactPersonName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference1ContactPersonName.FormatPattern)"@Html.Raw(mtCrewEdit.Reference1ContactPersonName.EditAttributes) aria-describedby="x_Reference1ContactPersonName_help">
@Html.Raw(mtCrewEdit.Reference1ContactPersonName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1ContactPersonName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1ContactPersonName.Visible (end) *@
@if (mtCrewEdit.Reference1CompanyAddress.Visible) { // mtCrewEdit.Reference1CompanyAddress.Visible (begin)
    <div id="r_Reference1CompanyAddress" @Html.Raw(mtCrewEdit.Reference1CompanyAddress.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyAddress" for="x_Reference1CompanyAddress" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1CompanyAddress.Caption)@Html.Raw(mtCrewEdit.Reference1CompanyAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1CompanyAddress.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyAddress">
<textarea data-table="MTCrew" data-field="x_Reference1CompanyAddress" name="x_Reference1CompanyAddress" id="x_Reference1CompanyAddress" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference1CompanyAddress.PlaceHolder))"@Html.Raw(mtCrewEdit.Reference1CompanyAddress.EditAttributes) aria-describedby="x_Reference1CompanyAddress_help">@(mtCrewEdit.Reference1CompanyAddress.EditValue)</textarea>
@Html.Raw(mtCrewEdit.Reference1CompanyAddress.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1CompanyAddress.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1CompanyAddress.Visible (end) *@
@if (mtCrewEdit.Reference1CompanyCountryID.Visible) { // mtCrewEdit.Reference1CompanyCountryID.Visible (begin)
    <div id="r_Reference1CompanyCountryID" @Html.Raw(mtCrewEdit.Reference1CompanyCountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyCountryID" for="x_Reference1CompanyCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1CompanyCountryID.Caption)@Html.Raw(mtCrewEdit.Reference1CompanyCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1CompanyCountryID.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyCountryID">
    <select
        id="x_Reference1CompanyCountryID"
        name="x_Reference1CompanyCountryID"
        class="form-select ew-select@(mtCrewEdit.Reference1CompanyCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Reference1CompanyCountryID"
        data-table="MTCrew"
        data-field="x_Reference1CompanyCountryID"
        data-value-separator="@(mtCrewEdit.Reference1CompanyCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Reference1CompanyCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Reference1CompanyCountryID.EditAttributes)>
        @(mtCrewEdit.Reference1CompanyCountryID.SelectOptionListHtml("x_Reference1CompanyCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.Reference1CompanyCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1CompanyCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.Reference1CompanyCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_Reference1CompanyCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Reference1CompanyCountryID", selectId: "fMTCrewedit_x_Reference1CompanyCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Reference1CompanyCountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference1CompanyCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Reference1CompanyCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference1CompanyCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1CompanyCountryID.Visible (end) *@
@if (mtCrewEdit.Reference1CompanyTelephone.Visible) { // mtCrewEdit.Reference1CompanyTelephone.Visible (begin)
    <div id="r_Reference1CompanyTelephone" @Html.Raw(mtCrewEdit.Reference1CompanyTelephone.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyTelephone" for="x_Reference1CompanyTelephone" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.Caption)@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1CompanyTelephone.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyTelephone">
<input type="@(mtCrewEdit.Reference1CompanyTelephone.InputTextType)" name="x_Reference1CompanyTelephone" id="x_Reference1CompanyTelephone" data-table="MTCrew" data-field="x_Reference1CompanyTelephone" value="@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference1CompanyTelephone.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference1CompanyTelephone.FormatPattern)"@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.EditAttributes) aria-describedby="x_Reference1CompanyTelephone_help">
@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1CompanyTelephone.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1CompanyTelephone.Visible (end) *@
@if (mtCrewEdit.Reference2CompanyName.Visible) { // mtCrewEdit.Reference2CompanyName.Visible (begin)
    <div id="r_Reference2CompanyName" @Html.Raw(mtCrewEdit.Reference2CompanyName.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyName" for="x_Reference2CompanyName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2CompanyName.Caption)@Html.Raw(mtCrewEdit.Reference2CompanyName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2CompanyName.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyName">
<input type="@(mtCrewEdit.Reference2CompanyName.InputTextType)" name="x_Reference2CompanyName" id="x_Reference2CompanyName" data-table="MTCrew" data-field="x_Reference2CompanyName" value="@Html.Raw(mtCrewEdit.Reference2CompanyName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference2CompanyName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference2CompanyName.FormatPattern)"@Html.Raw(mtCrewEdit.Reference2CompanyName.EditAttributes) aria-describedby="x_Reference2CompanyName_help">
@Html.Raw(mtCrewEdit.Reference2CompanyName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2CompanyName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2CompanyName.Visible (end) *@
@if (mtCrewEdit.Reference2ContactPersonName.Visible) { // mtCrewEdit.Reference2ContactPersonName.Visible (begin)
    <div id="r_Reference2ContactPersonName" @Html.Raw(mtCrewEdit.Reference2ContactPersonName.RowAttributes)>
        <label id="elh_MTCrew_Reference2ContactPersonName" for="x_Reference2ContactPersonName" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2ContactPersonName.Caption)@Html.Raw(mtCrewEdit.Reference2ContactPersonName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2ContactPersonName.CellAttributes)>
<span id="el_MTCrew_Reference2ContactPersonName">
<input type="@(mtCrewEdit.Reference2ContactPersonName.InputTextType)" name="x_Reference2ContactPersonName" id="x_Reference2ContactPersonName" data-table="MTCrew" data-field="x_Reference2ContactPersonName" value="@Html.Raw(mtCrewEdit.Reference2ContactPersonName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference2ContactPersonName.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference2ContactPersonName.FormatPattern)"@Html.Raw(mtCrewEdit.Reference2ContactPersonName.EditAttributes) aria-describedby="x_Reference2ContactPersonName_help">
@Html.Raw(mtCrewEdit.Reference2ContactPersonName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2ContactPersonName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2ContactPersonName.Visible (end) *@
@if (mtCrewEdit.Reference2CompanyAddress.Visible) { // mtCrewEdit.Reference2CompanyAddress.Visible (begin)
    <div id="r_Reference2CompanyAddress" @Html.Raw(mtCrewEdit.Reference2CompanyAddress.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyAddress" for="x_Reference2CompanyAddress" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2CompanyAddress.Caption)@Html.Raw(mtCrewEdit.Reference2CompanyAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2CompanyAddress.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyAddress">
<textarea data-table="MTCrew" data-field="x_Reference2CompanyAddress" name="x_Reference2CompanyAddress" id="x_Reference2CompanyAddress" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference2CompanyAddress.PlaceHolder))"@Html.Raw(mtCrewEdit.Reference2CompanyAddress.EditAttributes) aria-describedby="x_Reference2CompanyAddress_help">@(mtCrewEdit.Reference2CompanyAddress.EditValue)</textarea>
@Html.Raw(mtCrewEdit.Reference2CompanyAddress.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2CompanyAddress.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2CompanyAddress.Visible (end) *@
@if (mtCrewEdit.Reference2CompanyCountryID.Visible) { // mtCrewEdit.Reference2CompanyCountryID.Visible (begin)
    <div id="r_Reference2CompanyCountryID" @Html.Raw(mtCrewEdit.Reference2CompanyCountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyCountryID" for="x_Reference2CompanyCountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2CompanyCountryID.Caption)@Html.Raw(mtCrewEdit.Reference2CompanyCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2CompanyCountryID.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyCountryID">
    <select
        id="x_Reference2CompanyCountryID"
        name="x_Reference2CompanyCountryID"
        class="form-select ew-select@(mtCrewEdit.Reference2CompanyCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Reference2CompanyCountryID"
        data-table="MTCrew"
        data-field="x_Reference2CompanyCountryID"
        data-value-separator="@(mtCrewEdit.Reference2CompanyCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Reference2CompanyCountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Reference2CompanyCountryID.EditAttributes)>
        @(mtCrewEdit.Reference2CompanyCountryID.SelectOptionListHtml("x_Reference2CompanyCountryID"))
    </select>
    @Html.Raw(mtCrewEdit.Reference2CompanyCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2CompanyCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.Reference2CompanyCountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_Reference2CompanyCountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Reference2CompanyCountryID", selectId: "fMTCrewedit_x_Reference2CompanyCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Reference2CompanyCountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference2CompanyCountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Reference2CompanyCountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference2CompanyCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2CompanyCountryID.Visible (end) *@
@if (mtCrewEdit.Reference2CompanyTelephone.Visible) { // mtCrewEdit.Reference2CompanyTelephone.Visible (begin)
    <div id="r_Reference2CompanyTelephone" @Html.Raw(mtCrewEdit.Reference2CompanyTelephone.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyTelephone" for="x_Reference2CompanyTelephone" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.Caption)@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2CompanyTelephone.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyTelephone">
<input type="@(mtCrewEdit.Reference2CompanyTelephone.InputTextType)" name="x_Reference2CompanyTelephone" id="x_Reference2CompanyTelephone" data-table="MTCrew" data-field="x_Reference2CompanyTelephone" value="@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reference2CompanyTelephone.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reference2CompanyTelephone.FormatPattern)"@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.EditAttributes) aria-describedby="x_Reference2CompanyTelephone_help">
@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2CompanyTelephone.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2CompanyTelephone.Visible (end) *@
@if (mtCrewEdit.Status.Visible) { // mtCrewEdit.Status.Visible (begin)
    <div id="r_Status" @Html.Raw(mtCrewEdit.Status.RowAttributes)>
        <label id="elh_MTCrew_Status" for="x_Status" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Status.Caption)@Html.Raw(mtCrewEdit.Status.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Status.CellAttributes)>
<span id="el_MTCrew_Status">
<input type="@(mtCrewEdit.Status.InputTextType)" name="x_Status" id="x_Status" data-table="MTCrew" data-field="x_Status" value="@Html.Raw(mtCrewEdit.Status.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Status.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Status.FormatPattern)"@Html.Raw(mtCrewEdit.Status.EditAttributes) aria-describedby="x_Status_help">
@Html.Raw(mtCrewEdit.Status.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Status.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Status.Visible (end) *@
@if (mtCrewEdit.Reason.Visible) { // mtCrewEdit.Reason.Visible (begin)
    <div id="r_Reason" @Html.Raw(mtCrewEdit.Reason.RowAttributes)>
        <label id="elh_MTCrew_Reason" for="x_Reason" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reason.Caption)@Html.Raw(mtCrewEdit.Reason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reason.CellAttributes)>
<span id="el_MTCrew_Reason">
<input type="@(mtCrewEdit.Reason.InputTextType)" name="x_Reason" id="x_Reason" data-table="MTCrew" data-field="x_Reason" value="@Html.Raw(mtCrewEdit.Reason.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Reason.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Reason.FormatPattern)"@Html.Raw(mtCrewEdit.Reason.EditAttributes) aria-describedby="x_Reason_help">
@Html.Raw(mtCrewEdit.Reason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reason.Visible (end) *@
@if (mtCrewEdit.Weight.Visible) { // mtCrewEdit.Weight.Visible (begin)
    <div id="r_Weight" @Html.Raw(mtCrewEdit.Weight.RowAttributes)>
        <label id="elh_MTCrew_Weight" for="x_Weight" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Weight.Caption)@Html.Raw(mtCrewEdit.Weight.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Weight.CellAttributes)>
<span id="el_MTCrew_Weight">
<input type="@(mtCrewEdit.Weight.InputTextType)" name="x_Weight" id="x_Weight" data-table="MTCrew" data-field="x_Weight" value="@Html.Raw(mtCrewEdit.Weight.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Weight.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Weight.FormatPattern)"@Html.Raw(mtCrewEdit.Weight.EditAttributes) aria-describedby="x_Weight_help">
@Html.Raw(mtCrewEdit.Weight.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Weight.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Weight.Visible (end) *@
@if (mtCrewEdit.Height.Visible) { // mtCrewEdit.Height.Visible (begin)
    <div id="r_Height" @Html.Raw(mtCrewEdit.Height.RowAttributes)>
        <label id="elh_MTCrew_Height" for="x_Height" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Height.Caption)@Html.Raw(mtCrewEdit.Height.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Height.CellAttributes)>
<span id="el_MTCrew_Height">
<input type="@(mtCrewEdit.Height.InputTextType)" name="x_Height" id="x_Height" data-table="MTCrew" data-field="x_Height" value="@Html.Raw(mtCrewEdit.Height.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.Height.PlaceHolder))" data-format-pattern="@(mtCrewEdit.Height.FormatPattern)"@Html.Raw(mtCrewEdit.Height.EditAttributes) aria-describedby="x_Height_help">
@Html.Raw(mtCrewEdit.Height.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.Height.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Height.Visible (end) *@
@if (mtCrewEdit.CoverallSize.Visible) { // mtCrewEdit.CoverallSize.Visible (begin)
    <div id="r_CoverallSize" @Html.Raw(mtCrewEdit.CoverallSize.RowAttributes)>
        <label id="elh_MTCrew_CoverallSize" for="x_CoverallSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.CoverallSize.Caption)@Html.Raw(mtCrewEdit.CoverallSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.CoverallSize.CellAttributes)>
<span id="el_MTCrew_CoverallSize">
<input type="@(mtCrewEdit.CoverallSize.InputTextType)" name="x_CoverallSize" id="x_CoverallSize" data-table="MTCrew" data-field="x_CoverallSize" value="@Html.Raw(mtCrewEdit.CoverallSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.CoverallSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.CoverallSize.FormatPattern)"@Html.Raw(mtCrewEdit.CoverallSize.EditAttributes) aria-describedby="x_CoverallSize_help">
@Html.Raw(mtCrewEdit.CoverallSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.CoverallSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.CoverallSize.Visible (end) *@
@if (mtCrewEdit.SafetyShoesSize.Visible) { // mtCrewEdit.SafetyShoesSize.Visible (begin)
    <div id="r_SafetyShoesSize" @Html.Raw(mtCrewEdit.SafetyShoesSize.RowAttributes)>
        <label id="elh_MTCrew_SafetyShoesSize" for="x_SafetyShoesSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.SafetyShoesSize.Caption)@Html.Raw(mtCrewEdit.SafetyShoesSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.SafetyShoesSize.CellAttributes)>
<span id="el_MTCrew_SafetyShoesSize">
<input type="@(mtCrewEdit.SafetyShoesSize.InputTextType)" name="x_SafetyShoesSize" id="x_SafetyShoesSize" data-table="MTCrew" data-field="x_SafetyShoesSize" value="@Html.Raw(mtCrewEdit.SafetyShoesSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.SafetyShoesSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.SafetyShoesSize.FormatPattern)"@Html.Raw(mtCrewEdit.SafetyShoesSize.EditAttributes) aria-describedby="x_SafetyShoesSize_help">
@Html.Raw(mtCrewEdit.SafetyShoesSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.SafetyShoesSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.SafetyShoesSize.Visible (end) *@
@if (mtCrewEdit.ShirtSize.Visible) { // mtCrewEdit.ShirtSize.Visible (begin)
    <div id="r_ShirtSize" @Html.Raw(mtCrewEdit.ShirtSize.RowAttributes)>
        <label id="elh_MTCrew_ShirtSize" for="x_ShirtSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.ShirtSize.Caption)@Html.Raw(mtCrewEdit.ShirtSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.ShirtSize.CellAttributes)>
<span id="el_MTCrew_ShirtSize">
<input type="@(mtCrewEdit.ShirtSize.InputTextType)" name="x_ShirtSize" id="x_ShirtSize" data-table="MTCrew" data-field="x_ShirtSize" value="@Html.Raw(mtCrewEdit.ShirtSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.ShirtSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.ShirtSize.FormatPattern)"@Html.Raw(mtCrewEdit.ShirtSize.EditAttributes) aria-describedby="x_ShirtSize_help">
@Html.Raw(mtCrewEdit.ShirtSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.ShirtSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.ShirtSize.Visible (end) *@
@if (mtCrewEdit.TrousersSize.Visible) { // mtCrewEdit.TrousersSize.Visible (begin)
    <div id="r_TrousersSize" @Html.Raw(mtCrewEdit.TrousersSize.RowAttributes)>
        <label id="elh_MTCrew_TrousersSize" for="x_TrousersSize" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.TrousersSize.Caption)@Html.Raw(mtCrewEdit.TrousersSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.TrousersSize.CellAttributes)>
<span id="el_MTCrew_TrousersSize">
<input type="@(mtCrewEdit.TrousersSize.InputTextType)" name="x_TrousersSize" id="x_TrousersSize" data-table="MTCrew" data-field="x_TrousersSize" value="@Html.Raw(mtCrewEdit.TrousersSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.TrousersSize.PlaceHolder))" data-format-pattern="@(mtCrewEdit.TrousersSize.FormatPattern)"@Html.Raw(mtCrewEdit.TrousersSize.EditAttributes) aria-describedby="x_TrousersSize_help">
@Html.Raw(mtCrewEdit.TrousersSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.TrousersSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.TrousersSize.Visible (end) *@
@if (mtCrewEdit.NSSF_Health_Number.Visible) { // mtCrewEdit.NSSF_Health_Number.Visible (begin)
    <div id="r_NSSF_Health_Number" @Html.Raw(mtCrewEdit.NSSF_Health_Number.RowAttributes)>
        <label id="elh_MTCrew_NSSF_Health_Number" for="x_NSSF_Health_Number" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NSSF_Health_Number.Caption)@Html.Raw(mtCrewEdit.NSSF_Health_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NSSF_Health_Number.CellAttributes)>
<span id="el_MTCrew_NSSF_Health_Number">
<input type="@(mtCrewEdit.NSSF_Health_Number.InputTextType)" name="x_NSSF_Health_Number" id="x_NSSF_Health_Number" data-table="MTCrew" data-field="x_NSSF_Health_Number" value="@Html.Raw(mtCrewEdit.NSSF_Health_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NSSF_Health_Number.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NSSF_Health_Number.FormatPattern)"@Html.Raw(mtCrewEdit.NSSF_Health_Number.EditAttributes) aria-describedby="x_NSSF_Health_Number_help">
@Html.Raw(mtCrewEdit.NSSF_Health_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NSSF_Health_Number.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NSSF_Health_Number.Visible (end) *@
@if (mtCrewEdit.NSSF_Occupation_Number.Visible) { // mtCrewEdit.NSSF_Occupation_Number.Visible (begin)
    <div id="r_NSSF_Occupation_Number" @Html.Raw(mtCrewEdit.NSSF_Occupation_Number.RowAttributes)>
        <label id="elh_MTCrew_NSSF_Occupation_Number" for="x_NSSF_Occupation_Number" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.Caption)@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NSSF_Occupation_Number.CellAttributes)>
<span id="el_MTCrew_NSSF_Occupation_Number">
<input type="@(mtCrewEdit.NSSF_Occupation_Number.InputTextType)" name="x_NSSF_Occupation_Number" id="x_NSSF_Occupation_Number" data-table="MTCrew" data-field="x_NSSF_Occupation_Number" value="@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.NSSF_Occupation_Number.PlaceHolder))" data-format-pattern="@(mtCrewEdit.NSSF_Occupation_Number.FormatPattern)"@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.EditAttributes) aria-describedby="x_NSSF_Occupation_Number_help">
@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.NSSF_Occupation_Number.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NSSF_Occupation_Number.Visible (end) *@
@if (mtCrewEdit.FinalAcceptedDate.Visible) { // mtCrewEdit.FinalAcceptedDate.Visible (begin)
    <div id="r_FinalAcceptedDate" @Html.Raw(mtCrewEdit.FinalAcceptedDate.RowAttributes)>
        <label id="elh_MTCrew_FinalAcceptedDate" for="x_FinalAcceptedDate" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.FinalAcceptedDate.Caption)@Html.Raw(mtCrewEdit.FinalAcceptedDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.FinalAcceptedDate.CellAttributes)>
<span id="el_MTCrew_FinalAcceptedDate">
<input type="@(mtCrewEdit.FinalAcceptedDate.InputTextType)" name="x_FinalAcceptedDate" id="x_FinalAcceptedDate" data-table="MTCrew" data-field="x_FinalAcceptedDate" value="@Html.Raw(mtCrewEdit.FinalAcceptedDate.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.FinalAcceptedDate.PlaceHolder))" data-format-pattern="@(mtCrewEdit.FinalAcceptedDate.FormatPattern)"@Html.Raw(mtCrewEdit.FinalAcceptedDate.EditAttributes) aria-describedby="x_FinalAcceptedDate_help">
@Html.Raw(mtCrewEdit.FinalAcceptedDate.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.FinalAcceptedDate.GetErrorMessage())</div>
@if (!mtCrewEdit.FinalAcceptedDate.ReadOnly && !mtCrewEdit.FinalAcceptedDate.Disabled && !mtCrewEdit.FinalAcceptedDate.EditAttrs.Is("readonly") && !mtCrewEdit.FinalAcceptedDate.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewedit", "x_FinalAcceptedDate", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewEdit.FinalAcceptedDate.Visible (end) *@
@if (mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Visible) { // mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Visible (begin)
    <div id="r_Reference1CompanyTelephoneCode_CountryID" @Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyTelephoneCode_CountryID" for="x_Reference1CompanyTelephoneCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Caption)@Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyTelephoneCode_CountryID">
    <select
        id="x_Reference1CompanyTelephoneCode_CountryID"
        name="x_Reference1CompanyTelephoneCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Reference1CompanyTelephoneCode_CountryID"
        data-table="MTCrew"
        data-field="x_Reference1CompanyTelephoneCode_CountryID"
        data-value-separator="@(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.EditAttributes)>
        @(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.SelectOptionListHtml("x_Reference1CompanyTelephoneCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_Reference1CompanyTelephoneCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Reference1CompanyTelephoneCode_CountryID", selectId: "fMTCrewedit_x_Reference1CompanyTelephoneCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Reference1CompanyTelephoneCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference1CompanyTelephoneCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Reference1CompanyTelephoneCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference1CompanyTelephoneCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference1CompanyTelephoneCode_CountryID.Visible (end) *@
@if (mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Visible) { // mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Visible (begin)
    <div id="r_Reference2CompanyTelephoneCode_CountryID" @Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyTelephoneCode_CountryID" for="x_Reference2CompanyTelephoneCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Caption)@Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyTelephoneCode_CountryID">
    <select
        id="x_Reference2CompanyTelephoneCode_CountryID"
        name="x_Reference2CompanyTelephoneCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_Reference2CompanyTelephoneCode_CountryID"
        data-table="MTCrew"
        data-field="x_Reference2CompanyTelephoneCode_CountryID"
        data-value-separator="@(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.EditAttributes)>
        @(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.SelectOptionListHtml("x_Reference2CompanyTelephoneCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_Reference2CompanyTelephoneCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_Reference2CompanyTelephoneCode_CountryID", selectId: "fMTCrewedit_x_Reference2CompanyTelephoneCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.Reference2CompanyTelephoneCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference2CompanyTelephoneCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_Reference2CompanyTelephoneCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference2CompanyTelephoneCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.Reference2CompanyTelephoneCode_CountryID.Visible (end) *@
@if (mtCrewEdit.MobileNumberCode_CountryID.Visible) { // mtCrewEdit.MobileNumberCode_CountryID.Visible (begin)
    <div id="r_MobileNumberCode_CountryID" @Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_MobileNumberCode_CountryID" for="x_MobileNumberCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.Caption)@Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.CellAttributes)>
<span id="el_MTCrew_MobileNumberCode_CountryID">
    <select
        id="x_MobileNumberCode_CountryID"
        name="x_MobileNumberCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.MobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_MobileNumberCode_CountryID"
        data-table="MTCrew"
        data-field="x_MobileNumberCode_CountryID"
        data-value-separator="@(mtCrewEdit.MobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.MobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.EditAttributes)>
        @(mtCrewEdit.MobileNumberCode_CountryID.SelectOptionListHtml("x_MobileNumberCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.MobileNumberCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_MobileNumberCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_MobileNumberCode_CountryID", selectId: "fMTCrewedit_x_MobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.MobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_MobileNumberCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_MobileNumberCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.MobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.MobileNumberCode_CountryID.Visible (end) *@
@if (mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Visible) { // mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_PrimaryAddressHomeTelCode_CountryID" @Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressHomeTelCode_CountryID" for="x_PrimaryAddressHomeTelCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressHomeTelCode_CountryID">
    <select
        id="x_PrimaryAddressHomeTelCode_CountryID"
        name="x_PrimaryAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_PrimaryAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_PrimaryAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.SelectOptionListHtml("x_PrimaryAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_PrimaryAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_PrimaryAddressHomeTelCode_CountryID", selectId: "fMTCrewedit_x_PrimaryAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.PrimaryAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PrimaryAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.PrimaryAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Visible) { // mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_AlternativeAddressHomeTelCode_CountryID" @Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressHomeTelCode_CountryID" for="x_AlternativeAddressHomeTelCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressHomeTelCode_CountryID">
    <select
        id="x_AlternativeAddressHomeTelCode_CountryID"
        name="x_AlternativeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_AlternativeAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_AlternativeAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_AlternativeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_AlternativeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_AlternativeAddressHomeTelCode_CountryID", selectId: "fMTCrewedit_x_AlternativeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.AlternativeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.AlternativeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.AlternativeAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Visible) { // mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_NomineeAddressHomeTelCode_CountryID" @Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressHomeTelCode_CountryID" for="x_NomineeAddressHomeTelCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeAddressHomeTelCode_CountryID">
    <select
        id="x_NomineeAddressHomeTelCode_CountryID"
        name="x_NomineeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_NomineeAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_NomineeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_NomineeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_NomineeAddressHomeTelCode_CountryID", selectId: "fMTCrewedit_x_NomineeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.NomineeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewEdit.NomineeMobileNumberCode_CountryID.Visible) { // mtCrewEdit.NomineeMobileNumberCode_CountryID.Visible (begin)
    <div id="r_NomineeMobileNumberCode_CountryID" @Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeMobileNumberCode_CountryID" for="x_NomineeMobileNumberCode_CountryID" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.Caption)@Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeMobileNumberCode_CountryID">
    <select
        id="x_NomineeMobileNumberCode_CountryID"
        name="x_NomineeMobileNumberCode_CountryID"
        class="form-select ew-select@(mtCrewEdit.NomineeMobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewedit_x_NomineeMobileNumberCode_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeMobileNumberCode_CountryID"
        data-value-separator="@(mtCrewEdit.NomineeMobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewEdit.NomineeMobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.EditAttributes)>
        @(mtCrewEdit.NomineeMobileNumberCode_CountryID.SelectOptionListHtml("x_NomineeMobileNumberCode_CountryID"))
    </select>
    @Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewEdit.NomineeMobileNumberCode_CountryID.Lookup.GetParamTag(mtCrewEdit, "p_x_NomineeMobileNumberCode_CountryID"))
<script>
loadjs.ready("fMTCrewedit", function() {
    var options = { name: "x_NomineeMobileNumberCode_CountryID", selectId: "fMTCrewedit_x_NomineeMobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewedit.lists.NomineeMobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeMobileNumberCode_CountryID", form: "fMTCrewedit" };
    } else {
        options.ajax = { id: "x_NomineeMobileNumberCode_CountryID", form: "fMTCrewedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeMobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewEdit.NomineeMobileNumberCode_CountryID.Visible (end) *@
@if (mtCrewEdit.RevisedReason.Visible) { // mtCrewEdit.RevisedReason.Visible (begin)
    <div id="r_RevisedReason" @Html.Raw(mtCrewEdit.RevisedReason.RowAttributes)>
        <label id="elh_MTCrew_RevisedReason" for="x_RevisedReason" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.RevisedReason.Caption)@Html.Raw(mtCrewEdit.RevisedReason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.RevisedReason.CellAttributes)>
<span id="el_MTCrew_RevisedReason">
<input type="@(mtCrewEdit.RevisedReason.InputTextType)" name="x_RevisedReason" id="x_RevisedReason" data-table="MTCrew" data-field="x_RevisedReason" value="@Html.Raw(mtCrewEdit.RevisedReason.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.RevisedReason.PlaceHolder))" data-format-pattern="@(mtCrewEdit.RevisedReason.FormatPattern)"@Html.Raw(mtCrewEdit.RevisedReason.EditAttributes) aria-describedby="x_RevisedReason_help">
@Html.Raw(mtCrewEdit.RevisedReason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.RevisedReason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewEdit.RevisedReason.Visible (end) *@
@if (mtCrewEdit.RevisedDateTime.Visible) { // mtCrewEdit.RevisedDateTime.Visible (begin)
    <div id="r_RevisedDateTime" @Html.Raw(mtCrewEdit.RevisedDateTime.RowAttributes)>
        <label id="elh_MTCrew_RevisedDateTime" for="x_RevisedDateTime" class="@(mtCrewEdit.LeftColumnClass)">@Html.Raw(mtCrewEdit.RevisedDateTime.Caption)@Html.Raw(mtCrewEdit.RevisedDateTime.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewEdit.RightColumnClass)"><div @Html.Raw(mtCrewEdit.RevisedDateTime.CellAttributes)>
<span id="el_MTCrew_RevisedDateTime">
<input type="@(mtCrewEdit.RevisedDateTime.InputTextType)" name="x_RevisedDateTime" id="x_RevisedDateTime" data-table="MTCrew" data-field="x_RevisedDateTime" value="@Html.Raw(mtCrewEdit.RevisedDateTime.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewEdit.RevisedDateTime.PlaceHolder))" data-format-pattern="@(mtCrewEdit.RevisedDateTime.FormatPattern)"@Html.Raw(mtCrewEdit.RevisedDateTime.EditAttributes) aria-describedby="x_RevisedDateTime_help">
@Html.Raw(mtCrewEdit.RevisedDateTime.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewEdit.RevisedDateTime.GetErrorMessage())</div>
@if (!mtCrewEdit.RevisedDateTime.ReadOnly && !mtCrewEdit.RevisedDateTime.Disabled && !mtCrewEdit.RevisedDateTime.EditAttrs.Is("readonly") && !mtCrewEdit.RevisedDateTime.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewedit", "x_RevisedDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewEdit.RevisedDateTime.Visible (end) *@
</div><!-- /page* -->
    <input type="hidden" data-table="MTCrew" data-field="x_ID" data-hidden="1" name="x_ID" id="x_ID" value="@Html.Raw(HtmlEncode(mtCrewEdit.ID.CurrentValue))">
@{ mtCrewEdit.CloseRecordset(); }
@if (mtCrewEdit.CurrentDetailTables.Contains("MTCrewCertificate") && mtCrewCertificate.DetailEdit) {
    if (!Empty(mtCrewEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewCertificate", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewCertificateGrid")
    View = this;
}
@if (mtCrewEdit.CurrentDetailTables.Contains("MTCrewDocument") && mtCrewDocument.DetailEdit) {
    if (!Empty(mtCrewEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewDocument", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewDocumentGrid")
    View = this;
}
@if (mtCrewEdit.CurrentDetailTables.Contains("MTCrewExperience") && mtCrewExperience.DetailEdit) {
    if (!Empty(mtCrewEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewExperience", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewExperienceGrid")
    View = this;
}
@if (mtCrewEdit.CurrentDetailTables.Contains("MTCrewFamily") && mtCrewFamily.DetailEdit) {
    if (!Empty(mtCrewEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewFamily", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewFamilyGrid")
    View = this;
}
@if (mtCrewEdit.CurrentDetailTables.Contains("MTCrewMedicalHistory") && mtCrewMedicalHistory.DetailEdit) {
    if (!Empty(mtCrewEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewMedicalHistory", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewMedicalHistoryGrid")
    View = this;
}
@Html.Raw(mtCrewEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtCrewEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTCrewedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTCrewedit" data-href="@AppPath(mtCrewEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtCrewEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
</main>
@mtCrewEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTCrew");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
