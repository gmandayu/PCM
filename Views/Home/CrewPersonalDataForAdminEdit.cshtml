@{
    // View
    View = this;

    // Check action result
    if (crewPersonalDataForAdminEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewPersonalDataForAdminEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@crewPersonalDataForAdminEdit.ShowPageHeader()
@crewPersonalDataForAdminEdit.ShowMessages()
<main class="edit">
<form name="fCrewPersonalDataForAdminedit" id="fCrewPersonalDataForAdminedit" class="@(crewPersonalDataForAdminEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(crewPersonalDataForAdminEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewPersonalDataForAdmin: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fCrewPersonalDataForAdminedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewPersonalDataForAdminedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["IndividualCodeNumber", [fields.IndividualCodeNumber.visible && fields.IndividualCodeNumber.required ? ew.Validators.required(fields.IndividualCodeNumber.caption) : null], fields.IndividualCodeNumber.isInvalid],
            ["FullName", [fields.FullName.visible && fields.FullName.required ? ew.Validators.required(fields.FullName.caption) : null], fields.FullName.isInvalid],
            ["RequiredPhoto", [fields.RequiredPhoto.visible && fields.RequiredPhoto.required ? ew.Validators.fileRequired(fields.RequiredPhoto.caption) : null], fields.RequiredPhoto.isInvalid],
            ["VisaPhoto", [fields.VisaPhoto.visible && fields.VisaPhoto.required ? ew.Validators.fileRequired(fields.VisaPhoto.caption) : null], fields.VisaPhoto.isInvalid],
            ["Nationality_CountryID", [fields.Nationality_CountryID.visible && fields.Nationality_CountryID.required ? ew.Validators.required(fields.Nationality_CountryID.caption) : null], fields.Nationality_CountryID.isInvalid],
            ["CountryOfOrigin_CountryID", [fields.CountryOfOrigin_CountryID.visible && fields.CountryOfOrigin_CountryID.required ? ew.Validators.required(fields.CountryOfOrigin_CountryID.caption) : null], fields.CountryOfOrigin_CountryID.isInvalid],
            ["DateOfBirth", [fields.DateOfBirth.visible && fields.DateOfBirth.required ? ew.Validators.required(fields.DateOfBirth.caption) : null, ew.Validators.datetime(fields.DateOfBirth.clientFormatPattern)], fields.DateOfBirth.isInvalid],
            ["CityOfBirth", [fields.CityOfBirth.visible && fields.CityOfBirth.required ? ew.Validators.required(fields.CityOfBirth.caption) : null], fields.CityOfBirth.isInvalid],
            ["Gender", [fields.Gender.visible && fields.Gender.required ? ew.Validators.required(fields.Gender.caption) : null], fields.Gender.isInvalid],
            ["MaritalStatus", [fields.MaritalStatus.visible && fields.MaritalStatus.required ? ew.Validators.required(fields.MaritalStatus.caption) : null], fields.MaritalStatus.isInvalid],
            ["ReligionID", [fields.ReligionID.visible && fields.ReligionID.required ? ew.Validators.required(fields.ReligionID.caption) : null], fields.ReligionID.isInvalid],
            ["BloodType", [fields.BloodType.visible && fields.BloodType.required ? ew.Validators.required(fields.BloodType.caption) : null], fields.BloodType.isInvalid],
            ["RankAppliedFor_RankID", [fields.RankAppliedFor_RankID.visible && fields.RankAppliedFor_RankID.required ? ew.Validators.required(fields.RankAppliedFor_RankID.caption) : null], fields.RankAppliedFor_RankID.isInvalid],
            ["WillAcceptLowRank", [fields.WillAcceptLowRank.visible && fields.WillAcceptLowRank.required ? ew.Validators.required(fields.WillAcceptLowRank.caption) : null], fields.WillAcceptLowRank.isInvalid],
            ["AvailableFrom", [fields.AvailableFrom.visible && fields.AvailableFrom.required ? ew.Validators.required(fields.AvailableFrom.caption) : null, ew.Validators.datetime(fields.AvailableFrom.clientFormatPattern)], fields.AvailableFrom.isInvalid],
            ["AvailableUntil", [fields.AvailableUntil.visible && fields.AvailableUntil.required ? ew.Validators.required(fields.AvailableUntil.caption) : null, ew.Validators.datetime(fields.AvailableUntil.clientFormatPattern)], fields.AvailableUntil.isInvalid],
            ["PrimaryAddressDetail", [fields.PrimaryAddressDetail.visible && fields.PrimaryAddressDetail.required ? ew.Validators.required(fields.PrimaryAddressDetail.caption) : null], fields.PrimaryAddressDetail.isInvalid],
            ["PrimaryAddressCity", [fields.PrimaryAddressCity.visible && fields.PrimaryAddressCity.required ? ew.Validators.required(fields.PrimaryAddressCity.caption) : null], fields.PrimaryAddressCity.isInvalid],
            ["PrimaryAddressNearestAirport", [fields.PrimaryAddressNearestAirport.visible && fields.PrimaryAddressNearestAirport.required ? ew.Validators.required(fields.PrimaryAddressNearestAirport.caption) : null], fields.PrimaryAddressNearestAirport.isInvalid],
            ["PrimaryAddressState", [fields.PrimaryAddressState.visible && fields.PrimaryAddressState.required ? ew.Validators.required(fields.PrimaryAddressState.caption) : null], fields.PrimaryAddressState.isInvalid],
            ["PrimaryAddressPostCode", [fields.PrimaryAddressPostCode.visible && fields.PrimaryAddressPostCode.required ? ew.Validators.required(fields.PrimaryAddressPostCode.caption) : null], fields.PrimaryAddressPostCode.isInvalid],
            ["PrimaryAddressCountryID", [fields.PrimaryAddressCountryID.visible && fields.PrimaryAddressCountryID.required ? ew.Validators.required(fields.PrimaryAddressCountryID.caption) : null], fields.PrimaryAddressCountryID.isInvalid],
            ["PrimaryAddressHomeTel", [fields.PrimaryAddressHomeTel.visible && fields.PrimaryAddressHomeTel.required ? ew.Validators.required(fields.PrimaryAddressHomeTel.caption) : null], fields.PrimaryAddressHomeTel.isInvalid],
            ["AlternativeAddressDetail", [fields.AlternativeAddressDetail.visible && fields.AlternativeAddressDetail.required ? ew.Validators.required(fields.AlternativeAddressDetail.caption) : null], fields.AlternativeAddressDetail.isInvalid],
            ["AlternativeAddressState", [fields.AlternativeAddressState.visible && fields.AlternativeAddressState.required ? ew.Validators.required(fields.AlternativeAddressState.caption) : null], fields.AlternativeAddressState.isInvalid],
            ["AlternativeAddressCity", [fields.AlternativeAddressCity.visible && fields.AlternativeAddressCity.required ? ew.Validators.required(fields.AlternativeAddressCity.caption) : null], fields.AlternativeAddressCity.isInvalid],
            ["AlternativeAddressHomeTel", [fields.AlternativeAddressHomeTel.visible && fields.AlternativeAddressHomeTel.required ? ew.Validators.required(fields.AlternativeAddressHomeTel.caption) : null], fields.AlternativeAddressHomeTel.isInvalid],
            ["AlternativeAddressPostCode", [fields.AlternativeAddressPostCode.visible && fields.AlternativeAddressPostCode.required ? ew.Validators.required(fields.AlternativeAddressPostCode.caption) : null], fields.AlternativeAddressPostCode.isInvalid],
            ["AlternativeAddressCountryID", [fields.AlternativeAddressCountryID.visible && fields.AlternativeAddressCountryID.required ? ew.Validators.required(fields.AlternativeAddressCountryID.caption) : null], fields.AlternativeAddressCountryID.isInvalid],
            ["MobileNumber", [fields.MobileNumber.visible && fields.MobileNumber.required ? ew.Validators.required(fields.MobileNumber.caption) : null], fields.MobileNumber.isInvalid],
            ["_Email", [fields._Email.visible && fields._Email.required ? ew.Validators.required(fields._Email.caption) : null, ew.Validators.email], fields._Email.isInvalid],
            ["SocialSecurityNumber", [fields.SocialSecurityNumber.visible && fields.SocialSecurityNumber.required ? ew.Validators.required(fields.SocialSecurityNumber.caption) : null], fields.SocialSecurityNumber.isInvalid],
            ["SocialSecurityIssuingCountryID", [fields.SocialSecurityIssuingCountryID.visible && fields.SocialSecurityIssuingCountryID.required ? ew.Validators.required(fields.SocialSecurityIssuingCountryID.caption) : null], fields.SocialSecurityIssuingCountryID.isInvalid],
            ["SocialSecurityImage", [fields.SocialSecurityImage.visible && fields.SocialSecurityImage.required ? ew.Validators.fileRequired(fields.SocialSecurityImage.caption) : null], fields.SocialSecurityImage.isInvalid],
            ["PersonalTaxNumber", [fields.PersonalTaxNumber.visible && fields.PersonalTaxNumber.required ? ew.Validators.required(fields.PersonalTaxNumber.caption) : null], fields.PersonalTaxNumber.isInvalid],
            ["PersonalTaxIssuingCountryID", [fields.PersonalTaxIssuingCountryID.visible && fields.PersonalTaxIssuingCountryID.required ? ew.Validators.required(fields.PersonalTaxIssuingCountryID.caption) : null], fields.PersonalTaxIssuingCountryID.isInvalid],
            ["PersonalTaxImage", [fields.PersonalTaxImage.visible && fields.PersonalTaxImage.required ? ew.Validators.fileRequired(fields.PersonalTaxImage.caption) : null], fields.PersonalTaxImage.isInvalid],
            ["Status", [fields.Status.visible && fields.Status.required ? ew.Validators.required(fields.Status.caption) : null], fields.Status.isInvalid],
            ["Reason", [fields.Reason.visible && fields.Reason.required ? ew.Validators.required(fields.Reason.caption) : null], fields.Reason.isInvalid],
            ["Weight", [fields.Weight.visible && fields.Weight.required ? ew.Validators.required(fields.Weight.caption) : null], fields.Weight.isInvalid],
            ["Height", [fields.Height.visible && fields.Height.required ? ew.Validators.required(fields.Height.caption) : null], fields.Height.isInvalid],
            ["CoverallSize", [fields.CoverallSize.visible && fields.CoverallSize.required ? ew.Validators.required(fields.CoverallSize.caption) : null], fields.CoverallSize.isInvalid],
            ["SafetyShoesSize", [fields.SafetyShoesSize.visible && fields.SafetyShoesSize.required ? ew.Validators.required(fields.SafetyShoesSize.caption) : null], fields.SafetyShoesSize.isInvalid],
            ["ShirtSize", [fields.ShirtSize.visible && fields.ShirtSize.required ? ew.Validators.required(fields.ShirtSize.caption) : null], fields.ShirtSize.isInvalid],
            ["TrousersSize", [fields.TrousersSize.visible && fields.TrousersSize.required ? ew.Validators.required(fields.TrousersSize.caption) : null], fields.TrousersSize.isInvalid],
            ["NomineeFullName", [fields.NomineeFullName.visible && fields.NomineeFullName.required ? ew.Validators.required(fields.NomineeFullName.caption) : null], fields.NomineeFullName.isInvalid],
            ["NomineeRelationship", [fields.NomineeRelationship.visible && fields.NomineeRelationship.required ? ew.Validators.required(fields.NomineeRelationship.caption) : null], fields.NomineeRelationship.isInvalid],
            ["NomineeGender", [fields.NomineeGender.visible && fields.NomineeGender.required ? ew.Validators.required(fields.NomineeGender.caption) : null], fields.NomineeGender.isInvalid],
            ["NomineeNationality_CountryID", [fields.NomineeNationality_CountryID.visible && fields.NomineeNationality_CountryID.required ? ew.Validators.required(fields.NomineeNationality_CountryID.caption) : null], fields.NomineeNationality_CountryID.isInvalid],
            ["NomineeAddressDetail", [fields.NomineeAddressDetail.visible && fields.NomineeAddressDetail.required ? ew.Validators.required(fields.NomineeAddressDetail.caption) : null], fields.NomineeAddressDetail.isInvalid],
            ["NomineeAddressCity", [fields.NomineeAddressCity.visible && fields.NomineeAddressCity.required ? ew.Validators.required(fields.NomineeAddressCity.caption) : null], fields.NomineeAddressCity.isInvalid],
            ["NomineeAddressPostCode", [fields.NomineeAddressPostCode.visible && fields.NomineeAddressPostCode.required ? ew.Validators.required(fields.NomineeAddressPostCode.caption) : null], fields.NomineeAddressPostCode.isInvalid],
            ["NomineeAddressCountryID", [fields.NomineeAddressCountryID.visible && fields.NomineeAddressCountryID.required ? ew.Validators.required(fields.NomineeAddressCountryID.caption) : null], fields.NomineeAddressCountryID.isInvalid],
            ["NomineeAddressHomeTel", [fields.NomineeAddressHomeTel.visible && fields.NomineeAddressHomeTel.required ? ew.Validators.required(fields.NomineeAddressHomeTel.caption) : null], fields.NomineeAddressHomeTel.isInvalid],
            ["NomineeEmail", [fields.NomineeEmail.visible && fields.NomineeEmail.required ? ew.Validators.required(fields.NomineeEmail.caption) : null, ew.Validators.email], fields.NomineeEmail.isInvalid],
            ["NomineeMobileNumber", [fields.NomineeMobileNumber.visible && fields.NomineeMobileNumber.required ? ew.Validators.required(fields.NomineeMobileNumber.caption) : null], fields.NomineeMobileNumber.isInvalid],
            ["NSSF_Health_Number", [fields.NSSF_Health_Number.visible && fields.NSSF_Health_Number.required ? ew.Validators.required(fields.NSSF_Health_Number.caption) : null], fields.NSSF_Health_Number.isInvalid],
            ["NSSF_Occupation_Number", [fields.NSSF_Occupation_Number.visible && fields.NSSF_Occupation_Number.required ? ew.Validators.required(fields.NSSF_Occupation_Number.caption) : null], fields.NSSF_Occupation_Number.isInvalid],
            ["NomineeRelationshipSelect", [fields.NomineeRelationshipSelect.visible && fields.NomineeRelationshipSelect.required ? ew.Validators.required(fields.NomineeRelationshipSelect.caption) : null], fields.NomineeRelationshipSelect.isInvalid],
            ["NomineeRelationshipDetail", [fields.NomineeRelationshipDetail.visible && fields.NomineeRelationshipDetail.required ? ew.Validators.required(fields.NomineeRelationshipDetail.caption) : null], fields.NomineeRelationshipDetail.isInvalid],
            ["MobileNumberCode_CountryID", [fields.MobileNumberCode_CountryID.visible && fields.MobileNumberCode_CountryID.required ? ew.Validators.required(fields.MobileNumberCode_CountryID.caption) : null], fields.MobileNumberCode_CountryID.isInvalid],
            ["PrimaryAddressHomeTelCode_CountryID", [fields.PrimaryAddressHomeTelCode_CountryID.visible && fields.PrimaryAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.PrimaryAddressHomeTelCode_CountryID.caption) : null], fields.PrimaryAddressHomeTelCode_CountryID.isInvalid],
            ["AlternativeAddressHomeTelCode_CountryID", [fields.AlternativeAddressHomeTelCode_CountryID.visible && fields.AlternativeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.AlternativeAddressHomeTelCode_CountryID.caption) : null], fields.AlternativeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeAddressHomeTelCode_CountryID", [fields.NomineeAddressHomeTelCode_CountryID.visible && fields.NomineeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.NomineeAddressHomeTelCode_CountryID.caption) : null], fields.NomineeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeMobileNumberCode_CountryID", [fields.NomineeMobileNumberCode_CountryID.visible && fields.NomineeMobileNumberCode_CountryID.required ? ew.Validators.required(fields.NomineeMobileNumberCode_CountryID.caption) : null], fields.NomineeMobileNumberCode_CountryID.isInvalid],
            ["MTManningAgentID", [fields.MTManningAgentID.visible && fields.MTManningAgentID.required ? ew.Validators.required(fields.MTManningAgentID.caption) : null], fields.MTManningAgentID.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Nationality_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "CountryOfOrigin_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "Gender": @Html.Raw(crewPersonalDataForAdminEdit.Gender.ToClientList(crewPersonalDataForAdminEdit)),
            "MaritalStatus": @Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.ToClientList(crewPersonalDataForAdminEdit)),
            "ReligionID": @Html.Raw(crewPersonalDataForAdminEdit.ReligionID.ToClientList(crewPersonalDataForAdminEdit)),
            "BloodType": @Html.Raw(crewPersonalDataForAdminEdit.BloodType.ToClientList(crewPersonalDataForAdminEdit)),
            "RankAppliedFor_RankID": @Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.ToClientList(crewPersonalDataForAdminEdit)),
            "WillAcceptLowRank": @Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.ToClientList(crewPersonalDataForAdminEdit)),
            "PrimaryAddressCountryID": @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "AlternativeAddressCountryID": @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "SocialSecurityIssuingCountryID": @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "PersonalTaxIssuingCountryID": @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "CoverallSize": @Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.ToClientList(crewPersonalDataForAdminEdit)),
            "SafetyShoesSize": @Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.ToClientList(crewPersonalDataForAdminEdit)),
            "ShirtSize": @Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.ToClientList(crewPersonalDataForAdminEdit)),
            "TrousersSize": @Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeGender": @Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeNationality_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeAddressCountryID": @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeRelationshipSelect": @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.ToClientList(crewPersonalDataForAdminEdit)),
            "MobileNumberCode_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "PrimaryAddressHomeTelCode_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "AlternativeAddressHomeTelCode_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeAddressHomeTelCode_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
            "NomineeMobileNumberCode_CountryID": @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.ToClientList(crewPersonalDataForAdminEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(crewPersonalDataForAdminEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(crewPersonalDataForAdminEdit.OldKeyName)" value="@Html.Raw(crewPersonalDataForAdminEdit.OldKey)">
<div class="ew-edit-div d-none"><!-- page* -->
@if (crewPersonalDataForAdminEdit.IndividualCodeNumber.Visible) { // crewPersonalDataForAdminEdit.IndividualCodeNumber.Visible (begin)
    <div id="r_IndividualCodeNumber" @Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_IndividualCodeNumber" for="x_IndividualCodeNumber" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_IndividualCodeNumber">@Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.Caption)@Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_IndividualCodeNumber"><span id="el_CrewPersonalDataForAdmin_IndividualCodeNumber">
<span @Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(crewPersonalDataForAdminEdit.IndividualCodeNumber.EditValue)))"></span>
<input type="hidden" data-table="CrewPersonalDataForAdmin" data-field="x_IndividualCodeNumber" data-hidden="1" name="x_IndividualCodeNumber" id="x_IndividualCodeNumber" value="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.IndividualCodeNumber.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.IndividualCodeNumber.Visible (end) *@
@if (crewPersonalDataForAdminEdit.FullName.Visible) { // crewPersonalDataForAdminEdit.FullName.Visible (begin)
    <div id="r_FullName" @Html.Raw(crewPersonalDataForAdminEdit.FullName.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_FullName" for="x_FullName" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_FullName">@Html.Raw(crewPersonalDataForAdminEdit.FullName.Caption)@Html.Raw(crewPersonalDataForAdminEdit.FullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.FullName.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_FullName"><span id="el_CrewPersonalDataForAdmin_FullName">
<input type="@(crewPersonalDataForAdminEdit.FullName.InputTextType)" name="x_FullName" id="x_FullName" data-table="CrewPersonalDataForAdmin" data-field="x_FullName" value="@Html.Raw(crewPersonalDataForAdminEdit.FullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.FullName.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.FullName.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.FullName.EditAttributes) aria-describedby="x_FullName_help">
@Html.Raw(crewPersonalDataForAdminEdit.FullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.FullName.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.FullName.Visible (end) *@
@if (crewPersonalDataForAdminEdit.RequiredPhoto.Visible) { // crewPersonalDataForAdminEdit.RequiredPhoto.Visible (begin)
    <div id="r_RequiredPhoto" @Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_RequiredPhoto" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_RequiredPhoto">@Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.Caption)@Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_RequiredPhoto"><span id="el_CrewPersonalDataForAdmin_RequiredPhoto">
<div id="fd_x_RequiredPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_RequiredPhoto"
        name="x_RequiredPhoto"
        class="form-control ew-file-input"
        title="@(crewPersonalDataForAdminEdit.RequiredPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_RequiredPhoto"
        data-size="100"
        data-accept-file-types="@(crewPersonalDataForAdminEdit.RequiredPhoto.AcceptFileTypes)"
        data-max-file-size="@(crewPersonalDataForAdminEdit.RequiredPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewPersonalDataForAdminEdit.RequiredPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_RequiredPhoto_help"
        @Html.Raw((crewPersonalDataForAdminEdit.RequiredPhoto.ReadOnly || crewPersonalDataForAdminEdit.RequiredPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_RequiredPhoto" id= "fn_x_RequiredPhoto" value="@(crewPersonalDataForAdminEdit.RequiredPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_RequiredPhoto" id= "fa_x_RequiredPhoto" value="@(Post("fa_x_RequiredPhoto") == "0" ? "0" : "1")">
<table id="ft_x_RequiredPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.RequiredPhoto.Visible (end) *@
@if (crewPersonalDataForAdminEdit.VisaPhoto.Visible) { // crewPersonalDataForAdminEdit.VisaPhoto.Visible (begin)
    <div id="r_VisaPhoto" @Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_VisaPhoto" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_VisaPhoto">@Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.Caption)@Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_VisaPhoto"><span id="el_CrewPersonalDataForAdmin_VisaPhoto">
<div id="fd_x_VisaPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_VisaPhoto"
        name="x_VisaPhoto"
        class="form-control ew-file-input"
        title="@(crewPersonalDataForAdminEdit.VisaPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_VisaPhoto"
        data-size="100"
        data-accept-file-types="@(crewPersonalDataForAdminEdit.VisaPhoto.AcceptFileTypes)"
        data-max-file-size="@(crewPersonalDataForAdminEdit.VisaPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewPersonalDataForAdminEdit.VisaPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_VisaPhoto_help"
        @Html.Raw((crewPersonalDataForAdminEdit.VisaPhoto.ReadOnly || crewPersonalDataForAdminEdit.VisaPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_VisaPhoto" id= "fn_x_VisaPhoto" value="@(crewPersonalDataForAdminEdit.VisaPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_VisaPhoto" id= "fa_x_VisaPhoto" value="@(Post("fa_x_VisaPhoto") == "0" ? "0" : "1")">
<table id="ft_x_VisaPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.VisaPhoto.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Nationality_CountryID.Visible) { // crewPersonalDataForAdminEdit.Nationality_CountryID.Visible (begin)
    <div id="r_Nationality_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Nationality_CountryID" for="x_Nationality_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Nationality_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Nationality_CountryID"><span id="el_CrewPersonalDataForAdmin_Nationality_CountryID">
    <select
        id="x_Nationality_CountryID"
        name="x_Nationality_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.Nationality_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_Nationality_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_Nationality_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.Nationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.Nationality_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.Nationality_CountryID.SelectOptionListHtml("x_Nationality_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_Nationality_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_Nationality_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_Nationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.Nationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Nationality_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_Nationality_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.Nationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Nationality_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Visible) { // crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Visible (begin)
    <div id="r_CountryOfOrigin_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_CountryOfOrigin_CountryID" for="x_CountryOfOrigin_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_CountryOfOrigin_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_CountryOfOrigin_CountryID"><span id="el_CrewPersonalDataForAdmin_CountryOfOrigin_CountryID">
    <select
        id="x_CountryOfOrigin_CountryID"
        name="x_CountryOfOrigin_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_CountryOfOrigin_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_CountryOfOrigin_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.SelectOptionListHtml("x_CountryOfOrigin_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_CountryOfOrigin_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_CountryOfOrigin_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_CountryOfOrigin_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.CountryOfOrigin_CountryID?.lookupOptions.length) {
        options.data = { id: "x_CountryOfOrigin_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_CountryOfOrigin_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.CountryOfOrigin_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.DateOfBirth.Visible) { // crewPersonalDataForAdminEdit.DateOfBirth.Visible (begin)
    <div id="r_DateOfBirth" @Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_DateOfBirth" for="x_DateOfBirth" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_DateOfBirth">@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.Caption)@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_DateOfBirth"><span id="el_CrewPersonalDataForAdmin_DateOfBirth">
<input type="@(crewPersonalDataForAdminEdit.DateOfBirth.InputTextType)" name="x_DateOfBirth" id="x_DateOfBirth" data-table="CrewPersonalDataForAdmin" data-field="x_DateOfBirth" value="@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.DateOfBirth.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.DateOfBirth.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.EditAttributes) aria-describedby="x_DateOfBirth_help">
@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.GetErrorMessage())</div>
@if (!crewPersonalDataForAdminEdit.DateOfBirth.ReadOnly && !crewPersonalDataForAdminEdit.DateOfBirth.Disabled && !crewPersonalDataForAdminEdit.DateOfBirth.EditAttrs.Is("readonly") && !crewPersonalDataForAdminEdit.DateOfBirth.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewPersonalDataForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewPersonalDataForAdminedit", "x_DateOfBirth", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.DateOfBirth.Visible (end) *@
@if (crewPersonalDataForAdminEdit.CityOfBirth.Visible) { // crewPersonalDataForAdminEdit.CityOfBirth.Visible (begin)
    <div id="r_CityOfBirth" @Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_CityOfBirth" for="x_CityOfBirth" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_CityOfBirth">@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.Caption)@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_CityOfBirth"><span id="el_CrewPersonalDataForAdmin_CityOfBirth">
<input type="@(crewPersonalDataForAdminEdit.CityOfBirth.InputTextType)" name="x_CityOfBirth" id="x_CityOfBirth" data-table="CrewPersonalDataForAdmin" data-field="x_CityOfBirth" value="@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.CityOfBirth.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.CityOfBirth.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.EditAttributes) aria-describedby="x_CityOfBirth_help">
@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.CityOfBirth.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Gender.Visible) { // crewPersonalDataForAdminEdit.Gender.Visible (begin)
    <div id="r_Gender" @Html.Raw(crewPersonalDataForAdminEdit.Gender.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Gender" for="x_Gender" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Gender">@Html.Raw(crewPersonalDataForAdminEdit.Gender.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Gender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Gender.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Gender"><span id="el_CrewPersonalDataForAdmin_Gender">
    <select
        id="x_Gender"
        name="x_Gender"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.Gender.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_Gender"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_Gender"
        data-value-separator="@(crewPersonalDataForAdminEdit.Gender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.Gender.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.Gender.EditAttributes)>
        @(crewPersonalDataForAdminEdit.Gender.SelectOptionListHtml("x_Gender"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.Gender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Gender.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_Gender", selectId: "fCrewPersonalDataForAdminedit_x_Gender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.Gender?.lookupOptions.length) {
        options.data = { id: "x_Gender", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_Gender", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.Gender.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Gender.Visible (end) *@
@if (crewPersonalDataForAdminEdit.MaritalStatus.Visible) { // crewPersonalDataForAdminEdit.MaritalStatus.Visible (begin)
    <div id="r_MaritalStatus" @Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_MaritalStatus" for="x_MaritalStatus" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_MaritalStatus">@Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.Caption)@Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_MaritalStatus"><span id="el_CrewPersonalDataForAdmin_MaritalStatus">
    <select
        id="x_MaritalStatus"
        name="x_MaritalStatus"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.MaritalStatus.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_MaritalStatus"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_MaritalStatus"
        data-value-separator="@(crewPersonalDataForAdminEdit.MaritalStatus.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.MaritalStatus.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.EditAttributes)>
        @(crewPersonalDataForAdminEdit.MaritalStatus.SelectOptionListHtml("x_MaritalStatus"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_MaritalStatus", selectId: "fCrewPersonalDataForAdminedit_x_MaritalStatus" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.MaritalStatus?.lookupOptions.length) {
        options.data = { id: "x_MaritalStatus", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_MaritalStatus", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.MaritalStatus.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.MaritalStatus.Visible (end) *@
@if (crewPersonalDataForAdminEdit.ReligionID.Visible) { // crewPersonalDataForAdminEdit.ReligionID.Visible (begin)
    <div id="r_ReligionID" @Html.Raw(crewPersonalDataForAdminEdit.ReligionID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_ReligionID" for="x_ReligionID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_ReligionID">@Html.Raw(crewPersonalDataForAdminEdit.ReligionID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.ReligionID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.ReligionID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_ReligionID"><span id="el_CrewPersonalDataForAdmin_ReligionID">
    <select
        id="x_ReligionID"
        name="x_ReligionID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.ReligionID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_ReligionID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_ReligionID"
        data-value-separator="@(crewPersonalDataForAdminEdit.ReligionID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.ReligionID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.ReligionID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.ReligionID.SelectOptionListHtml("x_ReligionID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.ReligionID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.ReligionID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.ReligionID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_ReligionID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_ReligionID", selectId: "fCrewPersonalDataForAdminedit_x_ReligionID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.ReligionID?.lookupOptions.length) {
        options.data = { id: "x_ReligionID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_ReligionID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.ReligionID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.ReligionID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.BloodType.Visible) { // crewPersonalDataForAdminEdit.BloodType.Visible (begin)
    <div id="r_BloodType" @Html.Raw(crewPersonalDataForAdminEdit.BloodType.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_BloodType" for="x_BloodType" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_BloodType">@Html.Raw(crewPersonalDataForAdminEdit.BloodType.Caption)@Html.Raw(crewPersonalDataForAdminEdit.BloodType.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.BloodType.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_BloodType"><span id="el_CrewPersonalDataForAdmin_BloodType">
    <select
        id="x_BloodType"
        name="x_BloodType"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.BloodType.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_BloodType"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_BloodType"
        data-value-separator="@(crewPersonalDataForAdminEdit.BloodType.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.BloodType.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.BloodType.EditAttributes)>
        @(crewPersonalDataForAdminEdit.BloodType.SelectOptionListHtml("x_BloodType"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.BloodType.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.BloodType.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_BloodType", selectId: "fCrewPersonalDataForAdminedit_x_BloodType" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.BloodType?.lookupOptions.length) {
        options.data = { id: "x_BloodType", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_BloodType", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.BloodType.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.BloodType.Visible (end) *@
@if (crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Visible) { // crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Visible (begin)
    <div id="r_RankAppliedFor_RankID" @Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_RankAppliedFor_RankID" for="x_RankAppliedFor_RankID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_RankAppliedFor_RankID">@Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_RankAppliedFor_RankID"><span id="el_CrewPersonalDataForAdmin_RankAppliedFor_RankID">
    <select
        id="x_RankAppliedFor_RankID"
        name="x_RankAppliedFor_RankID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_RankAppliedFor_RankID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_RankAppliedFor_RankID"
        data-value-separator="@(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.SelectOptionListHtml("x_RankAppliedFor_RankID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_RankAppliedFor_RankID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_RankAppliedFor_RankID", selectId: "fCrewPersonalDataForAdminedit_x_RankAppliedFor_RankID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.RankAppliedFor_RankID?.lookupOptions.length) {
        options.data = { id: "x_RankAppliedFor_RankID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_RankAppliedFor_RankID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.RankAppliedFor_RankID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.WillAcceptLowRank.Visible) { // crewPersonalDataForAdminEdit.WillAcceptLowRank.Visible (begin)
    <div id="r_WillAcceptLowRank" @Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_WillAcceptLowRank" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_WillAcceptLowRank">@Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.Caption)@Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_WillAcceptLowRank"><span id="el_CrewPersonalDataForAdmin_WillAcceptLowRank">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewPersonalDataForAdminEdit.WillAcceptLowRank.IsInvalidClass)" data-table="CrewPersonalDataForAdmin" data-field="x_WillAcceptLowRank" data-boolean name="x_WillAcceptLowRank" id="x_WillAcceptLowRank" value="1" checked="@ConvertToBool(crewPersonalDataForAdminEdit.WillAcceptLowRank.CurrentValue)" @Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.EditAttributes) aria-describedby="x_WillAcceptLowRank_help">
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.GetErrorMessage())</div>
</div>
@Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.WillAcceptLowRank.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AvailableFrom.Visible) { // crewPersonalDataForAdminEdit.AvailableFrom.Visible (begin)
    <div id="r_AvailableFrom" @Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AvailableFrom" for="x_AvailableFrom" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AvailableFrom">@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AvailableFrom"><span id="el_CrewPersonalDataForAdmin_AvailableFrom">
<input type="@(crewPersonalDataForAdminEdit.AvailableFrom.InputTextType)" name="x_AvailableFrom" id="x_AvailableFrom" data-table="CrewPersonalDataForAdmin" data-field="x_AvailableFrom" value="@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AvailableFrom.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AvailableFrom.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.EditAttributes) aria-describedby="x_AvailableFrom_help">
@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.GetErrorMessage())</div>
@if (!crewPersonalDataForAdminEdit.AvailableFrom.ReadOnly && !crewPersonalDataForAdminEdit.AvailableFrom.Disabled && !crewPersonalDataForAdminEdit.AvailableFrom.EditAttrs.Is("readonly") && !crewPersonalDataForAdminEdit.AvailableFrom.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewPersonalDataForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewPersonalDataForAdminedit", "x_AvailableFrom", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AvailableFrom.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AvailableUntil.Visible) { // crewPersonalDataForAdminEdit.AvailableUntil.Visible (begin)
    <div id="r_AvailableUntil" @Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AvailableUntil" for="x_AvailableUntil" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AvailableUntil">@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AvailableUntil"><span id="el_CrewPersonalDataForAdmin_AvailableUntil">
<input type="@(crewPersonalDataForAdminEdit.AvailableUntil.InputTextType)" name="x_AvailableUntil" id="x_AvailableUntil" data-table="CrewPersonalDataForAdmin" data-field="x_AvailableUntil" value="@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AvailableUntil.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AvailableUntil.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.EditAttributes) aria-describedby="x_AvailableUntil_help">
@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.GetErrorMessage())</div>
@if (!crewPersonalDataForAdminEdit.AvailableUntil.ReadOnly && !crewPersonalDataForAdminEdit.AvailableUntil.Disabled && !crewPersonalDataForAdminEdit.AvailableUntil.EditAttrs.Is("readonly") && !crewPersonalDataForAdminEdit.AvailableUntil.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewPersonalDataForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewPersonalDataForAdminedit", "x_AvailableUntil", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AvailableUntil.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressDetail.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressDetail.Visible (begin)
    <div id="r_PrimaryAddressDetail" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressDetail" for="x_PrimaryAddressDetail" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressDetail">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressDetail"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressDetail">
<textarea data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressDetail" name="x_PrimaryAddressDetail" id="x_PrimaryAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressDetail.PlaceHolder))"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.EditAttributes) aria-describedby="x_PrimaryAddressDetail_help">@(crewPersonalDataForAdminEdit.PrimaryAddressDetail.EditValue)</textarea>
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressCity.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressCity.Visible (begin)
    <div id="r_PrimaryAddressCity" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressCity" for="x_PrimaryAddressCity" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressCity">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressCity"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressCity">
<input type="@(crewPersonalDataForAdminEdit.PrimaryAddressCity.InputTextType)" name="x_PrimaryAddressCity" id="x_PrimaryAddressCity" data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressCity" value="@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressCity.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PrimaryAddressCity.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.EditAttributes) aria-describedby="x_PrimaryAddressCity_help">
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Visible (begin)
    <div id="r_PrimaryAddressNearestAirport" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressNearestAirport" for="x_PrimaryAddressNearestAirport" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressNearestAirport">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressNearestAirport"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressNearestAirport">
<input type="@(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.InputTextType)" name="x_PrimaryAddressNearestAirport" id="x_PrimaryAddressNearestAirport" data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressNearestAirport" value="@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.EditAttributes) aria-describedby="x_PrimaryAddressNearestAirport_help">
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressState.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressState.Visible (begin)
    <div id="r_PrimaryAddressState" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressState" for="x_PrimaryAddressState" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressState">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressState"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressState">
<input type="@(crewPersonalDataForAdminEdit.PrimaryAddressState.InputTextType)" name="x_PrimaryAddressState" id="x_PrimaryAddressState" data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressState" value="@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressState.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PrimaryAddressState.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.EditAttributes) aria-describedby="x_PrimaryAddressState_help">
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressState.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Visible (begin)
    <div id="r_PrimaryAddressPostCode" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressPostCode" for="x_PrimaryAddressPostCode" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressPostCode">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressPostCode"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressPostCode">
<input type="@(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.InputTextType)" name="x_PrimaryAddressPostCode" id="x_PrimaryAddressPostCode" data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressPostCode" value="@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.EditAttributes) aria-describedby="x_PrimaryAddressPostCode_help">
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Visible (begin)
    <div id="r_PrimaryAddressCountryID" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressCountryID" for="x_PrimaryAddressCountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressCountryID">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressCountryID"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressCountryID">
    <select
        id="x_PrimaryAddressCountryID"
        name="x_PrimaryAddressCountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_PrimaryAddressCountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_PrimaryAddressCountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.SelectOptionListHtml("x_PrimaryAddressCountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_PrimaryAddressCountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_PrimaryAddressCountryID", selectId: "fCrewPersonalDataForAdminedit_x_PrimaryAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.PrimaryAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressCountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_PrimaryAddressCountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.PrimaryAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Visible (begin)
    <div id="r_PrimaryAddressHomeTel" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressHomeTel" for="x_PrimaryAddressHomeTel" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressHomeTel">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressHomeTel"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressHomeTel">
<input type="@(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.InputTextType)" name="x_PrimaryAddressHomeTel" id="x_PrimaryAddressHomeTel" data-table="CrewPersonalDataForAdmin" data-field="x_PrimaryAddressHomeTel" value="@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.EditAttributes) aria-describedby="x_PrimaryAddressHomeTel_help">
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressDetail.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressDetail.Visible (begin)
    <div id="r_AlternativeAddressDetail" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressDetail" for="x_AlternativeAddressDetail" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressDetail">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressDetail"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressDetail">
<textarea data-table="CrewPersonalDataForAdmin" data-field="x_AlternativeAddressDetail" name="x_AlternativeAddressDetail" id="x_AlternativeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressDetail.PlaceHolder))"@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.EditAttributes) aria-describedby="x_AlternativeAddressDetail_help">@(crewPersonalDataForAdminEdit.AlternativeAddressDetail.EditValue)</textarea>
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressState.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressState.Visible (begin)
    <div id="r_AlternativeAddressState" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressState" for="x_AlternativeAddressState" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressState">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressState"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressState">
<input type="@(crewPersonalDataForAdminEdit.AlternativeAddressState.InputTextType)" name="x_AlternativeAddressState" id="x_AlternativeAddressState" data-table="CrewPersonalDataForAdmin" data-field="x_AlternativeAddressState" value="@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressState.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AlternativeAddressState.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.EditAttributes) aria-describedby="x_AlternativeAddressState_help">
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressState.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressCity.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressCity.Visible (begin)
    <div id="r_AlternativeAddressCity" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressCity" for="x_AlternativeAddressCity" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressCity">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressCity"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressCity">
<input type="@(crewPersonalDataForAdminEdit.AlternativeAddressCity.InputTextType)" name="x_AlternativeAddressCity" id="x_AlternativeAddressCity" data-table="CrewPersonalDataForAdmin" data-field="x_AlternativeAddressCity" value="@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressCity.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AlternativeAddressCity.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.EditAttributes) aria-describedby="x_AlternativeAddressCity_help">
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Visible (begin)
    <div id="r_AlternativeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressHomeTel" for="x_AlternativeAddressHomeTel" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressHomeTel">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressHomeTel"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressHomeTel">
<input type="@(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.InputTextType)" name="x_AlternativeAddressHomeTel" id="x_AlternativeAddressHomeTel" data-table="CrewPersonalDataForAdmin" data-field="x_AlternativeAddressHomeTel" value="@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.EditAttributes) aria-describedby="x_AlternativeAddressHomeTel_help">
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Visible (begin)
    <div id="r_AlternativeAddressPostCode" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressPostCode" for="x_AlternativeAddressPostCode" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressPostCode">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressPostCode"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressPostCode">
<input type="@(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.InputTextType)" name="x_AlternativeAddressPostCode" id="x_AlternativeAddressPostCode" data-table="CrewPersonalDataForAdmin" data-field="x_AlternativeAddressPostCode" value="@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.EditAttributes) aria-describedby="x_AlternativeAddressPostCode_help">
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Visible (begin)
    <div id="r_AlternativeAddressCountryID" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressCountryID" for="x_AlternativeAddressCountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressCountryID">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressCountryID"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressCountryID">
    <select
        id="x_AlternativeAddressCountryID"
        name="x_AlternativeAddressCountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_AlternativeAddressCountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_AlternativeAddressCountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.SelectOptionListHtml("x_AlternativeAddressCountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_AlternativeAddressCountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_AlternativeAddressCountryID", selectId: "fCrewPersonalDataForAdminedit_x_AlternativeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.AlternativeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressCountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_AlternativeAddressCountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.AlternativeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.MobileNumber.Visible) { // crewPersonalDataForAdminEdit.MobileNumber.Visible (begin)
    <div id="r_MobileNumber" @Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_MobileNumber" for="x_MobileNumber" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_MobileNumber">@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.Caption)@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_MobileNumber"><span id="el_CrewPersonalDataForAdmin_MobileNumber">
<input type="@(crewPersonalDataForAdminEdit.MobileNumber.InputTextType)" name="x_MobileNumber" id="x_MobileNumber" data-table="CrewPersonalDataForAdmin" data-field="x_MobileNumber" value="@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.MobileNumber.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.MobileNumber.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.EditAttributes) aria-describedby="x_MobileNumber_help">
@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.MobileNumber.Visible (end) *@
@if (crewPersonalDataForAdminEdit._Email.Visible) { // crewPersonalDataForAdminEdit._Email.Visible (begin)
    <div id="r__Email" @Html.Raw(crewPersonalDataForAdminEdit._Email.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin__Email" for="x__Email" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin__Email">@Html.Raw(crewPersonalDataForAdminEdit._Email.Caption)@Html.Raw(crewPersonalDataForAdminEdit._Email.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit._Email.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin__Email"><span id="el_CrewPersonalDataForAdmin__Email">
<input type="@(crewPersonalDataForAdminEdit._Email.InputTextType)" name="x__Email" id="x__Email" data-table="CrewPersonalDataForAdmin" data-field="x__Email" value="@Html.Raw(crewPersonalDataForAdminEdit._Email.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit._Email.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit._Email.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit._Email.EditAttributes) aria-describedby="x__Email_help">
@Html.Raw(crewPersonalDataForAdminEdit._Email.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit._Email.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit._Email.Visible (end) *@
@if (crewPersonalDataForAdminEdit.SocialSecurityNumber.Visible) { // crewPersonalDataForAdminEdit.SocialSecurityNumber.Visible (begin)
    <div id="r_SocialSecurityNumber" @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_SocialSecurityNumber" for="x_SocialSecurityNumber" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_SocialSecurityNumber">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.Caption)@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_SocialSecurityNumber"><span id="el_CrewPersonalDataForAdmin_SocialSecurityNumber">
<input type="@(crewPersonalDataForAdminEdit.SocialSecurityNumber.InputTextType)" name="x_SocialSecurityNumber" id="x_SocialSecurityNumber" data-table="CrewPersonalDataForAdmin" data-field="x_SocialSecurityNumber" value="@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.SocialSecurityNumber.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.SocialSecurityNumber.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.EditAttributes) aria-describedby="x_SocialSecurityNumber_help">
@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.SocialSecurityNumber.Visible (end) *@
@if (crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Visible) { // crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Visible (begin)
    <div id="r_SocialSecurityIssuingCountryID" @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_SocialSecurityIssuingCountryID" for="x_SocialSecurityIssuingCountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_SocialSecurityIssuingCountryID">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_SocialSecurityIssuingCountryID"><span id="el_CrewPersonalDataForAdmin_SocialSecurityIssuingCountryID">
    <select
        id="x_SocialSecurityIssuingCountryID"
        name="x_SocialSecurityIssuingCountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_SocialSecurityIssuingCountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_SocialSecurityIssuingCountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.SelectOptionListHtml("x_SocialSecurityIssuingCountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_SocialSecurityIssuingCountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_SocialSecurityIssuingCountryID", selectId: "fCrewPersonalDataForAdminedit_x_SocialSecurityIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.SocialSecurityIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_SocialSecurityIssuingCountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_SocialSecurityIssuingCountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.SocialSecurityIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.SocialSecurityImage.Visible) { // crewPersonalDataForAdminEdit.SocialSecurityImage.Visible (begin)
    <div id="r_SocialSecurityImage" @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_SocialSecurityImage" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_SocialSecurityImage">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.Caption)@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_SocialSecurityImage"><span id="el_CrewPersonalDataForAdmin_SocialSecurityImage">
<div id="fd_x_SocialSecurityImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_SocialSecurityImage"
        name="x_SocialSecurityImage"
        class="form-control ew-file-input"
        title="@(crewPersonalDataForAdminEdit.SocialSecurityImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_SocialSecurityImage"
        data-size="100"
        data-accept-file-types="@(crewPersonalDataForAdminEdit.SocialSecurityImage.AcceptFileTypes)"
        data-max-file-size="@(crewPersonalDataForAdminEdit.SocialSecurityImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewPersonalDataForAdminEdit.SocialSecurityImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_SocialSecurityImage_help"
        @Html.Raw((crewPersonalDataForAdminEdit.SocialSecurityImage.ReadOnly || crewPersonalDataForAdminEdit.SocialSecurityImage.Disabled) ? " disabled" : "")
        @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_SocialSecurityImage" id= "fn_x_SocialSecurityImage" value="@(crewPersonalDataForAdminEdit.SocialSecurityImage.Upload.FileName)">
<input type="hidden" name="fa_x_SocialSecurityImage" id= "fa_x_SocialSecurityImage" value="@(Post("fa_x_SocialSecurityImage") == "0" ? "0" : "1")">
<table id="ft_x_SocialSecurityImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.SocialSecurityImage.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PersonalTaxNumber.Visible) { // crewPersonalDataForAdminEdit.PersonalTaxNumber.Visible (begin)
    <div id="r_PersonalTaxNumber" @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PersonalTaxNumber" for="x_PersonalTaxNumber" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PersonalTaxNumber">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PersonalTaxNumber"><span id="el_CrewPersonalDataForAdmin_PersonalTaxNumber">
<input type="@(crewPersonalDataForAdminEdit.PersonalTaxNumber.InputTextType)" name="x_PersonalTaxNumber" id="x_PersonalTaxNumber" data-table="CrewPersonalDataForAdmin" data-field="x_PersonalTaxNumber" value="@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.PersonalTaxNumber.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.PersonalTaxNumber.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.EditAttributes) aria-describedby="x_PersonalTaxNumber_help">
@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PersonalTaxNumber.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Visible) { // crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Visible (begin)
    <div id="r_PersonalTaxIssuingCountryID" @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PersonalTaxIssuingCountryID" for="x_PersonalTaxIssuingCountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PersonalTaxIssuingCountryID">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PersonalTaxIssuingCountryID"><span id="el_CrewPersonalDataForAdmin_PersonalTaxIssuingCountryID">
    <select
        id="x_PersonalTaxIssuingCountryID"
        name="x_PersonalTaxIssuingCountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_PersonalTaxIssuingCountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_PersonalTaxIssuingCountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.SelectOptionListHtml("x_PersonalTaxIssuingCountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_PersonalTaxIssuingCountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_PersonalTaxIssuingCountryID", selectId: "fCrewPersonalDataForAdminedit_x_PersonalTaxIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.PersonalTaxIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_PersonalTaxIssuingCountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_PersonalTaxIssuingCountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.PersonalTaxIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PersonalTaxImage.Visible) { // crewPersonalDataForAdminEdit.PersonalTaxImage.Visible (begin)
    <div id="r_PersonalTaxImage" @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PersonalTaxImage" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PersonalTaxImage">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PersonalTaxImage"><span id="el_CrewPersonalDataForAdmin_PersonalTaxImage">
<div id="fd_x_PersonalTaxImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_PersonalTaxImage"
        name="x_PersonalTaxImage"
        class="form-control ew-file-input"
        title="@(crewPersonalDataForAdminEdit.PersonalTaxImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_PersonalTaxImage"
        data-size="100"
        data-accept-file-types="@(crewPersonalDataForAdminEdit.PersonalTaxImage.AcceptFileTypes)"
        data-max-file-size="@(crewPersonalDataForAdminEdit.PersonalTaxImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewPersonalDataForAdminEdit.PersonalTaxImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_PersonalTaxImage_help"
        @Html.Raw((crewPersonalDataForAdminEdit.PersonalTaxImage.ReadOnly || crewPersonalDataForAdminEdit.PersonalTaxImage.Disabled) ? " disabled" : "")
        @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_PersonalTaxImage" id= "fn_x_PersonalTaxImage" value="@(crewPersonalDataForAdminEdit.PersonalTaxImage.Upload.FileName)">
<input type="hidden" name="fa_x_PersonalTaxImage" id= "fa_x_PersonalTaxImage" value="@(Post("fa_x_PersonalTaxImage") == "0" ? "0" : "1")">
<table id="ft_x_PersonalTaxImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PersonalTaxImage.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Status.Visible) { // crewPersonalDataForAdminEdit.Status.Visible (begin)
    <div id="r_Status" @Html.Raw(crewPersonalDataForAdminEdit.Status.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Status" for="x_Status" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Status">@Html.Raw(crewPersonalDataForAdminEdit.Status.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Status.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Status.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Status"><span id="el_CrewPersonalDataForAdmin_Status">
<input type="@(crewPersonalDataForAdminEdit.Status.InputTextType)" name="x_Status" id="x_Status" data-table="CrewPersonalDataForAdmin" data-field="x_Status" value="@Html.Raw(crewPersonalDataForAdminEdit.Status.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.Status.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.Status.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.Status.EditAttributes) aria-describedby="x_Status_help">
@Html.Raw(crewPersonalDataForAdminEdit.Status.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Status.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Status.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Reason.Visible) { // crewPersonalDataForAdminEdit.Reason.Visible (begin)
    <div id="r_Reason" @Html.Raw(crewPersonalDataForAdminEdit.Reason.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Reason" for="x_Reason" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Reason">@Html.Raw(crewPersonalDataForAdminEdit.Reason.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Reason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Reason.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Reason"><span id="el_CrewPersonalDataForAdmin_Reason">
<textarea data-table="CrewPersonalDataForAdmin" data-field="x_Reason" name="x_Reason" id="x_Reason" cols="50" rows="2" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.Reason.PlaceHolder))"@Html.Raw(crewPersonalDataForAdminEdit.Reason.EditAttributes) aria-describedby="x_Reason_help">@(crewPersonalDataForAdminEdit.Reason.EditValue)</textarea>
@Html.Raw(crewPersonalDataForAdminEdit.Reason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Reason.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Reason.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Weight.Visible) { // crewPersonalDataForAdminEdit.Weight.Visible (begin)
    <div id="r_Weight" @Html.Raw(crewPersonalDataForAdminEdit.Weight.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Weight" for="x_Weight" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Weight">@Html.Raw(crewPersonalDataForAdminEdit.Weight.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Weight.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Weight.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Weight"><span id="el_CrewPersonalDataForAdmin_Weight">
<input type="@(crewPersonalDataForAdminEdit.Weight.InputTextType)" name="x_Weight" id="x_Weight" data-table="CrewPersonalDataForAdmin" data-field="x_Weight" value="@Html.Raw(crewPersonalDataForAdminEdit.Weight.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.Weight.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.Weight.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.Weight.EditAttributes) aria-describedby="x_Weight_help">
@Html.Raw(crewPersonalDataForAdminEdit.Weight.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Weight.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Weight.Visible (end) *@
@if (crewPersonalDataForAdminEdit.Height.Visible) { // crewPersonalDataForAdminEdit.Height.Visible (begin)
    <div id="r_Height" @Html.Raw(crewPersonalDataForAdminEdit.Height.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_Height" for="x_Height" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_Height">@Html.Raw(crewPersonalDataForAdminEdit.Height.Caption)@Html.Raw(crewPersonalDataForAdminEdit.Height.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.Height.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_Height"><span id="el_CrewPersonalDataForAdmin_Height">
<input type="@(crewPersonalDataForAdminEdit.Height.InputTextType)" name="x_Height" id="x_Height" data-table="CrewPersonalDataForAdmin" data-field="x_Height" value="@Html.Raw(crewPersonalDataForAdminEdit.Height.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.Height.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.Height.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.Height.EditAttributes) aria-describedby="x_Height_help">
@Html.Raw(crewPersonalDataForAdminEdit.Height.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.Height.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.Height.Visible (end) *@
@if (crewPersonalDataForAdminEdit.CoverallSize.Visible) { // crewPersonalDataForAdminEdit.CoverallSize.Visible (begin)
    <div id="r_CoverallSize" @Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_CoverallSize" for="x_CoverallSize" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_CoverallSize">@Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.Caption)@Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_CoverallSize"><span id="el_CrewPersonalDataForAdmin_CoverallSize">
    <select
        id="x_CoverallSize"
        name="x_CoverallSize"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.CoverallSize.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_CoverallSize"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_CoverallSize"
        data-value-separator="@(crewPersonalDataForAdminEdit.CoverallSize.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.CoverallSize.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.EditAttributes)>
        @(crewPersonalDataForAdminEdit.CoverallSize.SelectOptionListHtml("x_CoverallSize"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_CoverallSize"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_CoverallSize", selectId: "fCrewPersonalDataForAdminedit_x_CoverallSize" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.CoverallSize?.lookupOptions.length) {
        options.data = { id: "x_CoverallSize", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_CoverallSize", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.CoverallSize.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.CoverallSize.Visible (end) *@
@if (crewPersonalDataForAdminEdit.SafetyShoesSize.Visible) { // crewPersonalDataForAdminEdit.SafetyShoesSize.Visible (begin)
    <div id="r_SafetyShoesSize" @Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_SafetyShoesSize" for="x_SafetyShoesSize" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_SafetyShoesSize">@Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.Caption)@Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_SafetyShoesSize"><span id="el_CrewPersonalDataForAdmin_SafetyShoesSize">
    <select
        id="x_SafetyShoesSize"
        name="x_SafetyShoesSize"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.SafetyShoesSize.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_SafetyShoesSize"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_SafetyShoesSize"
        data-value-separator="@(crewPersonalDataForAdminEdit.SafetyShoesSize.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.SafetyShoesSize.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.EditAttributes)>
        @(crewPersonalDataForAdminEdit.SafetyShoesSize.SelectOptionListHtml("x_SafetyShoesSize"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_SafetyShoesSize", selectId: "fCrewPersonalDataForAdminedit_x_SafetyShoesSize" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.SafetyShoesSize?.lookupOptions.length) {
        options.data = { id: "x_SafetyShoesSize", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_SafetyShoesSize", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.SafetyShoesSize.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.SafetyShoesSize.Visible (end) *@
@if (crewPersonalDataForAdminEdit.ShirtSize.Visible) { // crewPersonalDataForAdminEdit.ShirtSize.Visible (begin)
    <div id="r_ShirtSize" @Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_ShirtSize" for="x_ShirtSize" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_ShirtSize">@Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.Caption)@Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_ShirtSize"><span id="el_CrewPersonalDataForAdmin_ShirtSize">
    <select
        id="x_ShirtSize"
        name="x_ShirtSize"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.ShirtSize.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_ShirtSize"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_ShirtSize"
        data-value-separator="@(crewPersonalDataForAdminEdit.ShirtSize.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.ShirtSize.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.EditAttributes)>
        @(crewPersonalDataForAdminEdit.ShirtSize.SelectOptionListHtml("x_ShirtSize"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_ShirtSize"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_ShirtSize", selectId: "fCrewPersonalDataForAdminedit_x_ShirtSize" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.ShirtSize?.lookupOptions.length) {
        options.data = { id: "x_ShirtSize", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_ShirtSize", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.ShirtSize.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.ShirtSize.Visible (end) *@
@if (crewPersonalDataForAdminEdit.TrousersSize.Visible) { // crewPersonalDataForAdminEdit.TrousersSize.Visible (begin)
    <div id="r_TrousersSize" @Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_TrousersSize" for="x_TrousersSize" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_TrousersSize">@Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.Caption)@Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_TrousersSize"><span id="el_CrewPersonalDataForAdmin_TrousersSize">
    <select
        id="x_TrousersSize"
        name="x_TrousersSize"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.TrousersSize.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_TrousersSize"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_TrousersSize"
        data-value-separator="@(crewPersonalDataForAdminEdit.TrousersSize.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.TrousersSize.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.EditAttributes)>
        @(crewPersonalDataForAdminEdit.TrousersSize.SelectOptionListHtml("x_TrousersSize"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_TrousersSize"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_TrousersSize", selectId: "fCrewPersonalDataForAdminedit_x_TrousersSize" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.TrousersSize?.lookupOptions.length) {
        options.data = { id: "x_TrousersSize", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_TrousersSize", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.TrousersSize.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.TrousersSize.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeFullName.Visible) { // crewPersonalDataForAdminEdit.NomineeFullName.Visible (begin)
    <div id="r_NomineeFullName" @Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeFullName" for="x_NomineeFullName" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeFullName">@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeFullName"><span id="el_CrewPersonalDataForAdmin_NomineeFullName">
<input type="@(crewPersonalDataForAdminEdit.NomineeFullName.InputTextType)" name="x_NomineeFullName" id="x_NomineeFullName" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeFullName" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeFullName.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeFullName.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.EditAttributes) aria-describedby="x_NomineeFullName_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeFullName.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeRelationship.Visible) { // crewPersonalDataForAdminEdit.NomineeRelationship.Visible (begin)
    <div id="r_NomineeRelationship" @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeRelationship" for="x_NomineeRelationship" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeRelationship">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeRelationship"><span id="el_CrewPersonalDataForAdmin_NomineeRelationship">
<input type="@(crewPersonalDataForAdminEdit.NomineeRelationship.InputTextType)" name="x_NomineeRelationship" id="x_NomineeRelationship" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeRelationship" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeRelationship.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeRelationship.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.EditAttributes) aria-describedby="x_NomineeRelationship_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeRelationship.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeGender.Visible) { // crewPersonalDataForAdminEdit.NomineeGender.Visible (begin)
    <div id="r_NomineeGender" @Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeGender" for="x_NomineeGender" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeGender">@Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeGender"><span id="el_CrewPersonalDataForAdmin_NomineeGender">
    <select
        id="x_NomineeGender"
        name="x_NomineeGender"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeGender.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeGender"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeGender"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeGender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeGender.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeGender.SelectOptionListHtml("x_NomineeGender"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeGender", selectId: "fCrewPersonalDataForAdminedit_x_NomineeGender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeGender?.lookupOptions.length) {
        options.data = { id: "x_NomineeGender", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeGender", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeGender.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeGender.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Visible) { // crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Visible (begin)
    <div id="r_NomineeNationality_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeNationality_CountryID" for="x_NomineeNationality_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeNationality_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeNationality_CountryID"><span id="el_CrewPersonalDataForAdmin_NomineeNationality_CountryID">
    <select
        id="x_NomineeNationality_CountryID"
        name="x_NomineeNationality_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeNationality_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeNationality_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.SelectOptionListHtml("x_NomineeNationality_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_NomineeNationality_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeNationality_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_NomineeNationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeNationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeNationality_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeNationality_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeNationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressDetail.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressDetail.Visible (begin)
    <div id="r_NomineeAddressDetail" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressDetail" for="x_NomineeAddressDetail" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressDetail">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressDetail"><span id="el_CrewPersonalDataForAdmin_NomineeAddressDetail">
<textarea data-table="CrewPersonalDataForAdmin" data-field="x_NomineeAddressDetail" name="x_NomineeAddressDetail" id="x_NomineeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressDetail.PlaceHolder))"@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.EditAttributes) aria-describedby="x_NomineeAddressDetail_help">@(crewPersonalDataForAdminEdit.NomineeAddressDetail.EditValue)</textarea>
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressDetail.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressCity.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressCity.Visible (begin)
    <div id="r_NomineeAddressCity" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressCity" for="x_NomineeAddressCity" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressCity">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressCity"><span id="el_CrewPersonalDataForAdmin_NomineeAddressCity">
<input type="@(crewPersonalDataForAdminEdit.NomineeAddressCity.InputTextType)" name="x_NomineeAddressCity" id="x_NomineeAddressCity" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeAddressCity" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressCity.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeAddressCity.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.EditAttributes) aria-describedby="x_NomineeAddressCity_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressCity.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressPostCode.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressPostCode.Visible (begin)
    <div id="r_NomineeAddressPostCode" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressPostCode" for="x_NomineeAddressPostCode" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressPostCode">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressPostCode"><span id="el_CrewPersonalDataForAdmin_NomineeAddressPostCode">
<input type="@(crewPersonalDataForAdminEdit.NomineeAddressPostCode.InputTextType)" name="x_NomineeAddressPostCode" id="x_NomineeAddressPostCode" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeAddressPostCode" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressPostCode.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeAddressPostCode.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.EditAttributes) aria-describedby="x_NomineeAddressPostCode_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressPostCode.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressCountryID.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressCountryID.Visible (begin)
    <div id="r_NomineeAddressCountryID" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressCountryID" for="x_NomineeAddressCountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressCountryID">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressCountryID"><span id="el_CrewPersonalDataForAdmin_NomineeAddressCountryID">
    <select
        id="x_NomineeAddressCountryID"
        name="x_NomineeAddressCountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeAddressCountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeAddressCountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeAddressCountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressCountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeAddressCountryID.SelectOptionListHtml("x_NomineeAddressCountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_NomineeAddressCountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeAddressCountryID", selectId: "fCrewPersonalDataForAdminedit_x_NomineeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressCountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeAddressCountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressCountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Visible (begin)
    <div id="r_NomineeAddressHomeTel" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressHomeTel" for="x_NomineeAddressHomeTel" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressHomeTel">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressHomeTel"><span id="el_CrewPersonalDataForAdmin_NomineeAddressHomeTel">
<input type="@(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.InputTextType)" name="x_NomineeAddressHomeTel" id="x_NomineeAddressHomeTel" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeAddressHomeTel" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.EditAttributes) aria-describedby="x_NomineeAddressHomeTel_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeEmail.Visible) { // crewPersonalDataForAdminEdit.NomineeEmail.Visible (begin)
    <div id="r_NomineeEmail" @Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeEmail" for="x_NomineeEmail" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeEmail">@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeEmail"><span id="el_CrewPersonalDataForAdmin_NomineeEmail">
<input type="@(crewPersonalDataForAdminEdit.NomineeEmail.InputTextType)" name="x_NomineeEmail" id="x_NomineeEmail" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeEmail" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeEmail.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeEmail.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.EditAttributes) aria-describedby="x_NomineeEmail_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeEmail.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeMobileNumber.Visible) { // crewPersonalDataForAdminEdit.NomineeMobileNumber.Visible (begin)
    <div id="r_NomineeMobileNumber" @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeMobileNumber" for="x_NomineeMobileNumber" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeMobileNumber">@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeMobileNumber"><span id="el_CrewPersonalDataForAdmin_NomineeMobileNumber">
<input type="@(crewPersonalDataForAdminEdit.NomineeMobileNumber.InputTextType)" name="x_NomineeMobileNumber" id="x_NomineeMobileNumber" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeMobileNumber" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeMobileNumber.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeMobileNumber.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.EditAttributes) aria-describedby="x_NomineeMobileNumber_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeMobileNumber.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NSSF_Health_Number.Visible) { // crewPersonalDataForAdminEdit.NSSF_Health_Number.Visible (begin)
    <div id="r_NSSF_Health_Number" @Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NSSF_Health_Number" for="x_NSSF_Health_Number" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NSSF_Health_Number">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NSSF_Health_Number"><span id="el_CrewPersonalDataForAdmin_NSSF_Health_Number">
<input type="@(crewPersonalDataForAdminEdit.NSSF_Health_Number.InputTextType)" name="x_NSSF_Health_Number" id="x_NSSF_Health_Number" data-table="CrewPersonalDataForAdmin" data-field="x_NSSF_Health_Number" value="@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NSSF_Health_Number.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NSSF_Health_Number.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.EditAttributes) aria-describedby="x_NSSF_Health_Number_help">
@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NSSF_Health_Number.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Visible) { // crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Visible (begin)
    <div id="r_NSSF_Occupation_Number" @Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NSSF_Occupation_Number" for="x_NSSF_Occupation_Number" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NSSF_Occupation_Number">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NSSF_Occupation_Number"><span id="el_CrewPersonalDataForAdmin_NSSF_Occupation_Number">
<input type="@(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.InputTextType)" name="x_NSSF_Occupation_Number" id="x_NSSF_Occupation_Number" data-table="CrewPersonalDataForAdmin" data-field="x_NSSF_Occupation_Number" value="@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.EditAttributes) aria-describedby="x_NSSF_Occupation_Number_help">
@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Visible) { // crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Visible (begin)
    <div id="r_NomineeRelationshipSelect" @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeRelationshipSelect" for="x_NomineeRelationshipSelect" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeRelationshipSelect">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeRelationshipSelect"><span id="el_CrewPersonalDataForAdmin_NomineeRelationshipSelect">
    <select
        id="x_NomineeRelationshipSelect"
        name="x_NomineeRelationshipSelect"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeRelationshipSelect"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeRelationshipSelect"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.SelectOptionListHtml("x_NomineeRelationshipSelect"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeRelationshipSelect", selectId: "fCrewPersonalDataForAdminedit_x_NomineeRelationshipSelect" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeRelationshipSelect?.lookupOptions.length) {
        options.data = { id: "x_NomineeRelationshipSelect", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeRelationshipSelect", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeRelationshipSelect.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Visible) { // crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Visible (begin)
    <div id="r_NomineeRelationshipDetail" @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeRelationshipDetail" for="x_NomineeRelationshipDetail" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeRelationshipDetail">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeRelationshipDetail"><span id="el_CrewPersonalDataForAdmin_NomineeRelationshipDetail">
<input type="@(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.InputTextType)" name="x_NomineeRelationshipDetail" id="x_NomineeRelationshipDetail" data-table="CrewPersonalDataForAdmin" data-field="x_NomineeRelationshipDetail" value="@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.EditAttributes) aria-describedby="x_NomineeRelationshipDetail_help">
@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Visible (end) *@
@if (crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Visible) { // crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Visible (begin)
    <div id="r_MobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_MobileNumberCode_CountryID" for="x_MobileNumberCode_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_MobileNumberCode_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_MobileNumberCode_CountryID"><span id="el_CrewPersonalDataForAdmin_MobileNumberCode_CountryID">
    <select
        id="x_MobileNumberCode_CountryID"
        name="x_MobileNumberCode_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_MobileNumberCode_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_MobileNumberCode_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.SelectOptionListHtml("x_MobileNumberCode_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_MobileNumberCode_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_MobileNumberCode_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_MobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.MobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_MobileNumberCode_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_MobileNumberCode_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.MobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.MobileNumberCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_PrimaryAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_PrimaryAddressHomeTelCode_CountryID" for="x_PrimaryAddressHomeTelCode_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_PrimaryAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_PrimaryAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdmin_PrimaryAddressHomeTelCode_CountryID">
    <select
        id="x_PrimaryAddressHomeTelCode_CountryID"
        name="x_PrimaryAddressHomeTelCode_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_PrimaryAddressHomeTelCode_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_PrimaryAddressHomeTelCode_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.SelectOptionListHtml("x_PrimaryAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_PrimaryAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_PrimaryAddressHomeTelCode_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_PrimaryAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.PrimaryAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.PrimaryAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.PrimaryAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_AlternativeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_AlternativeAddressHomeTelCode_CountryID" for="x_AlternativeAddressHomeTelCode_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_AlternativeAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_AlternativeAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdmin_AlternativeAddressHomeTelCode_CountryID">
    <select
        id="x_AlternativeAddressHomeTelCode_CountryID"
        name="x_AlternativeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_AlternativeAddressHomeTelCode_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_AlternativeAddressHomeTelCode_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_AlternativeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_AlternativeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_AlternativeAddressHomeTelCode_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_AlternativeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.AlternativeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.AlternativeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.AlternativeAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Visible) { // crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_NomineeAddressHomeTelCode_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeAddressHomeTelCode_CountryID" for="x_NomineeAddressHomeTelCode_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeAddressHomeTelCode_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeAddressHomeTelCode_CountryID"><span id="el_CrewPersonalDataForAdmin_NomineeAddressHomeTelCode_CountryID">
    <select
        id="x_NomineeAddressHomeTelCode_CountryID"
        name="x_NomineeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeAddressHomeTelCode_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeAddressHomeTelCode_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_NomineeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_NomineeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeAddressHomeTelCode_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_NomineeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeAddressHomeTelCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Visible) { // crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Visible (begin)
    <div id="r_NomineeMobileNumberCode_CountryID" @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_NomineeMobileNumberCode_CountryID" for="x_NomineeMobileNumberCode_CountryID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_NomineeMobileNumberCode_CountryID">@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_NomineeMobileNumberCode_CountryID"><span id="el_CrewPersonalDataForAdmin_NomineeMobileNumberCode_CountryID">
    <select
        id="x_NomineeMobileNumberCode_CountryID"
        name="x_NomineeMobileNumberCode_CountryID"
        class="form-select ew-select@(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fCrewPersonalDataForAdminedit_x_NomineeMobileNumberCode_CountryID"
        data-table="CrewPersonalDataForAdmin"
        data-field="x_NomineeMobileNumberCode_CountryID"
        data-value-separator="@(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.EditAttributes)>
        @(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.SelectOptionListHtml("x_NomineeMobileNumberCode_CountryID"))
    </select>
    @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Lookup.GetParamTag(crewPersonalDataForAdminEdit, "p_x_NomineeMobileNumberCode_CountryID"))
<script>
loadjs.ready("fCrewPersonalDataForAdminedit", function() {
    var options = { name: "x_NomineeMobileNumberCode_CountryID", selectId: "fCrewPersonalDataForAdminedit_x_NomineeMobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewPersonalDataForAdminedit.lists.NomineeMobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeMobileNumberCode_CountryID", form: "fCrewPersonalDataForAdminedit" };
    } else {
        options.ajax = { id: "x_NomineeMobileNumberCode_CountryID", form: "fCrewPersonalDataForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewPersonalDataForAdmin.fields.NomineeMobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.NomineeMobileNumberCode_CountryID.Visible (end) *@
@if (crewPersonalDataForAdminEdit.MTManningAgentID.Visible) { // crewPersonalDataForAdminEdit.MTManningAgentID.Visible (begin)
    <div id="r_MTManningAgentID" @Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.RowAttributes)>
        <label id="elh_CrewPersonalDataForAdmin_MTManningAgentID" for="x_MTManningAgentID" class="@(crewPersonalDataForAdminEdit.LeftColumnClass)"><template id="tpc_CrewPersonalDataForAdmin_MTManningAgentID">@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.Caption)@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewPersonalDataForAdminEdit.RightColumnClass)"><div @Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.CellAttributes)>
<template id="tpx_CrewPersonalDataForAdmin_MTManningAgentID"><span id="el_CrewPersonalDataForAdmin_MTManningAgentID">
<input type="@(crewPersonalDataForAdminEdit.MTManningAgentID.InputTextType)" name="x_MTManningAgentID" id="x_MTManningAgentID" data-table="CrewPersonalDataForAdmin" data-field="x_MTManningAgentID" value="@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.MTManningAgentID.PlaceHolder))" data-format-pattern="@(crewPersonalDataForAdminEdit.MTManningAgentID.FormatPattern)"@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.EditAttributes) aria-describedby="x_MTManningAgentID_help">
@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewPersonalDataForAdminEdit.MTManningAgentID.Visible (end) *@
</div><!-- /page* -->
    <input type="hidden" data-table="CrewPersonalDataForAdmin" data-field="x_ID" data-hidden="1" name="x_ID" id="x_ID" value="@Html.Raw(HtmlEncode(crewPersonalDataForAdminEdit.ID.CurrentValue))">
<div id="tpd_CrewPersonalDataForAdminedit" class="ew-custom-template"></div>
<template id="tpm_CrewPersonalDataForAdminedit">
<div id="ct_crewPersonalDataForAdminEdit"><ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminEdit")">
            @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
        </a>     
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminAdd")">
            @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminEdit")">
            @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
        </a>
    </li>
</ul>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Basic Information" : "Informasi Dasar")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_RequiredPhoto" class="mb-2 row">
                <label for="x_RequiredPhoto" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.RequiredPhoto.Caption) @(CurrentLanguage == "en-US" ? "(jpg/jpeg/png max 2 MB)" : "(jpg/jpeg/png maks 2 MB)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_RequiredPhoto"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_VisaPhoto" class="mb-2 row">
                <label for="x_VisaPhoto" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.VisaPhoto.Caption) @(CurrentLanguage == "en-US" ? "(jpg/jpeg/png max 2 MB)" : "(jpg/jpeg/png maks 2 MB)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_VisaPhoto"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_IndividualCodeNumber" class="mb-2 row">
                <label for="x_IndividualCodeNumber" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.IndividualCodeNumber.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_IndividualCodeNumber"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r__Email" class="mb-2 row">
                <label for="x__Email" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit._Email.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin__Email"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_MobileNumber" class="mb-2 row">
                <label for="x_MobileNumber" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.MobileNumber.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div class="row">
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_MobileNumberCode_CountryID"></slot>
                    </div>
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_MobileNumber"></slot>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_FullName" class="mb-2 row">
                <label for="x_FullName" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.FullName.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_FullName"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_NSSF_Health_Number" class="mb-2 row">
                <label for="x_NSSF_Health_Number" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Health_Number.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NSSF_Health_Number"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_NSSF_Occupation_Number" class="mb-2 row">
                <label for="x_NSSF_Occupation_Number" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NSSF_Occupation_Number.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NSSF_Occupation_Number"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_DateOfBirth" class="mb-2 row">
                <label for="x_DateOfBirth" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.DateOfBirth.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_DateOfBirth"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_CountryOfOrigin_CountryID" class="mb-2 row">
                <label for="x_CountryOfOrigin_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.CountryOfOrigin_CountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_CountryOfOrigin_CountryID"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_CityOfBirth" class="mb-2 row">
                <label for="x_CityOfBirth" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.CityOfBirth.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_CityOfBirth"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_Nationality_CountryID" class="mb-2 row">
                <label for="x_Nationality_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Nationality_CountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Nationality_CountryID"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_Gender" class="mb-2 row">
                <label for="x_Gender" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Gender.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Gender"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_MaritalStatus" class="mb-2 row">
                <label for="x_MaritalStatus" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.MaritalStatus.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_MaritalStatus"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_ReligionID" class="mb-2 row">
                <label for="x_ReligionID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.ReligionID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_ReligionID"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_BloodType" class="mb-2 row">
                <label for="x_BloodType" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.BloodType.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_BloodType"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_Status" class="mb-2 row">
                <label for="x_Status" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Status.Caption)</label>
                @if (IsAdmin())
                {
                    <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Status"></slot></div>
                }
                else 
                {
                    <div>
                        @{
                            if (crewPersonalDataForAdminEdit.Status.EditValue == null || string.IsNullOrEmpty(crewPersonalDataForAdminEdit.Status.EditValue.ToString()))
                            {
                                @Html.Raw("&nbsp;");
                            }
                            else
                            {
                                @Html.Raw(crewPersonalDataForAdminEdit.Status.EditValue.ToString());
                            }
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_Reason" class="mb-2 row">
                <label for="x_Reason" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Reason.Caption)</label>
                @if (IsAdmin())
                {
                    <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Reason"></slot></div>
                }
                else 
                {
                    <div>
                        @{
                            if (crewPersonalDataForAdminEdit.Reason.EditValue == null || string.IsNullOrEmpty(crewPersonalDataForAdminEdit.Reason.EditValue.ToString()))
                            {
                                @Html.Raw("&nbsp;");
                            }
                            else
                            {
                                @Html.Raw(crewPersonalDataForAdminEdit.Reason.EditValue.ToString());
                            }
                        }
                    </div>
                }
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_MTManningAgentID" class="mb-2 row">
                <label for="x_MTManningAgentID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                @if (IsAdmin())
                {
                    <div>
                        <span id="selectedManningAgentID" class="d-none">@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.EditValue)</span>
                        <span id="el_CrewPersonalDataForAdmin_MTManningAgentID">
                            <select
                                id="x_MTManningAgentID"
                                name="x_MTManningAgentID"
                                class="form-select ew-select@(crewPersonalDataForAdminEdit.MTManningAgentID.IsInvalidClass)"
                                data-select2-id="fCrewPersonalDataForAdminedit_x_MTManningAgentID"
                                data-table="CrewPersonalDataForAdmin"
                                data-field="x_MTManningAgentID"
                                data-value-separator="@(crewPersonalDataForAdminEdit.MTManningAgentID.DisplayValueSeparatorAttribute)"
                                data-placeholder="@(HtmlEncode(crewPersonalDataForAdminEdit.MTManningAgentID.PlaceHolder))"
                                @Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.EditAttributes)>
                            </select>
                            @Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.GetCustomMessage)
                            <div class="invalid-feedback">@Html.Raw(crewPersonalDataForAdminEdit.MTManningAgentID.GetErrorMessage())</div>
                        </span>
                    </div>
                }
                else 
                {
                    <div>
                        @{
                            string mtManningAgentID = (crewPersonalDataForAdminEdit.MTManningAgentID.EditValue != null) ? crewPersonalDataForAdminEdit.MTManningAgentID.EditValue.ToString() : "";
                            object manningAgentNameObject = (mtManningAgentID != "") ? ExecuteScalar("SELECT Name FROM MTManningAgent WHERE ID = '" + mtManningAgentID + "';") : null;
                        }
                        @if (manningAgentNameObject != null)
                        {
                            @Html.Raw(manningAgentNameObject.ToString());
                        }
                        else
                        {
                            @Html.Raw("&nbsp;");
                        }
                    </div>
                }
            </div>
        </div>
        <div class="col-sm-4">
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Address Information" : "Informasi Alamat")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6" id="permanentAddress">
            <h6 class="fw-bold mt-2">
                @(CurrentLanguage == "en-US" ? "1. Permanent/Primary Address" : "1. Alamat Permanen/Utama")
            </h6>
            <div id="r_PrimaryAddressDetail" class="mb-2 row">
                <label for="x_PrimaryAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressDetail.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressDetail"></slot></div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressCity" class="mb-2 row">
                        <label for="x_PrimaryAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCity.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressCity"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressPostCode" class="mb-2 row">
                        <label for="x_PrimaryAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressPostCode.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressPostCode"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressCountryID" class="mb-2 row">
                        <label for="x_PrimaryAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressCountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressCountryID"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressState" class="mb-2 row">
                        <label for="x_PrimaryAddressState" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressState.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressState"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressHomeTel" class="mb-2 row">
                        <label for="x_PrimaryAddressHomeTel" class="col-form-label">
                            @Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressHomeTel.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")<i class="fa-solid fa-asterisk ew-required"></i>
                        </label>
                        <div class="row">
                            <div class="col-sm-6">
                                <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressHomeTelCode_CountryID"></slot>
                            </div>
                            <div class="col-sm-6">
                                <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressHomeTel"></slot>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_PrimaryAddressNearestAirport" class="mb-2 row">
                        <label for="x_PrimaryAddressNearestAirport" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PrimaryAddressNearestAirport.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PrimaryAddressNearestAirport"></slot></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6" id="temporaryAddress">
            <h6 class="fw-bold mt-2">
                @(CurrentLanguage == "en-US" ? "2. Temporary/Alternative Address" : "2. Alamat Sementara/Alternatif")
            </h6>
            <div id="r_AlternativeAddressDetail" class="mb-2 row">
                <label for="x_AlternativeAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressDetail.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressDetail"></slot></div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressCity" class="mb-2 row">
                        <label for="x_AlternativeAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCity.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressCity"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressPostCode" class="mb-2 row">
                        <label for="x_AlternativeAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressPostCode.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressPostCode"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressCountryID" class="mb-2 row">
                        <label for="x_AlternativeAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressCountryID.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressCountryID"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressState" class="mb-2 row">
                        <label for="x_AlternativeAddressState" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressState.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressState"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_AlternativeAddressHomeTel" class="mb-2 row">
                        <label for="x_AlternativeAddressHomeTel" class="col-form-label">
                            @Html.Raw(crewPersonalDataForAdminEdit.AlternativeAddressHomeTel.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")
                        </label>
                        <div class="row">
                            <div class="col-sm-6">
                                <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressHomeTelCode_CountryID"></slot>
                            </div>
                            <div class="col-sm-6">
                                <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AlternativeAddressHomeTel"></slot>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <div class="row">
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Other Informations" : "Informasi Lainnya")
            </h5>
            <div class="row">
                <div id="r_RankAppliedFor_RankID" class="mb-2 row">
                    <div class="alert alert-danger" id="rank-alert" role="alert" style="margin-left: 5px;padding: 0.75rem 0.75rem;">
                    </div>
                    <label for="x_RankAppliedFor_RankID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.RankAppliedFor_RankID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                    <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_RankAppliedFor_RankID"></slot></div>
                </div>
                <div id="r_WillAcceptLowRank" class="mb-2 row">
                    <label for="x_WillAcceptLowRank" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.WillAcceptLowRank.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                    <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_WillAcceptLowRank"></slot></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div id="r_AvailableFrom" class="mb-2 row">
                        <label for="x_AvailableFrom" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AvailableFrom.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AvailableFrom"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_AvailableUntil" class="mb-2 row">
                        <label for="x_AvailableUntil" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.AvailableUntil.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_AvailableUntil"></slot></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Measurement Information" : "Informasi Ukuran")
            </h5>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_Weight" class="mb-2 row">
                        <label for="x_Weight" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Weight.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Weight"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_Height" class="mb-2 row">
                        <label for="x_Height" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.Height.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_Height"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_CoverallSize" class="mb-2 row">
                        <label for="x_CoverallSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.CoverallSize.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_CoverallSize"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_SafetyShoesSize" class="mb-2 row">
                        <label for="x_SafetyShoesSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.SafetyShoesSize.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_SafetyShoesSize"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_ShirtSize" class="mb-2 row">
                        <label for="x_ShirtSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.ShirtSize.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_ShirtSize"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_TrousersSize" class="mb-2 row">
                        <label for="x_TrousersSize" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.TrousersSize.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                        <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_TrousersSize"></slot></div>
                    </div>
                </div>
            </div>
        </div> 
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Next of KIN" : "Keluarga Terdekat")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeFullName" class="mb-2 row">
                <label for="x_NomineeFullName" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeFullName.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeFullName"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeGender" class="mb-2 row">
                <label for="x_NomineeGender" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeGender.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeGender"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeRelationship" class="mb-2 row d-none">
                <label for="x_NomineeRelationship" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationship.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeRelationship"></slot></div>
            </div>
            <div id="r_NomineeRelationshipSelect" class="mb-2 row">
                <label for="x_NomineeRelationshipSelect" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipSelect.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeRelationshipSelect"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeRelationshipDetail" class="mb-2 row">
                <label for="x_NomineeRelationshipDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeRelationshipDetail.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeRelationshipDetail"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeNationality_CountryID" class="mb-2 row">
                <label for="x_NomineeNationality_CountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeNationality_CountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeNationality_CountryID"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressCity" class="mb-2 row">
                <label for="x_NomineeAddressCity" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCity.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressCity"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeAddressPostCode" class="mb-2 row">
                <label for="x_NomineeAddressPostCode" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressPostCode.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressPostCode"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressCountryID" class="mb-2 row">
                <label for="x_NomineeAddressCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressCountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressCountryID"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
             <div id="r_NomineeEmail" class="mb-2 row">
                <label for="x_NomineeEmail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeEmail.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeEmail"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_NomineeAddressHomeTel" class="mb-2 row">
                <label for="x_NomineeAddressHomeTel" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressHomeTel.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div class="row">
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressHomeTelCode_CountryID"></slot>
                    </div>
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressHomeTel"></slot>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_NomineeMobileNumber" class="mb-2 row">
                <label for="x_NomineeMobileNumber" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.NomineeMobileNumber.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div class="row">
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeMobileNumberCode_CountryID"></slot>
                    </div>
                    <div class="col-sm-6">
                        <slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeMobileNumber"></slot>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
             <div id="r_NomineeAddressDetail" class="mb-2 row">
                <label for="x_NomineeAddressDetail" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.NomineeAddressDetail.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_NomineeAddressDetail"></slot></div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <div class="row">
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "KTP" : "KTP")
            </h5>
            <div id="r_SocialSecurityNumber" class="mb-2 row">
                <label for="x_SocialSecurityNumber" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityNumber.Caption) @(CurrentLanguage == "en-US" ? "(16 Digits)" : "(16 Angka)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_SocialSecurityNumber"></slot></div>
            </div>
            <div id="r_SocialSecurityIssuingCountryID" class="mb-2 row">
                <label for="x_SocialSecurityIssuingCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityIssuingCountryID.Caption)<i class="fa-solid fa-asterisk ew-required"></i></label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_SocialSecurityIssuingCountryID"></slot></div>
            </div>
            <div id="r_SocialSecurityImage" class="mb-2 row">
                <label for="x_SocialSecurityImage" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.SocialSecurityImage.Caption) @(CurrentLanguage == "en-US" ? "(jpg/jpeg/png/pdf max 2 MB)" : "(jpg/jpeg/png/pdf maks 2 MB)")<i class="fa-solid fa-asterisk ew-required"></i>
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_SocialSecurityImage"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <h5 class="fw-bold mb-3">
                @(CurrentLanguage == "en-US" ? "Personal Tax (Only If Requested)" : "Pajak Pribadi (Hanya Jika Diminta)")
            </h5>
            <div id="r_PersonalTaxNumber" class="mb-2 row">
                <label for="x_PersonalTaxNumber" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxNumber.Caption) @(CurrentLanguage == "en-US" ? "(15-16 Digits)" : "(15-16 Angka)")
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PersonalTaxNumber"></slot></div>
            </div>
            <div id="r_PersonalTaxIssuingCountryID" class="mb-2 row">
                <label for="x_PersonalTaxIssuingCountryID" class="col-form-label">@Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxIssuingCountryID.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PersonalTaxIssuingCountryID"></slot></div>
            </div>
            <div id="r_PersonalTaxImage" class="mb-2 row">
                <label for="x_PersonalTaxImage" class="col-form-label">
                    @Html.Raw(crewPersonalDataForAdminEdit.PersonalTaxImage.Caption) @(CurrentLanguage == "en-US" ? "(jpg/jpeg/png/pdf max 2 MB)" : "(jpg/jpeg/png/pdf maks 2 MB)")
                </label>
                <div><slot class="ew-slot" name="tpx_CrewPersonalDataForAdmin_PersonalTaxImage"></slot></div>
            </div>
        </div> 
    </div>
</fieldset>
<div id="proceed-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="proceed-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="proceed-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Warning" : "Peringatan")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p> 
                    @{
                        if (CurrentLanguage == "en-US")
                        {
                            <span>There are error(s) in this tab.</span><br/>
                            <span>If you choose to Proceed, any unsaved data will be lost.</span><br/>
                            <span>Do you want to Proceed?</span>
                        }
                        else
                        {
                            <span>Masih ada error di tab ini.</span><br/>
                            <span>Jika Anda memilih Lanjutkan, data yang belum disimpan akan hilang.</span><br/>
                            <span>Apakah Anda ingin melanjutkan?</span>
                        }
                    }
                </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-proceed" type="button">
                    @(CurrentLanguage == "en-US" ? "Proceed" : "Lanjutkan")
                </button>
                <button class="btn btn-default ew-btn" id="btn-proceed-cancel" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="loading-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-md">
        <div class="modal-content">
            <div class="modal-body">
                <p class="text-center mb-0">
                    @(CurrentLanguage == "en-US" ? "Saving..." : "Menyimpan...")
                </p>
            </div>
        </div>
    </div>
</div>
<div id="seafarer-input-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="seafarer-input-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="seafarer-input-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Input Seafarer ID And Crew Agency" : "Masukkan Seafarer ID Dan Agensi Kru")
                </h5>
            </div>
            <div class="modal-body">
                <form id="seafarer-input" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_SeafarerID" class="row">
                        <label for="x_SeafarerID" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Seafarer ID" : "Seafarer ID")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_SeafarerID">
                                    <input type="text" id="x_SeafarerID" value="" size="30" maxlength="20" placeholder="Seafarer ID" class="form-control">
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_modal_MTManningAgentID" class="row">
                        <label for="x_modal_MTManningAgentID" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Manning Agent" : "Agensi Kru")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_modal_MTManningAgentID">
                                    <select
                                        id="x_modal_MTManningAgentID"
                                        name="x_modal_MTManningAgentID"
                                        class="form-select ew-select select2-hidden-accessible"
                                        data-select2-id="seafarer-input_x_modal_MTManningAgentID"
                                        data-value-separator=""
                                        data-placeholder="@(CurrentLanguage == "en-US" ? "Manning Agent" : "Agensi Kru")">
                                    </select>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-seafarer-input" type="button">
                    @(CurrentLanguage == "en-US" ? "Save" : "Simpan")
                </button>
            </div>
        </div>
    </div>
</div></div>
</template>
@{ crewPersonalDataForAdminEdit.CloseRecordset(); }
@Html.Raw(crewPersonalDataForAdminEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(crewPersonalDataForAdminEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fCrewPersonalDataForAdminedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fCrewPersonalDataForAdminedit" data-href="@AppPath(crewPersonalDataForAdminEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(crewPersonalDataForAdminEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewPersonalDataForAdminEdit.Rows)) };
    ew.applyTemplate("tpd_CrewPersonalDataForAdminedit", "tpm_CrewPersonalDataForAdminedit", "CrewPersonalDataForAdminedit", "@(crewPersonalDataForAdminEdit.Export)", "CrewPersonalDataForAdmin", ew.templateData.rows[0], @(crewPersonalDataForAdminEdit.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewPersonalDataForAdminEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("CrewPersonalDataForAdmin");
});
</script>
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // Create a new URLSearchParams object based on the current URL's search parameters
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    // get currently edited crew id from current url
    const currentlyEditedCrewID = parseInt(currentUrlObject.pathname.split('/').pop()); 
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const tableName = "CrewPersonalDataForAdmin";
    const pageType = "edit";
    const pageTypeCapital = "Edit";
    const formID = `f${tableName}${pageType}`;
    const saveAsDraftUrl = `${parentUrl}${tableName}${pageTypeCapital}/${currentlyEditedCrewID}`;
    let isChangeTabApproved = false;

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        // Check if the href contains current page's url
        if (window.location.href.includes(href)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the href contains "Edit" or "Add"
        if (href.includes("Edit")) {
            const newHref = href + "/" + currentlyEditedCrewID; // Add "/" and the currently edited crew ID to the href
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("Add")) {
            const newHref = href + "?crewID=" + currentlyEditedCrewID; // Add "?crewID=" and the currently edited crew ID to the href
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });
    const successMessage = urlQueryParams.get('successMessage');
    if (successMessage !== null) {
        const decodedSuccessMessage = decodeURIComponent(successMessage);
        ew.showToast(decodedSuccessMessage, 'success');
        urlQueryParams.delete('successMessage');
        currentUrlObject.search = urlQueryParams.toString();
        history.pushState(null, '', currentUrlObject);
    }
    if ($('#x_IndividualCodeNumber').val() === "") {
        let options = { name: "x_modal_MTManningAgentID", selectId: `seafarer-input_x_modal_MTManningAgentID` };
        const el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
        options.closeOnSelect = !options.multiple;
        options.dropdownParent = document.querySelector("#seafarer-input-modal-dialog");
        options.minimumInputLength = ew.selectMinimumInputLength;
        options.minimumResultsForSearch = Infinity;
        options = Object.assign({}, ew.selectOptions, options);
        ew.createSelect(options);
        const manningAgentOptionsApi = 'manning-agent-options';
        $.ajax({
            url: `${parentUrl}api/Registration/${manningAgentOptionsApi}`,
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    const manningAgents = response.data;
                    for (const manningAgent of manningAgents) {
                        $('#x_modal_MTManningAgentID').append(new Option(manningAgent.Name, manningAgent.ID, false, false)).trigger('change');
                    }
                    $('#x_modal_MTManningAgentID').val(null).trigger('change');
                    window[formID].modified = false;
                } else {
                    ew.showToast(response.errorMessage);
                }
            },
            error: function(xhr, textStatus, errorThrown) {
                ew.showToast(errorThrown);
            }
        });
        $('#seafarer-input-modal-dialog').modal('show');
        const addSeafarerIDAndCrewAgencyApiUrl = "add-seafarer-id-and-crew-agency";
        $("#btn-seafarer-input").click(function() {
            const seafarerIDValue = $('#x_SeafarerID').val();
            const seafarerCaption = $(`label[for="x_SeafarerID"]`).text();
            if (seafarerIDValue === '') {
                if (selectedLanguage.id === 'en-US') {
                    ew.showToast(`Please enter required field - ${seafarerCaption}`);
                } else {
                    ew.showToast(`Masukkan input yang dibutuhkan - ${seafarerCaption}`);
                }
                return;
            }
            const tenDigitsRegex = /^\d{10}$/;
            const tenDigitsRegexErrorMessage = (selectedLanguage.id === 'en-US') ? "must contain exactly 10 digits" : "harus terdiri dari 10 digit angka";
            if (!tenDigitsRegex.test(seafarerIDValue)) {
                ew.showToast(`${seafarerCaption} ${tenDigitsRegexErrorMessage}`);
                return;
            }
            const manningAgentValue = $('#x_modal_MTManningAgentID').val();
            const manningAgentCaption = $(`label[for="x_modal_MTManningAgentID"]`).text();
            if (manningAgentValue === '' || manningAgentValue === null) {
                if (selectedLanguage.id === 'en-US') {
                    ew.showToast(`Please enter required field - ${manningAgentCaption}`);
                } else {
                    ew.showToast(`Masukkan input yang dibutuhkan - ${manningAgentCaption}`);
                }
                return;
            }
            $('#seafarer-input-modal-dialog').modal('hide');
            $('#loading-modal-dialog').modal('show');
            const seafarerInputRequest = {
                seafarerID: seafarerIDValue,
                manningAgentID: manningAgentValue,
                crewID: currentlyEditedCrewID,
            };
            $.ajax({
                method: "POST",
                url: `${parentUrl}api/Registration/${addSeafarerIDAndCrewAgencyApiUrl}`,
                data: JSON.stringify(seafarerInputRequest),
                contentType: "application/json",
                success: function(response) {
                    if (response.success) {
                        let successMessage = '';
                        if (selectedLanguage.id === 'en-US') {
                            successMessage = `Add Seafarer ID And Manning Agent Successful`;
                        } else {
                            successMessage = `Menambahkan Seafarer ID Dan Agensi Kru Berhasil`;
                        }
                        const targetUrl = new URL(window.location.href);
                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                        const params = new URLSearchParams(targetUrl.search);
                        params.set('successMessage', encodedSuccessMessage);
                        targetUrl.search = params.toString();
                        $('#loading-modal-dialog').modal('hide');
                        window.location.href = targetUrl.href;
                    } else {
                        $('#loading-modal-dialog').modal('hide');
                        $('#seafarer-input-modal-dialog').modal('show');
                        const errorMessage = response.errorMessage;
                        ew.showToast(errorMessage);
                    }
                },
                error: function(xhr, textStatus, errorThrown) {
                    $('#loading-modal-dialog').modal('hide');
                    $('#seafarer-input-modal-dialog').modal('show');
                    ew.showToast(errorThrown);
                }
            });
        });
    }

    // start code for auto capitalize first letter of each word
    $('#x_FullName').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_CityOfBirth').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_PrimaryAddressCity').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_PrimaryAddressState').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_PrimaryAddressNearestAirport').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_AlternativeAddressCity').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_AlternativeAddressState').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_NomineeFullName').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    $('#x_NomineeAddressCity').on('input', function() {
        $(this).val($(this).val().replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); }));
    });
    // end code for auto capitalize first letter of each word
    if ($('#x_Weight').val() !== '') {
        $('#x_Weight').val(parseInt($('#x_Weight').val()));
    }
    if ($('#x_Height').val() !== '') {
        $('#x_Height').val(parseInt($('#x_Height').val()));
    }

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();

    // add vertical line if the screen is larger than 576px (bootstrap sm breakpoint)
    const screenWidth = $(window).width();
    if (screenWidth >= 576) {
      const permanentAddressDiv = $('#permanentAddress');
      const temporaryAddressDiv = $('#temporaryAddress');
      permanentAddressDiv.css('border-right', '1px solid black');
      permanentAddressDiv.css('padding-right', 'calc(var(--bs-gutter-x) * 0.75)');
      temporaryAddressDiv.css('padding-left', 'calc(var(--bs-gutter-x) * 0.75)');
    }
    $('#ft_x_RequiredPhoto button').on("click", function () {
      window[formID].modified = true;
    });
    $('#ft_x_VisaPhoto button').on("click", function () {
      window[formID].modified = true;
    });
    $('#ft_x_SocialSecurityImage button').on("click", function () {
      window[formID].modified = true;
    });
    $('#ft_x_PersonalTaxImage button').on("click", function () {
      window[formID].modified = true;
    });

    // add text to rank applied for alert
    const inputWithLabelHeight = $('div#r_AvailableFrom.mb-2.row').outerHeight();
    const rankAppliedForLabel = $('label[for="x_RankAppliedFor_RankID"]').text();
    $('div#rank-alert').css('min-height', inputWithLabelHeight);
    if (selectedLanguage.id === 'en-US') {
      $('div#rank-alert').text(`Changing ${rankAppliedForLabel} will delete all unfilled certificates`);
    } else {
      $('div#rank-alert').text(`Mengubah ${rankAppliedForLabel} akan menghapus semua sertifikat yang belum diisi`);
    }
    const saveAsDraftButton = $('<button/>', {
        'class': 'btn btn-default ew-btn me-auto primary-black-clr gray-bg',
        'id': 'btn-save-draft',
        'type': 'button',
        'text': (selectedLanguage.id === 'en-US') ? `${ew.language.phrase("SaveBtn")} as Draft` : `${ew.language.phrase("SaveBtn")} sebagai Draft`
    }).click(function() {
        const validateAsDraftResult = validateAsDraft();
        if (validateAsDraftResult) {
            $('#loading-modal-dialog').modal('show');
            const targetUrlRelative = saveAsDraftUrl;
            saveAsDraft({ redirectUrlWhenSuccess: targetUrlRelative });
        } else {
            scrollToFirstInvalidInput();
        }
    });
    $('#btn-action').after(saveAsDraftButton);
    $('#btn-action').remove();
    $('.ew-buttons > .col-sm-10').removeClass('col-sm-10').addClass('d-flex mb-3');
    $('.ew-buttons > .offset-sm-2').removeClass('offset-sm-2');
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                const isAdmin = response.data.IsAdmin;
                if (isAdmin) {
                    const customCancelButton = $('<button/>', {
                        'class': 'btn btn-danger ew-btn primary-red-bg primary-white-clr',
                        'id': 'btn-custom-cancel',
                        'type': 'button',
                        'text': `${ew.language.phrase("CancelBtn")}`,
                    }).click(function() {
                        if (window[formID].modified) {
                            ew.prompt(ew.language.phrase("ConfirmCancel"), result => {
                                if (result) {
                                    isChangeTabApproved = true;
                                    window.location.href = `${ew.PATH_BASE}RegistrationList`;
                                }
                              });
                        } else {
                            isChangeTabApproved = true;
                            window.location.href = `${ew.PATH_BASE}RegistrationList`;
                        }
                    });
                    $('#btn-cancel').after(customCancelButton);
                    $('#btn-cancel').remove();

                    // initialize manning agent select options START
                    const mtManningAgentIDValueDB = $('#selectedManningAgentID').text();
                    let options = { name: "x_MTManningAgentID", selectId: `${formID}_x_MTManningAgentID` };
                    const el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
                    options.closeOnSelect = !options.multiple;
                    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
                    options.minimumInputLength = ew.selectMinimumInputLength;
                    options.minimumResultsForSearch = Infinity;
                    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables[tableName].fields.MTManningAgentID.selectOptions);
                    ew.createSelect(options);
                    const manningAgentOptionsApi = 'manning-agent-options';
                    $.ajax({
                        url: `${parentUrl}api/Registration/${manningAgentOptionsApi}`,
                        method: 'GET',
                        success: function(response) {
                            if (response.success) {
                                const manningAgents = response.data;
                                for (const manningAgent of manningAgents) {
                                    $('#x_MTManningAgentID').append(new Option(manningAgent.Name, manningAgent.ID, false, false)).trigger('change');
                                }
                                $('#x_MTManningAgentID').val(mtManningAgentIDValueDB);
                                $('#x_MTManningAgentID').trigger('change');
                                window[formID].modified = false;
                            } else {
                                ew.showToast(response.errorMessage);
                            }
                        },
                        error: function(xhr, textStatus, errorThrown) {
                            ew.showToast(errorThrown);
                        }
                    });
                    // initialize manning agent select options END
                } else {
                    $('#btn-cancel').remove();
                }
            } else {
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            ew.showToast(errorThrown);
        }
    });
    const errorMessage = urlQueryParams.get('errorMessage');
    if (errorMessage !== null) {
        const decodedErrorMessage = decodeURIComponent(errorMessage);
        ew.showToast(decodedErrorMessage);
        urlQueryParams.delete('errorMessage');
        currentUrlObject.search = urlQueryParams.toString();
        history.pushState(null, '', currentUrlObject);
    }
    function toggleNomineeRelationshipDetail(nomineeRelationshipSelectValue) {
        if (nomineeRelationshipSelectValue === 'Other Relative') {
            $('#x_NomineeRelationshipDetail').prop('disabled', false);
        } else {
            $('#x_NomineeRelationshipDetail').prop('disabled', true);
            $('#x_NomineeRelationshipDetail').val(null); 
        }
    }
    $('#x_NomineeRelationshipSelect').on('select2:select', function (e) {
        const value = e.params.data.id;
        toggleNomineeRelationshipDetail(value);
    });

    // check nominee relationship value and assign it to appropriate select option
    const nomineeRelationshipValue = $('#x_NomineeRelationship').val();
    if (nomineeRelationshipValue === '') {
        $('#x_NomineeRelationshipSelect').val(null);
        $('#x_NomineeRelationshipSelect').trigger('change');
        toggleNomineeRelationshipDetail($('#x_NomineeRelationshipSelect').select2('data')[0].id);
    } else if (
        nomineeRelationshipValue === 'Spouse' ||
        nomineeRelationshipValue === 'Partner' ||
        nomineeRelationshipValue === 'Parent'
    ) {
        $('#x_NomineeRelationshipSelect').val(nomineeRelationshipValue);
        $('#x_NomineeRelationshipSelect').trigger('change');
        toggleNomineeRelationshipDetail($('#x_NomineeRelationshipSelect').select2('data')[0].id);
    } else {
        $('#x_NomineeRelationshipSelect').val('Other Relative');
        $('#x_NomineeRelationshipSelect').trigger('change');
        toggleNomineeRelationshipDetail($('#x_NomineeRelationshipSelect').select2('data')[0].id);
        $('#x_NomineeRelationshipDetail').val(nomineeRelationshipValue);
    }

    // AUTO SAVE WHEN MOVING FROM THIS TAB
    $(window).on('beforeunload', function(event) {
        if (!isChangeTabApproved && window[formID].modified) {
            event.preventDefault();
            event.returnValue = '';
            return '';
        }
    });
    $("#btn-proceed").click(function() {
        isChangeTabApproved = true;
        const targetUrlRelative = $(this).attr('target-url-relative');
        $('#approve-modal-dialog').modal('hide');
        proceedToLink(targetUrlRelative);
    });
    $('ul.nav.nav-tabs li.nav-item a.nav-link').on('click', function(event) {
        event.preventDefault();
        const targetUrlRelative = $(this).attr('href');
        if (window[formID].modified) {
            const validateAsDraftResult = validateAsDraft();
            if (validateAsDraftResult) {
                $('#loading-modal-dialog').modal('show');
                saveAsDraft({ redirectUrlWhenSuccess: targetUrlRelative });
            } else {
                scrollToFirstInvalidInput();
                $('#btn-proceed').attr('target-url-relative', targetUrlRelative);
                $('#proceed-modal-dialog').modal('show');
            }
        } else {
            isChangeTabApproved = true;
            proceedToLink(targetUrlRelative);
        }
    });
    function proceedToLink(targetUrlRelative) {
        const baseUrl = new URL(window.location.href).origin;
        const targetUrl = new URL(baseUrl + targetUrlRelative);
        window.location.href = targetUrl.href;
    }
    function scrollToFirstInvalidInput() {
        const invalidInput = $("input.is-invalid:first");
        if (invalidInput.length > 0) { // Check if an invalid input is found
            const offset = invalidInput.offset().top; // Calculate the offset of the invalid input element from the top of the page
            const windowHeight = $(window).height(); // Calculate the height of the viewport
            const scrollPosition = offset - (windowHeight / 2); // Calculate the scroll position to center the invalid input element
            $("html, body").animate({ // Animate the scroll to the center position
                scrollTop: scrollPosition
            }, 1000); // Adjust the duration as needed (in milliseconds)
        }
    }
    function saveAsDraft({ redirectUrlWhenSuccess }) {
        isChangeTabApproved = true;
        let formData = $(`form#${formID}`).serialize();
        $('input[type="checkbox"]').each(function() {
            // Jika checkbox tidak dicentang dan tidak ada di hasil serialize(),
            // tambahkan nilai 0 ke hasil serialize()
            if (!this.checked && formData.indexOf(this.name) === -1) {
                formData += '&' + this.name + '=0';
            }
        });
        $.ajax({
            url: saveAsDraftUrl,
            type: 'POST',
            data: formData,
            success: function(res) {
                const $errorDiv = $(res).find('div.ew-error'); // res is a string containing html document
                $('#loading-modal-dialog').modal('hide');
                if ($errorDiv.length > 0) {
                    ew.showToast($errorDiv.text());
                } else {
                    proceedToLink(redirectUrlWhenSuccess);
                }
            },
            error: function(xhr, textStatus, errorThrown) {
                $('#loading-modal-dialog').modal('hide');
                isChangeTabApproved = false;
                ew.showToast(errorThrown);
            }
        });
    }
    function validateAsDraft() {
        let formErrorCount = 0;
        function validateFieldWithRegex(fieldName, errorMessage, regex) {
            const fieldNameWithPrefix = `x_${fieldName}`;
            const fieldValue = $(`#${fieldNameWithPrefix}`).val();
            if (fieldValue !== '' && !regex.test(fieldValue)) {
                window[formID].fields[fieldName].addError({ custom: errorMessage });
                window[formID].fields[fieldName].updateFeedback();
                window[formID].addError(fieldName, { custom: errorMessage });
                return false;
            } else {
                return true;
            }
        }
        function validateDateField(fieldName) {
            const errorMessage = (selectedLanguage.id === 'en-US') ? 'Incorrect date (dd MMM yyyy)' : 'Tanggal tidak benar (dd MMM yyyy)';
            const fieldNameWithPrefix = `x_${fieldName}`;
            const fieldValue = $(`#${fieldNameWithPrefix}`).val();
            if (fieldValue === '') {
                return true;
            }
            const dateParts = fieldValue.split(' ');
            const day = parseInt(dateParts[0], 10);
            const monthNamesEnglish = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            const monthNamesIndonesian = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des'];
            const month = (selectedLanguage.id === 'en-US') ? monthNamesEnglish.indexOf(dateParts[1]) : monthNamesIndonesian.indexOf(dateParts[1]);
            const year = parseInt(dateParts[2], 10);
            let valid = false;
            if (year >= 1900 && year <= 9999 && month >= 0 && day >= 1 && day <= 31) {
                switch (month) {
                    case 1: // February
                        // Check for leap year
                        valid = day <= (((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) ? 29 : 28);
                        break;
                    case 3: // April
                    case 5: // June
                    case 8: // September
                    case 10: // November
                        valid = day <= 30;
                        break;
                    default:
                        valid = true;
                        break;
                }
            }
            if (!valid) {
                window[formID].fields[fieldName].addError({ custom: errorMessage });
                window[formID].fields[fieldName].updateFeedback();
                window[formID].addError(fieldName, { custom: errorMessage });
                return false;
            } else {
                return true;
            }
        }

        // gmandayu: rules keterangan digit KTP 16 digit dan NPWP 15 atau 16 digit.
        const ktpNumberDigitsRegex = /^\d{16}$/;
        const ktpNumberDigitsErrorMessage = (selectedLanguage.id === 'en-US') ? "Must contain exactly 16 digits" : "Harus terdiri dari 16 digit angka";
        const npwpNumberDigitsRegex = /^\d{15,16}$/;
        const npwpNumberDigitsErrorMessage = (selectedLanguage.id === 'en-US') ? "Must contain exactly 15 or 16 digits" : "Harus terdiri dari 15 atau 16 digit angka";
        const tenDigitsRegex = /^\d{10}$/;
        const tenDigitsRegexErrorMessage = (selectedLanguage.id === 'en-US') ? "Must contain exactly 10 digits" : "Harus terdiri dari 10 digit angka";
        const onlyDigitsRegex = /^\d+$/;
        const onlyDigitsRegexErrorMessage =  (selectedLanguage.id === 'en-US') ? "Must contain digits only" : "Harus terdiri dari angka saja";
        const noDigitsRegex = /^[^0-9]+$/;
        const noDigitsRegexErrorMessage = (selectedLanguage.id === 'en-US') ? "Must not contain digits" : "Tidak boleh mengandung angka";
        const individualCodeNumberValue = $("#x_IndividualCodeNumber").val();
        if (!tenDigitsRegex.test(individualCodeNumberValue)) { 
            window[formID].fields["IndividualCodeNumber"].addError({ custom: tenDigitsRegexErrorMessage });
            window[formID].fields["IndividualCodeNumber"].updateFeedback();
            window[formID].addError("IndividualCodeNumber", { custom: tenDigitsRegexErrorMessage });
            formErrorCount += 1;
        }

        // gmandayu:
        formErrorCount += validateFieldWithRegex("SocialSecurityNumber", ktpNumberDigitsErrorMessage, ktpNumberDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("PersonalTaxNumber", npwpNumberDigitsErrorMessage, npwpNumberDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("PrimaryAddressPostCode",  onlyDigitsRegexErrorMessage, onlyDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("AlternativeAddressPostCode",  onlyDigitsRegexErrorMessage, onlyDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("NomineeAddressPostCode",  onlyDigitsRegexErrorMessage, onlyDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("Weight",  onlyDigitsRegexErrorMessage, onlyDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("Height",  onlyDigitsRegexErrorMessage, onlyDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("FullName",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("CityOfBirth",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("PrimaryAddressCity",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("PrimaryAddressState",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("PrimaryAddressNearestAirport",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("AlternativeAddressCity",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("AlternativeAddressState",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("NomineeFullName",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateFieldWithRegex("NomineeAddressCity",  noDigitsRegexErrorMessage, noDigitsRegex) ? 0 : 1;
        formErrorCount += validateDateField("DateOfBirth") ? 0 : 1;
        formErrorCount += validateDateField("AvailableFrom") ? 0 : 1;
        formErrorCount += validateDateField("AvailableUntil") ? 0 : 1;
        const nomineeRelationshipDetailErrorMessage = (selectedLanguage.id === 'en-US') ? "Cannot be empty when selecting Other Relative" : "Tidak boleh kosong ketika memilih Kerabat Lainnya";
        const nomineeRelationshipSelectValue = $("#x_NomineeRelationshipSelect").val();
        if (nomineeRelationshipSelectValue === 'Other Relative') {
            const nomineeRelationshipDetailValue = $("#x_NomineeRelationshipDetail").val();
            if (nomineeRelationshipDetailValue == '') {
                window[formID].fields["NomineeRelationshipDetail"].addError({ custom: nomineeRelationshipDetailErrorMessage });
                window[formID].fields["NomineeRelationshipDetail"].updateFeedback();
                window[formID].addError("NomineeRelationshipDetail", { custom: nomineeRelationshipDetailErrorMessage }); 
                formErrorCount += 1;
            } else {
                $("#x_NomineeRelationship").val(nomineeRelationshipDetailValue);
            }
        } else if (
            nomineeRelationshipSelectValue === 'Spouse' ||
            nomineeRelationshipSelectValue === 'Partner' ||
            nomineeRelationshipSelectValue === 'Parent'
        ) {
            $("#x_NomineeRelationship").val(nomineeRelationshipSelectValue);
        }
        const telephoneEmptyErrorMessage = (selectedLanguage.id === 'en-US') ? "Can't be empty when filling " : "Tidak boleh kosong ketika mengisi";
        const telephoneNumberRegexErrorMessage = (selectedLanguage.id === 'en-US') ? "Can contain 7-20 digits only" : "Hanya boleh mengandung 7-20 angka";
        const telephoneNumberRegex = /^\d{7,20}$/;
        const telephoneCodeCaption = (selectedLanguage.id === 'en-US') ? "country code" : "kode negara";
        const mobileNumberCaption = $('label[for="x_MobileNumber"]').text();
        const homeTelNumberCaption = $('label[for="x_PrimaryAddressHomeTel"]').text();
        const mobileNumberCodeValue = $("#x_MobileNumberCode_CountryID").val();
        const mobileNumberValue = $("#x_MobileNumber").val();
        const primaryAddressHomeTelCodeValue = $("#x_PrimaryAddressHomeTelCode_CountryID").val();
        const primaryAddressHomeTelValue = $("#x_PrimaryAddressHomeTel").val();
        const alternativeAddressHomeTelCodeValue = $("#x_AlternativeAddressHomeTelCode_CountryID").val();
        const alternativeAddressHomeTelValue = $("#x_AlternativeAddressHomeTel").val();
        const nomineeAddressHomeTelCodeValue = $("#x_NomineeAddressHomeTelCode_CountryID").val();
        const nomineeAddressHomeTelValue = $("#x_NomineeAddressHomeTel").val();
        const nomineeMobileNumberCodeValue = $("#x_NomineeMobileNumberCode_CountryID").val();
        const nomineeMobileNumberValue = $("#x_NomineeMobileNumber").val();

        // mobile number
        if (mobileNumberCodeValue === '' && mobileNumberValue !== '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${mobileNumberCaption}`;
            window[formID].fields["MobileNumberCode_CountryID"].addError({ custom: errorMessage });
            window[formID].fields["MobileNumberCode_CountryID"].updateFeedback();
            window[formID].addError("MobileNumberCode_CountryID", { custom: errorMessage });   
            formErrorCount += 1;
        }
        if (mobileNumberCodeValue !== '' && mobileNumberValue === '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${telephoneCodeCaption}`;
            window[formID].fields["MobileNumber"].addError({ custom: errorMessage });
            window[formID].fields["MobileNumber"].updateFeedback();
            window[formID].addError("MobileNumber", { custom: errorMessage });  
            formErrorCount += 1;
        }
        if (mobileNumberCodeValue !== '' && mobileNumberValue !== '') {
            formErrorCount += validateFieldWithRegex("MobileNumber",  telephoneNumberRegexErrorMessage, telephoneNumberRegex) ? 0 : 1;
        }
        // primary address home tel
        if (primaryAddressHomeTelCodeValue === '' && primaryAddressHomeTelValue !== '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${homeTelNumberCaption}`; 
            window[formID].fields["PrimaryAddressHomeTelCode_CountryID"].addError({ custom: errorMessage });
            window[formID].fields["PrimaryAddressHomeTelCode_CountryID"].updateFeedback();
            window[formID].addError("PrimaryAddressHomeTelCode_CountryID", { custom: errorMessage });  
            formErrorCount += 1;
        }
        if (primaryAddressHomeTelCodeValue !== '' && primaryAddressHomeTelValue === '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${telephoneCodeCaption}`;
            window[formID].fields["PrimaryAddressHomeTel"].addError({ custom: errorMessage });
            window[formID].fields["PrimaryAddressHomeTel"].updateFeedback();
            window[formID].addError("PrimaryAddressHomeTel", { custom: errorMessage });  
            formErrorCount += 1;
        }
        if (primaryAddressHomeTelCodeValue !== '' && primaryAddressHomeTelValue !== '') {
            formErrorCount += validateFieldWithRegex("PrimaryAddressHomeTel",  telephoneNumberRegexErrorMessage, telephoneNumberRegex) ? 0 : 1;
        }
        // alternative address home tel
        if (alternativeAddressHomeTelCodeValue === '' && alternativeAddressHomeTelValue !== '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${homeTelNumberCaption}`;
            window[formID].fields["AlternativeAddressHomeTelCode_CountryID"].addError({ custom: errorMessage });
            window[formID].fields["AlternativeAddressHomeTelCode_CountryID"].updateFeedback();
            window[formID].addError("AlternativeAddressHomeTelCode_CountryID", { custom: errorMessage });  
            formErrorCount += 1;
        }
        if (alternativeAddressHomeTelCodeValue !== '' && alternativeAddressHomeTelValue === '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${telephoneCodeCaption}`;
            window[formID].fields["AlternativeAddressHomeTel"].addError({ custom: errorMessage });
            window[formID].fields["AlternativeAddressHomeTel"].updateFeedback();
            window[formID].addError("AlternativeAddressHomeTel", { custom: errorMessage });     
            formErrorCount += 1;
        }
        if (alternativeAddressHomeTelCodeValue !== '' && alternativeAddressHomeTelValue !== '') {
            formErrorCount += validateFieldWithRegex("AlternativeAddressHomeTel",  telephoneNumberRegexErrorMessage, telephoneNumberRegex) ? 0 : 1;
        }
        // nominee address home tel
        if (nomineeAddressHomeTelCodeValue === '' && nomineeAddressHomeTelValue !== '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${homeTelNumberCaption}`;
            window[formID].fields["NomineeAddressHomeTelCode_CountryID"].addError({ custom: errorMessage });
            window[formID].fields["NomineeAddressHomeTelCode_CountryID"].updateFeedback();
            window[formID].addError("NomineeAddressHomeTelCode_CountryID", { custom: errorMessage });     
            formErrorCount += 1;
        }
        if (nomineeAddressHomeTelCodeValue !== '' && nomineeAddressHomeTelValue === '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${telephoneCodeCaption}`;  
            window[formID].fields["NomineeAddressHomeTel"].addError({ custom: errorMessage });
            window[formID].fields["NomineeAddressHomeTel"].updateFeedback();
            window[formID].addError("NomineeAddressHomeTel", { custom: errorMessage }); 
            formErrorCount += 1;
        }
        if (nomineeAddressHomeTelCodeValue !== '' && nomineeAddressHomeTelValue !== '') {
            formErrorCount += validateFieldWithRegex("NomineeAddressHomeTel",  telephoneNumberRegexErrorMessage, telephoneNumberRegex) ? 0 : 1;
        }
        // nominee mobile number
        if (nomineeMobileNumberCodeValue === '' && nomineeMobileNumberValue !== '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${mobileNumberCaption}`;  
            window[formID].fields["NomineeMobileNumberCode_CountryID"].addError({ custom: errorMessage });
            window[formID].fields["NomineeMobileNumberCode_CountryID"].updateFeedback();
            window[formID].addError("NomineeMobileNumberCode_CountryID", { custom: errorMessage }); 
            formErrorCount += 1;
        }
        if (nomineeMobileNumberCodeValue !== '' && nomineeMobileNumberValue === '') {
            const errorMessage = `${telephoneEmptyErrorMessage}${telephoneCodeCaption}`;
            window[formID].fields["NomineeMobileNumber"].addError({ custom: errorMessage });
            window[formID].fields["NomineeMobileNumber"].updateFeedback();
            window[formID].addError("NomineeMobileNumber", { custom: errorMessage });  
            formErrorCount += 1;
        }
        if (nomineeMobileNumberCodeValue !== '' && nomineeMobileNumberValue !== '') {
            formErrorCount += validateFieldWithRegex("NomineeMobileNumber",  telephoneNumberRegexErrorMessage, telephoneNumberRegex) ? 0 : 1;
        }
        return formErrorCount === 0;
    }

    // gmandayu: notification need to read.
    const getUnreadNotificationUrl = `${parentUrl}api/Notification/unread-notification`;
    function loadPage() {
        $.ajax({
            url: getUnreadNotificationUrl,
            method: 'GET',
            success: function(response) {
                const notificationIcon = document.querySelector('.nav-icon.fa-bell');
                if(response.success)
                {
                    notificationIcon.classList.add('animate');
                }
                else 
                {
                    notificationIcon.classList.remove('animate');
                }
            },
            error: function(xhr, textStatus, errorThrown) {
                console.error('Kesalahan saat memuat notifikasi:', errorThrown);
            }
        });
    }
    $(document).ready(function() {
        loadPage();
    });

    // Tesseract
    var tesseractScript = document.createElement('script');
    tesseractScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/tesseract.js/4.1.1/tesseract.min.js';
    tesseractScript.onload = async function() {
        var imageInput = document.getElementById('x_SocialSecurityImage');
        var nikInput = document.getElementById('x_SocialSecurityNumber');
        var issuingCountrySpanList = document.querySelectorAll('#select2-x_SocialSecurityIssuingCountryID-container span');
        imageInput.addEventListener('change', async function(event) {
            var reader = new FileReader();
            reader.onload = async function() {
                var outputImages = document.querySelectorAll('#x_SocialSecurityImage img');
                outputImages.forEach(function(img) {
                    img.src = reader.result;
                });
                await performTextRecognition(reader.result);
            };
            reader.readAsDataURL(event.target.files[0]);
        });
        async function performTextRecognition(imageUrl) {
            try {
                await Tesseract.loaded;
                const { data: { text } } = await Tesseract.recognize(imageUrl, 'eng', { logger: m => m });
                const nikMatch = text.match(/NIK :\s*([0-9]+)/);
                if(nikMatch && nikMatch[1]) {
                    const nikNumber = nikMatch[1];
                    nikInput.value = nikNumber;
                    issuingCountrySpanList.forEach(span => {
                        const title = span.getAttribute('title');
                        if(title === "Indonesia") {
                            span.textContent = "Indonesia";
                        }
                    });
                }
            } catch (error) {
                console.error("Error during text recognition:", error);
            }
        }
    };
    document.head.appendChild(tesseractScript);
});
</script>
