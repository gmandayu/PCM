@{
    // View
    View = this;

    // Check action result
    if (mtCrewAdd.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtCrewAdd.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(mtCrewAdd.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTCrew: currentTable } });
var currentPageID = ew.PAGE_ID = "add";
var currentForm;
var fMTCrewadd;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTCrewadd")
        .setPageId("add")

        // Add fields
        .setFields([

            ["IndividualCodeNumber", [fields.IndividualCodeNumber.visible && fields.IndividualCodeNumber.required ? ew.Validators.required(fields.IndividualCodeNumber.caption) : null], fields.IndividualCodeNumber.isInvalid],
            ["FullName", [fields.FullName.visible && fields.FullName.required ? ew.Validators.required(fields.FullName.caption) : null], fields.FullName.isInvalid],
            ["RequiredPhoto", [fields.RequiredPhoto.visible && fields.RequiredPhoto.required ? ew.Validators.fileRequired(fields.RequiredPhoto.caption) : null], fields.RequiredPhoto.isInvalid],
            ["VisaPhoto", [fields.VisaPhoto.visible && fields.VisaPhoto.required ? ew.Validators.fileRequired(fields.VisaPhoto.caption) : null], fields.VisaPhoto.isInvalid],
            ["Nationality_CountryID", [fields.Nationality_CountryID.visible && fields.Nationality_CountryID.required ? ew.Validators.required(fields.Nationality_CountryID.caption) : null], fields.Nationality_CountryID.isInvalid],
            ["CountryOfOrigin_CountryID", [fields.CountryOfOrigin_CountryID.visible && fields.CountryOfOrigin_CountryID.required ? ew.Validators.required(fields.CountryOfOrigin_CountryID.caption) : null], fields.CountryOfOrigin_CountryID.isInvalid],
            ["DateOfBirth", [fields.DateOfBirth.visible && fields.DateOfBirth.required ? ew.Validators.required(fields.DateOfBirth.caption) : null, ew.Validators.datetime(fields.DateOfBirth.clientFormatPattern)], fields.DateOfBirth.isInvalid],
            ["CityOfBirth", [fields.CityOfBirth.visible && fields.CityOfBirth.required ? ew.Validators.required(fields.CityOfBirth.caption) : null], fields.CityOfBirth.isInvalid],
            ["MaritalStatus", [fields.MaritalStatus.visible && fields.MaritalStatus.required ? ew.Validators.required(fields.MaritalStatus.caption) : null], fields.MaritalStatus.isInvalid],
            ["Gender", [fields.Gender.visible && fields.Gender.required ? ew.Validators.required(fields.Gender.caption) : null], fields.Gender.isInvalid],
            ["ReligionID", [fields.ReligionID.visible && fields.ReligionID.required ? ew.Validators.required(fields.ReligionID.caption) : null], fields.ReligionID.isInvalid],
            ["BloodType", [fields.BloodType.visible && fields.BloodType.required ? ew.Validators.required(fields.BloodType.caption) : null], fields.BloodType.isInvalid],
            ["RankAppliedFor_RankID", [fields.RankAppliedFor_RankID.visible && fields.RankAppliedFor_RankID.required ? ew.Validators.required(fields.RankAppliedFor_RankID.caption) : null], fields.RankAppliedFor_RankID.isInvalid],
            ["WillAcceptLowRank", [fields.WillAcceptLowRank.visible && fields.WillAcceptLowRank.required ? ew.Validators.required(fields.WillAcceptLowRank.caption) : null], fields.WillAcceptLowRank.isInvalid],
            ["AvailableFrom", [fields.AvailableFrom.visible && fields.AvailableFrom.required ? ew.Validators.required(fields.AvailableFrom.caption) : null, ew.Validators.datetime(fields.AvailableFrom.clientFormatPattern)], fields.AvailableFrom.isInvalid],
            ["AvailableUntil", [fields.AvailableUntil.visible && fields.AvailableUntil.required ? ew.Validators.required(fields.AvailableUntil.caption) : null, ew.Validators.datetime(fields.AvailableUntil.clientFormatPattern)], fields.AvailableUntil.isInvalid],
            ["PrimaryAddressDetail", [fields.PrimaryAddressDetail.visible && fields.PrimaryAddressDetail.required ? ew.Validators.required(fields.PrimaryAddressDetail.caption) : null], fields.PrimaryAddressDetail.isInvalid],
            ["PrimaryAddressCity", [fields.PrimaryAddressCity.visible && fields.PrimaryAddressCity.required ? ew.Validators.required(fields.PrimaryAddressCity.caption) : null], fields.PrimaryAddressCity.isInvalid],
            ["PrimaryAddressState", [fields.PrimaryAddressState.visible && fields.PrimaryAddressState.required ? ew.Validators.required(fields.PrimaryAddressState.caption) : null], fields.PrimaryAddressState.isInvalid],
            ["PrimaryAddressNearestAirport", [fields.PrimaryAddressNearestAirport.visible && fields.PrimaryAddressNearestAirport.required ? ew.Validators.required(fields.PrimaryAddressNearestAirport.caption) : null], fields.PrimaryAddressNearestAirport.isInvalid],
            ["PrimaryAddressPostCode", [fields.PrimaryAddressPostCode.visible && fields.PrimaryAddressPostCode.required ? ew.Validators.required(fields.PrimaryAddressPostCode.caption) : null], fields.PrimaryAddressPostCode.isInvalid],
            ["PrimaryAddressCountryID", [fields.PrimaryAddressCountryID.visible && fields.PrimaryAddressCountryID.required ? ew.Validators.required(fields.PrimaryAddressCountryID.caption) : null], fields.PrimaryAddressCountryID.isInvalid],
            ["PrimaryAddressHomeTel", [fields.PrimaryAddressHomeTel.visible && fields.PrimaryAddressHomeTel.required ? ew.Validators.required(fields.PrimaryAddressHomeTel.caption) : null], fields.PrimaryAddressHomeTel.isInvalid],
            ["PrimaryAddressFax", [fields.PrimaryAddressFax.visible && fields.PrimaryAddressFax.required ? ew.Validators.required(fields.PrimaryAddressFax.caption) : null], fields.PrimaryAddressFax.isInvalid],
            ["AlternativeAddressDetail", [fields.AlternativeAddressDetail.visible && fields.AlternativeAddressDetail.required ? ew.Validators.required(fields.AlternativeAddressDetail.caption) : null], fields.AlternativeAddressDetail.isInvalid],
            ["AlternativeAddressCity", [fields.AlternativeAddressCity.visible && fields.AlternativeAddressCity.required ? ew.Validators.required(fields.AlternativeAddressCity.caption) : null], fields.AlternativeAddressCity.isInvalid],
            ["AlternativeAddressState", [fields.AlternativeAddressState.visible && fields.AlternativeAddressState.required ? ew.Validators.required(fields.AlternativeAddressState.caption) : null], fields.AlternativeAddressState.isInvalid],
            ["AlternativeAddressHomeTel", [fields.AlternativeAddressHomeTel.visible && fields.AlternativeAddressHomeTel.required ? ew.Validators.required(fields.AlternativeAddressHomeTel.caption) : null], fields.AlternativeAddressHomeTel.isInvalid],
            ["AlternativeAddressPostCode", [fields.AlternativeAddressPostCode.visible && fields.AlternativeAddressPostCode.required ? ew.Validators.required(fields.AlternativeAddressPostCode.caption) : null], fields.AlternativeAddressPostCode.isInvalid],
            ["AlternativeAddressCountryID", [fields.AlternativeAddressCountryID.visible && fields.AlternativeAddressCountryID.required ? ew.Validators.required(fields.AlternativeAddressCountryID.caption) : null], fields.AlternativeAddressCountryID.isInvalid],
            ["MobileNumber", [fields.MobileNumber.visible && fields.MobileNumber.required ? ew.Validators.required(fields.MobileNumber.caption) : null], fields.MobileNumber.isInvalid],
            ["_Email", [fields._Email.visible && fields._Email.required ? ew.Validators.required(fields._Email.caption) : null, ew.Validators.email], fields._Email.isInvalid],
            ["SocialSecurityNumber", [fields.SocialSecurityNumber.visible && fields.SocialSecurityNumber.required ? ew.Validators.required(fields.SocialSecurityNumber.caption) : null], fields.SocialSecurityNumber.isInvalid],
            ["SocialSecurityIssuingCountryID", [fields.SocialSecurityIssuingCountryID.visible && fields.SocialSecurityIssuingCountryID.required ? ew.Validators.required(fields.SocialSecurityIssuingCountryID.caption) : null], fields.SocialSecurityIssuingCountryID.isInvalid],
            ["SocialSecurityImage", [fields.SocialSecurityImage.visible && fields.SocialSecurityImage.required ? ew.Validators.fileRequired(fields.SocialSecurityImage.caption) : null], fields.SocialSecurityImage.isInvalid],
            ["PersonalTaxNumber", [fields.PersonalTaxNumber.visible && fields.PersonalTaxNumber.required ? ew.Validators.required(fields.PersonalTaxNumber.caption) : null], fields.PersonalTaxNumber.isInvalid],
            ["PersonalTaxIssuingCountryID", [fields.PersonalTaxIssuingCountryID.visible && fields.PersonalTaxIssuingCountryID.required ? ew.Validators.required(fields.PersonalTaxIssuingCountryID.caption) : null], fields.PersonalTaxIssuingCountryID.isInvalid],
            ["PersonalTaxImage", [fields.PersonalTaxImage.visible && fields.PersonalTaxImage.required ? ew.Validators.fileRequired(fields.PersonalTaxImage.caption) : null], fields.PersonalTaxImage.isInvalid],
            ["NomineeFullName", [fields.NomineeFullName.visible && fields.NomineeFullName.required ? ew.Validators.required(fields.NomineeFullName.caption) : null], fields.NomineeFullName.isInvalid],
            ["NomineeRelationship", [fields.NomineeRelationship.visible && fields.NomineeRelationship.required ? ew.Validators.required(fields.NomineeRelationship.caption) : null], fields.NomineeRelationship.isInvalid],
            ["NomineeGender", [fields.NomineeGender.visible && fields.NomineeGender.required ? ew.Validators.required(fields.NomineeGender.caption) : null], fields.NomineeGender.isInvalid],
            ["NomineeNationality_CountryID", [fields.NomineeNationality_CountryID.visible && fields.NomineeNationality_CountryID.required ? ew.Validators.required(fields.NomineeNationality_CountryID.caption) : null], fields.NomineeNationality_CountryID.isInvalid],
            ["NomineeAddressDetail", [fields.NomineeAddressDetail.visible && fields.NomineeAddressDetail.required ? ew.Validators.required(fields.NomineeAddressDetail.caption) : null], fields.NomineeAddressDetail.isInvalid],
            ["NomineeAddressCity", [fields.NomineeAddressCity.visible && fields.NomineeAddressCity.required ? ew.Validators.required(fields.NomineeAddressCity.caption) : null], fields.NomineeAddressCity.isInvalid],
            ["NomineeAddressPostCode", [fields.NomineeAddressPostCode.visible && fields.NomineeAddressPostCode.required ? ew.Validators.required(fields.NomineeAddressPostCode.caption) : null], fields.NomineeAddressPostCode.isInvalid],
            ["NomineeAddressCountryID", [fields.NomineeAddressCountryID.visible && fields.NomineeAddressCountryID.required ? ew.Validators.required(fields.NomineeAddressCountryID.caption) : null], fields.NomineeAddressCountryID.isInvalid],
            ["NomineeAddressHomeTel", [fields.NomineeAddressHomeTel.visible && fields.NomineeAddressHomeTel.required ? ew.Validators.required(fields.NomineeAddressHomeTel.caption) : null], fields.NomineeAddressHomeTel.isInvalid],
            ["NomineeEmail", [fields.NomineeEmail.visible && fields.NomineeEmail.required ? ew.Validators.required(fields.NomineeEmail.caption) : null, ew.Validators.email], fields.NomineeEmail.isInvalid],
            ["NomineeMobileNumber", [fields.NomineeMobileNumber.visible && fields.NomineeMobileNumber.required ? ew.Validators.required(fields.NomineeMobileNumber.caption) : null], fields.NomineeMobileNumber.isInvalid],
            ["ForeignVisaHasBeenDenied", [fields.ForeignVisaHasBeenDenied.visible && fields.ForeignVisaHasBeenDenied.required ? ew.Validators.required(fields.ForeignVisaHasBeenDenied.caption) : null], fields.ForeignVisaHasBeenDenied.isInvalid],
            ["ForeignVisaDenied_CountryID", [fields.ForeignVisaDenied_CountryID.visible && fields.ForeignVisaDenied_CountryID.required ? ew.Validators.required(fields.ForeignVisaDenied_CountryID.caption) : null], fields.ForeignVisaDenied_CountryID.isInvalid],
            ["ForeignVisaDeniedReason", [fields.ForeignVisaDeniedReason.visible && fields.ForeignVisaDeniedReason.required ? ew.Validators.required(fields.ForeignVisaDeniedReason.caption) : null], fields.ForeignVisaDeniedReason.isInvalid],
            ["HasMaritimeAccidentOrCourtOfEnquiry", [fields.HasMaritimeAccidentOrCourtOfEnquiry.visible && fields.HasMaritimeAccidentOrCourtOfEnquiry.required ? ew.Validators.required(fields.HasMaritimeAccidentOrCourtOfEnquiry.caption) : null], fields.HasMaritimeAccidentOrCourtOfEnquiry.isInvalid],
            ["HasMaritimeAccidentOrCourtOfEnquiryDetails", [fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.visible && fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.required ? ew.Validators.required(fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.caption) : null], fields.HasMaritimeAccidentOrCourtOfEnquiryDetails.isInvalid],
            ["Reference1CompanyName", [fields.Reference1CompanyName.visible && fields.Reference1CompanyName.required ? ew.Validators.required(fields.Reference1CompanyName.caption) : null], fields.Reference1CompanyName.isInvalid],
            ["Reference1ContactPersonName", [fields.Reference1ContactPersonName.visible && fields.Reference1ContactPersonName.required ? ew.Validators.required(fields.Reference1ContactPersonName.caption) : null], fields.Reference1ContactPersonName.isInvalid],
            ["Reference1CompanyAddress", [fields.Reference1CompanyAddress.visible && fields.Reference1CompanyAddress.required ? ew.Validators.required(fields.Reference1CompanyAddress.caption) : null], fields.Reference1CompanyAddress.isInvalid],
            ["Reference1CompanyCountryID", [fields.Reference1CompanyCountryID.visible && fields.Reference1CompanyCountryID.required ? ew.Validators.required(fields.Reference1CompanyCountryID.caption) : null], fields.Reference1CompanyCountryID.isInvalid],
            ["Reference1CompanyTelephone", [fields.Reference1CompanyTelephone.visible && fields.Reference1CompanyTelephone.required ? ew.Validators.required(fields.Reference1CompanyTelephone.caption) : null], fields.Reference1CompanyTelephone.isInvalid],
            ["Reference2CompanyName", [fields.Reference2CompanyName.visible && fields.Reference2CompanyName.required ? ew.Validators.required(fields.Reference2CompanyName.caption) : null], fields.Reference2CompanyName.isInvalid],
            ["Reference2ContactPersonName", [fields.Reference2ContactPersonName.visible && fields.Reference2ContactPersonName.required ? ew.Validators.required(fields.Reference2ContactPersonName.caption) : null], fields.Reference2ContactPersonName.isInvalid],
            ["Reference2CompanyAddress", [fields.Reference2CompanyAddress.visible && fields.Reference2CompanyAddress.required ? ew.Validators.required(fields.Reference2CompanyAddress.caption) : null], fields.Reference2CompanyAddress.isInvalid],
            ["Reference2CompanyCountryID", [fields.Reference2CompanyCountryID.visible && fields.Reference2CompanyCountryID.required ? ew.Validators.required(fields.Reference2CompanyCountryID.caption) : null], fields.Reference2CompanyCountryID.isInvalid],
            ["Reference2CompanyTelephone", [fields.Reference2CompanyTelephone.visible && fields.Reference2CompanyTelephone.required ? ew.Validators.required(fields.Reference2CompanyTelephone.caption) : null], fields.Reference2CompanyTelephone.isInvalid],
            ["Status", [fields.Status.visible && fields.Status.required ? ew.Validators.required(fields.Status.caption) : null], fields.Status.isInvalid],
            ["Reason", [fields.Reason.visible && fields.Reason.required ? ew.Validators.required(fields.Reason.caption) : null], fields.Reason.isInvalid],
            ["Weight", [fields.Weight.visible && fields.Weight.required ? ew.Validators.required(fields.Weight.caption) : null, ew.Validators.integer], fields.Weight.isInvalid],
            ["Height", [fields.Height.visible && fields.Height.required ? ew.Validators.required(fields.Height.caption) : null, ew.Validators.integer], fields.Height.isInvalid],
            ["CoverallSize", [fields.CoverallSize.visible && fields.CoverallSize.required ? ew.Validators.required(fields.CoverallSize.caption) : null], fields.CoverallSize.isInvalid],
            ["SafetyShoesSize", [fields.SafetyShoesSize.visible && fields.SafetyShoesSize.required ? ew.Validators.required(fields.SafetyShoesSize.caption) : null, ew.Validators.integer], fields.SafetyShoesSize.isInvalid],
            ["ShirtSize", [fields.ShirtSize.visible && fields.ShirtSize.required ? ew.Validators.required(fields.ShirtSize.caption) : null], fields.ShirtSize.isInvalid],
            ["TrousersSize", [fields.TrousersSize.visible && fields.TrousersSize.required ? ew.Validators.required(fields.TrousersSize.caption) : null], fields.TrousersSize.isInvalid],
            ["NSSF_Health_Number", [fields.NSSF_Health_Number.visible && fields.NSSF_Health_Number.required ? ew.Validators.required(fields.NSSF_Health_Number.caption) : null], fields.NSSF_Health_Number.isInvalid],
            ["NSSF_Occupation_Number", [fields.NSSF_Occupation_Number.visible && fields.NSSF_Occupation_Number.required ? ew.Validators.required(fields.NSSF_Occupation_Number.caption) : null], fields.NSSF_Occupation_Number.isInvalid],
            ["FinalAcceptedDate", [fields.FinalAcceptedDate.visible && fields.FinalAcceptedDate.required ? ew.Validators.required(fields.FinalAcceptedDate.caption) : null, ew.Validators.datetime(fields.FinalAcceptedDate.clientFormatPattern)], fields.FinalAcceptedDate.isInvalid],
            ["Reference1CompanyTelephoneCode_CountryID", [fields.Reference1CompanyTelephoneCode_CountryID.visible && fields.Reference1CompanyTelephoneCode_CountryID.required ? ew.Validators.required(fields.Reference1CompanyTelephoneCode_CountryID.caption) : null], fields.Reference1CompanyTelephoneCode_CountryID.isInvalid],
            ["Reference2CompanyTelephoneCode_CountryID", [fields.Reference2CompanyTelephoneCode_CountryID.visible && fields.Reference2CompanyTelephoneCode_CountryID.required ? ew.Validators.required(fields.Reference2CompanyTelephoneCode_CountryID.caption) : null], fields.Reference2CompanyTelephoneCode_CountryID.isInvalid],
            ["MobileNumberCode_CountryID", [fields.MobileNumberCode_CountryID.visible && fields.MobileNumberCode_CountryID.required ? ew.Validators.required(fields.MobileNumberCode_CountryID.caption) : null], fields.MobileNumberCode_CountryID.isInvalid],
            ["PrimaryAddressHomeTelCode_CountryID", [fields.PrimaryAddressHomeTelCode_CountryID.visible && fields.PrimaryAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.PrimaryAddressHomeTelCode_CountryID.caption) : null], fields.PrimaryAddressHomeTelCode_CountryID.isInvalid],
            ["AlternativeAddressHomeTelCode_CountryID", [fields.AlternativeAddressHomeTelCode_CountryID.visible && fields.AlternativeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.AlternativeAddressHomeTelCode_CountryID.caption) : null], fields.AlternativeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeAddressHomeTelCode_CountryID", [fields.NomineeAddressHomeTelCode_CountryID.visible && fields.NomineeAddressHomeTelCode_CountryID.required ? ew.Validators.required(fields.NomineeAddressHomeTelCode_CountryID.caption) : null], fields.NomineeAddressHomeTelCode_CountryID.isInvalid],
            ["NomineeMobileNumberCode_CountryID", [fields.NomineeMobileNumberCode_CountryID.visible && fields.NomineeMobileNumberCode_CountryID.required ? ew.Validators.required(fields.NomineeMobileNumberCode_CountryID.caption) : null], fields.NomineeMobileNumberCode_CountryID.isInvalid],
            ["RevisedReason", [fields.RevisedReason.visible && fields.RevisedReason.required ? ew.Validators.required(fields.RevisedReason.caption) : null], fields.RevisedReason.isInvalid],
            ["RevisedDateTime", [fields.RevisedDateTime.visible && fields.RevisedDateTime.required ? ew.Validators.required(fields.RevisedDateTime.caption) : null, ew.Validators.datetime(fields.RevisedDateTime.clientFormatPattern)], fields.RevisedDateTime.isInvalid],
            ["MTManningAgentID", [fields.MTManningAgentID.visible && fields.MTManningAgentID.required ? ew.Validators.required(fields.MTManningAgentID.caption) : null, ew.Validators.integer], fields.MTManningAgentID.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Nationality_CountryID": @Html.Raw(mtCrewAdd.Nationality_CountryID.ToClientList(mtCrewAdd)),
            "CountryOfOrigin_CountryID": @Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.ToClientList(mtCrewAdd)),
            "MaritalStatus": @Html.Raw(mtCrewAdd.MaritalStatus.ToClientList(mtCrewAdd)),
            "Gender": @Html.Raw(mtCrewAdd.Gender.ToClientList(mtCrewAdd)),
            "ReligionID": @Html.Raw(mtCrewAdd.ReligionID.ToClientList(mtCrewAdd)),
            "BloodType": @Html.Raw(mtCrewAdd.BloodType.ToClientList(mtCrewAdd)),
            "RankAppliedFor_RankID": @Html.Raw(mtCrewAdd.RankAppliedFor_RankID.ToClientList(mtCrewAdd)),
            "WillAcceptLowRank": @Html.Raw(mtCrewAdd.WillAcceptLowRank.ToClientList(mtCrewAdd)),
            "PrimaryAddressCountryID": @Html.Raw(mtCrewAdd.PrimaryAddressCountryID.ToClientList(mtCrewAdd)),
            "AlternativeAddressCountryID": @Html.Raw(mtCrewAdd.AlternativeAddressCountryID.ToClientList(mtCrewAdd)),
            "SocialSecurityIssuingCountryID": @Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.ToClientList(mtCrewAdd)),
            "PersonalTaxIssuingCountryID": @Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.ToClientList(mtCrewAdd)),
            "NomineeGender": @Html.Raw(mtCrewAdd.NomineeGender.ToClientList(mtCrewAdd)),
            "NomineeNationality_CountryID": @Html.Raw(mtCrewAdd.NomineeNationality_CountryID.ToClientList(mtCrewAdd)),
            "NomineeAddressCountryID": @Html.Raw(mtCrewAdd.NomineeAddressCountryID.ToClientList(mtCrewAdd)),
            "ForeignVisaHasBeenDenied": @Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.ToClientList(mtCrewAdd)),
            "ForeignVisaDenied_CountryID": @Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.ToClientList(mtCrewAdd)),
            "HasMaritimeAccidentOrCourtOfEnquiry": @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.ToClientList(mtCrewAdd)),
            "Reference1CompanyCountryID": @Html.Raw(mtCrewAdd.Reference1CompanyCountryID.ToClientList(mtCrewAdd)),
            "Reference2CompanyCountryID": @Html.Raw(mtCrewAdd.Reference2CompanyCountryID.ToClientList(mtCrewAdd)),
            "Reference1CompanyTelephoneCode_CountryID": @Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.ToClientList(mtCrewAdd)),
            "Reference2CompanyTelephoneCode_CountryID": @Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.ToClientList(mtCrewAdd)),
            "MobileNumberCode_CountryID": @Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.ToClientList(mtCrewAdd)),
            "PrimaryAddressHomeTelCode_CountryID": @Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.ToClientList(mtCrewAdd)),
            "AlternativeAddressHomeTelCode_CountryID": @Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.ToClientList(mtCrewAdd)),
            "NomineeAddressHomeTelCode_CountryID": @Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.ToClientList(mtCrewAdd)),
            "NomineeMobileNumberCode_CountryID": @Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.ToClientList(mtCrewAdd)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtCrewAdd.ShowPageHeader()
@mtCrewAdd.ShowMessages()
<form name="fMTCrewadd" id="fMTCrewadd" class="@(mtCrewAdd.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(mtCrewAdd.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtCrewAdd.OldKeyName)" value="@Html.Raw(mtCrewAdd.OldKey)">
<div class="ew-add-div"><!-- page* -->
@if (mtCrewAdd.IndividualCodeNumber.Visible) { // mtCrewAdd.IndividualCodeNumber.Visible (begin)
    <div id="r_IndividualCodeNumber" @Html.Raw(mtCrewAdd.IndividualCodeNumber.RowAttributes)>
        <label id="elh_MTCrew_IndividualCodeNumber" for="x_IndividualCodeNumber" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.IndividualCodeNumber.Caption)@Html.Raw(mtCrewAdd.IndividualCodeNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.IndividualCodeNumber.CellAttributes)>
<span id="el_MTCrew_IndividualCodeNumber">
<input type="@(mtCrewAdd.IndividualCodeNumber.InputTextType)" name="x_IndividualCodeNumber" id="x_IndividualCodeNumber" data-table="MTCrew" data-field="x_IndividualCodeNumber" value="@Html.Raw(mtCrewAdd.IndividualCodeNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.IndividualCodeNumber.PlaceHolder))" data-format-pattern="@(mtCrewAdd.IndividualCodeNumber.FormatPattern)"@Html.Raw(mtCrewAdd.IndividualCodeNumber.EditAttributes) aria-describedby="x_IndividualCodeNumber_help">
@Html.Raw(mtCrewAdd.IndividualCodeNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.IndividualCodeNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.IndividualCodeNumber.Visible (end) *@
@if (mtCrewAdd.FullName.Visible) { // mtCrewAdd.FullName.Visible (begin)
    <div id="r_FullName" @Html.Raw(mtCrewAdd.FullName.RowAttributes)>
        <label id="elh_MTCrew_FullName" for="x_FullName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.FullName.Caption)@Html.Raw(mtCrewAdd.FullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.FullName.CellAttributes)>
<span id="el_MTCrew_FullName">
<input type="@(mtCrewAdd.FullName.InputTextType)" name="x_FullName" id="x_FullName" data-table="MTCrew" data-field="x_FullName" value="@Html.Raw(mtCrewAdd.FullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.FullName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.FullName.FormatPattern)"@Html.Raw(mtCrewAdd.FullName.EditAttributes) aria-describedby="x_FullName_help">
@Html.Raw(mtCrewAdd.FullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.FullName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.FullName.Visible (end) *@
@if (mtCrewAdd.RequiredPhoto.Visible) { // mtCrewAdd.RequiredPhoto.Visible (begin)
    <div id="r_RequiredPhoto" @Html.Raw(mtCrewAdd.RequiredPhoto.RowAttributes)>
        <label id="elh_MTCrew_RequiredPhoto" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.RequiredPhoto.Caption)@Html.Raw(mtCrewAdd.RequiredPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.RequiredPhoto.CellAttributes)>
<span id="el_MTCrew_RequiredPhoto">
<div id="fd_x_RequiredPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_RequiredPhoto"
        name="x_RequiredPhoto"
        class="form-control ew-file-input"
        title="@(mtCrewAdd.RequiredPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_RequiredPhoto"
        data-size="100"
        data-accept-file-types="@(mtCrewAdd.RequiredPhoto.AcceptFileTypes)"
        data-max-file-size="@(mtCrewAdd.RequiredPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewAdd.RequiredPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_RequiredPhoto_help"
        @Html.Raw((mtCrewAdd.RequiredPhoto.ReadOnly || mtCrewAdd.RequiredPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewAdd.RequiredPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewAdd.RequiredPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.RequiredPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_RequiredPhoto" id= "fn_x_RequiredPhoto" value="@(mtCrewAdd.RequiredPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_RequiredPhoto" id= "fa_x_RequiredPhoto" value="0">
<table id="ft_x_RequiredPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewAdd.RequiredPhoto.Visible (end) *@
@if (mtCrewAdd.VisaPhoto.Visible) { // mtCrewAdd.VisaPhoto.Visible (begin)
    <div id="r_VisaPhoto" @Html.Raw(mtCrewAdd.VisaPhoto.RowAttributes)>
        <label id="elh_MTCrew_VisaPhoto" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.VisaPhoto.Caption)@Html.Raw(mtCrewAdd.VisaPhoto.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.VisaPhoto.CellAttributes)>
<span id="el_MTCrew_VisaPhoto">
<div id="fd_x_VisaPhoto" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_VisaPhoto"
        name="x_VisaPhoto"
        class="form-control ew-file-input"
        title="@(mtCrewAdd.VisaPhoto.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_VisaPhoto"
        data-size="100"
        data-accept-file-types="@(mtCrewAdd.VisaPhoto.AcceptFileTypes)"
        data-max-file-size="@(mtCrewAdd.VisaPhoto.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewAdd.VisaPhoto.ImageCropper ? 0 : 1)"
        aria-describedby="x_VisaPhoto_help"
        @Html.Raw((mtCrewAdd.VisaPhoto.ReadOnly || mtCrewAdd.VisaPhoto.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewAdd.VisaPhoto.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewAdd.VisaPhoto.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.VisaPhoto.GetErrorMessage())</div>
<input type="hidden" name="fn_x_VisaPhoto" id= "fn_x_VisaPhoto" value="@(mtCrewAdd.VisaPhoto.Upload.FileName)">
<input type="hidden" name="fa_x_VisaPhoto" id= "fa_x_VisaPhoto" value="0">
<table id="ft_x_VisaPhoto" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewAdd.VisaPhoto.Visible (end) *@
@if (mtCrewAdd.Nationality_CountryID.Visible) { // mtCrewAdd.Nationality_CountryID.Visible (begin)
    <div id="r_Nationality_CountryID" @Html.Raw(mtCrewAdd.Nationality_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Nationality_CountryID" for="x_Nationality_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Nationality_CountryID.Caption)@Html.Raw(mtCrewAdd.Nationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Nationality_CountryID.CellAttributes)>
<span id="el_MTCrew_Nationality_CountryID">
    <select
        id="x_Nationality_CountryID"
        name="x_Nationality_CountryID"
        class="form-select ew-select@(mtCrewAdd.Nationality_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Nationality_CountryID"
        data-table="MTCrew"
        data-field="x_Nationality_CountryID"
        data-value-separator="@(mtCrewAdd.Nationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Nationality_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Nationality_CountryID.EditAttributes)>
        @(mtCrewAdd.Nationality_CountryID.SelectOptionListHtml("x_Nationality_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.Nationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Nationality_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.Nationality_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_Nationality_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Nationality_CountryID", selectId: "fMTCrewadd_x_Nationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Nationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Nationality_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Nationality_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Nationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Nationality_CountryID.Visible (end) *@
@if (mtCrewAdd.CountryOfOrigin_CountryID.Visible) { // mtCrewAdd.CountryOfOrigin_CountryID.Visible (begin)
    <div id="r_CountryOfOrigin_CountryID" @Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.RowAttributes)>
        <label id="elh_MTCrew_CountryOfOrigin_CountryID" for="x_CountryOfOrigin_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.Caption)@Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.CellAttributes)>
<span id="el_MTCrew_CountryOfOrigin_CountryID">
    <select
        id="x_CountryOfOrigin_CountryID"
        name="x_CountryOfOrigin_CountryID"
        class="form-select ew-select@(mtCrewAdd.CountryOfOrigin_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_CountryOfOrigin_CountryID"
        data-table="MTCrew"
        data-field="x_CountryOfOrigin_CountryID"
        data-value-separator="@(mtCrewAdd.CountryOfOrigin_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.CountryOfOrigin_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.EditAttributes)>
        @(mtCrewAdd.CountryOfOrigin_CountryID.SelectOptionListHtml("x_CountryOfOrigin_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.CountryOfOrigin_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_CountryOfOrigin_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_CountryOfOrigin_CountryID", selectId: "fMTCrewadd_x_CountryOfOrigin_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.CountryOfOrigin_CountryID?.lookupOptions.length) {
        options.data = { id: "x_CountryOfOrigin_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_CountryOfOrigin_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.CountryOfOrigin_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.CountryOfOrigin_CountryID.Visible (end) *@
@if (mtCrewAdd.DateOfBirth.Visible) { // mtCrewAdd.DateOfBirth.Visible (begin)
    <div id="r_DateOfBirth" @Html.Raw(mtCrewAdd.DateOfBirth.RowAttributes)>
        <label id="elh_MTCrew_DateOfBirth" for="x_DateOfBirth" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.DateOfBirth.Caption)@Html.Raw(mtCrewAdd.DateOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.DateOfBirth.CellAttributes)>
<span id="el_MTCrew_DateOfBirth">
<input type="@(mtCrewAdd.DateOfBirth.InputTextType)" name="x_DateOfBirth" id="x_DateOfBirth" data-table="MTCrew" data-field="x_DateOfBirth" value="@Html.Raw(mtCrewAdd.DateOfBirth.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.DateOfBirth.PlaceHolder))" data-format-pattern="@(mtCrewAdd.DateOfBirth.FormatPattern)"@Html.Raw(mtCrewAdd.DateOfBirth.EditAttributes) aria-describedby="x_DateOfBirth_help">
@Html.Raw(mtCrewAdd.DateOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.DateOfBirth.GetErrorMessage())</div>
@if (!mtCrewAdd.DateOfBirth.ReadOnly && !mtCrewAdd.DateOfBirth.Disabled && !mtCrewAdd.DateOfBirth.EditAttrs.Is("readonly") && !mtCrewAdd.DateOfBirth.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewadd", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewadd", "x_DateOfBirth", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewAdd.DateOfBirth.Visible (end) *@
@if (mtCrewAdd.CityOfBirth.Visible) { // mtCrewAdd.CityOfBirth.Visible (begin)
    <div id="r_CityOfBirth" @Html.Raw(mtCrewAdd.CityOfBirth.RowAttributes)>
        <label id="elh_MTCrew_CityOfBirth" for="x_CityOfBirth" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.CityOfBirth.Caption)@Html.Raw(mtCrewAdd.CityOfBirth.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.CityOfBirth.CellAttributes)>
<span id="el_MTCrew_CityOfBirth">
<input type="@(mtCrewAdd.CityOfBirth.InputTextType)" name="x_CityOfBirth" id="x_CityOfBirth" data-table="MTCrew" data-field="x_CityOfBirth" value="@Html.Raw(mtCrewAdd.CityOfBirth.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.CityOfBirth.PlaceHolder))" data-format-pattern="@(mtCrewAdd.CityOfBirth.FormatPattern)"@Html.Raw(mtCrewAdd.CityOfBirth.EditAttributes) aria-describedby="x_CityOfBirth_help">
@Html.Raw(mtCrewAdd.CityOfBirth.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.CityOfBirth.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.CityOfBirth.Visible (end) *@
@if (mtCrewAdd.MaritalStatus.Visible) { // mtCrewAdd.MaritalStatus.Visible (begin)
    <div id="r_MaritalStatus" @Html.Raw(mtCrewAdd.MaritalStatus.RowAttributes)>
        <label id="elh_MTCrew_MaritalStatus" for="x_MaritalStatus" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.MaritalStatus.Caption)@Html.Raw(mtCrewAdd.MaritalStatus.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.MaritalStatus.CellAttributes)>
<span id="el_MTCrew_MaritalStatus">
    <select
        id="x_MaritalStatus"
        name="x_MaritalStatus"
        class="form-select ew-select@(mtCrewAdd.MaritalStatus.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_MaritalStatus"
        data-table="MTCrew"
        data-field="x_MaritalStatus"
        data-value-separator="@(mtCrewAdd.MaritalStatus.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.MaritalStatus.PlaceHolder))"
        @Html.Raw(mtCrewAdd.MaritalStatus.EditAttributes)>
        @(mtCrewAdd.MaritalStatus.SelectOptionListHtml("x_MaritalStatus"))
    </select>
    @Html.Raw(mtCrewAdd.MaritalStatus.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.MaritalStatus.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_MaritalStatus", selectId: "fMTCrewadd_x_MaritalStatus" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.MaritalStatus?.lookupOptions.length) {
        options.data = { id: "x_MaritalStatus", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_MaritalStatus", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.MaritalStatus.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.MaritalStatus.Visible (end) *@
@if (mtCrewAdd.Gender.Visible) { // mtCrewAdd.Gender.Visible (begin)
    <div id="r_Gender" @Html.Raw(mtCrewAdd.Gender.RowAttributes)>
        <label id="elh_MTCrew_Gender" for="x_Gender" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Gender.Caption)@Html.Raw(mtCrewAdd.Gender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Gender.CellAttributes)>
<span id="el_MTCrew_Gender">
    <select
        id="x_Gender"
        name="x_Gender"
        class="form-select ew-select@(mtCrewAdd.Gender.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Gender"
        data-table="MTCrew"
        data-field="x_Gender"
        data-value-separator="@(mtCrewAdd.Gender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Gender.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Gender.EditAttributes)>
        @(mtCrewAdd.Gender.SelectOptionListHtml("x_Gender"))
    </select>
    @Html.Raw(mtCrewAdd.Gender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Gender.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Gender", selectId: "fMTCrewadd_x_Gender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Gender?.lookupOptions.length) {
        options.data = { id: "x_Gender", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Gender", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Gender.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Gender.Visible (end) *@
@if (mtCrewAdd.ReligionID.Visible) { // mtCrewAdd.ReligionID.Visible (begin)
    <div id="r_ReligionID" @Html.Raw(mtCrewAdd.ReligionID.RowAttributes)>
        <label id="elh_MTCrew_ReligionID" for="x_ReligionID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.ReligionID.Caption)@Html.Raw(mtCrewAdd.ReligionID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.ReligionID.CellAttributes)>
<span id="el_MTCrew_ReligionID">
    <select
        id="x_ReligionID"
        name="x_ReligionID"
        class="form-select ew-select@(mtCrewAdd.ReligionID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_ReligionID"
        data-table="MTCrew"
        data-field="x_ReligionID"
        data-value-separator="@(mtCrewAdd.ReligionID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.ReligionID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.ReligionID.EditAttributes)>
        @(mtCrewAdd.ReligionID.SelectOptionListHtml("x_ReligionID"))
    </select>
    @Html.Raw(mtCrewAdd.ReligionID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.ReligionID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.ReligionID.Lookup.GetParamTag(mtCrewAdd, "p_x_ReligionID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_ReligionID", selectId: "fMTCrewadd_x_ReligionID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.ReligionID?.lookupOptions.length) {
        options.data = { id: "x_ReligionID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_ReligionID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.ReligionID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.ReligionID.Visible (end) *@
@if (mtCrewAdd.BloodType.Visible) { // mtCrewAdd.BloodType.Visible (begin)
    <div id="r_BloodType" @Html.Raw(mtCrewAdd.BloodType.RowAttributes)>
        <label id="elh_MTCrew_BloodType" for="x_BloodType" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.BloodType.Caption)@Html.Raw(mtCrewAdd.BloodType.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.BloodType.CellAttributes)>
<span id="el_MTCrew_BloodType">
    <select
        id="x_BloodType"
        name="x_BloodType"
        class="form-select ew-select@(mtCrewAdd.BloodType.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_BloodType"
        data-table="MTCrew"
        data-field="x_BloodType"
        data-value-separator="@(mtCrewAdd.BloodType.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.BloodType.PlaceHolder))"
        @Html.Raw(mtCrewAdd.BloodType.EditAttributes)>
        @(mtCrewAdd.BloodType.SelectOptionListHtml("x_BloodType"))
    </select>
    @Html.Raw(mtCrewAdd.BloodType.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.BloodType.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_BloodType", selectId: "fMTCrewadd_x_BloodType" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.BloodType?.lookupOptions.length) {
        options.data = { id: "x_BloodType", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_BloodType", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.BloodType.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.BloodType.Visible (end) *@
@if (mtCrewAdd.RankAppliedFor_RankID.Visible) { // mtCrewAdd.RankAppliedFor_RankID.Visible (begin)
    <div id="r_RankAppliedFor_RankID" @Html.Raw(mtCrewAdd.RankAppliedFor_RankID.RowAttributes)>
        <label id="elh_MTCrew_RankAppliedFor_RankID" for="x_RankAppliedFor_RankID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.RankAppliedFor_RankID.Caption)@Html.Raw(mtCrewAdd.RankAppliedFor_RankID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.RankAppliedFor_RankID.CellAttributes)>
<span id="el_MTCrew_RankAppliedFor_RankID">
    <select
        id="x_RankAppliedFor_RankID"
        name="x_RankAppliedFor_RankID"
        class="form-select ew-select@(mtCrewAdd.RankAppliedFor_RankID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_RankAppliedFor_RankID"
        data-table="MTCrew"
        data-field="x_RankAppliedFor_RankID"
        data-value-separator="@(mtCrewAdd.RankAppliedFor_RankID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.RankAppliedFor_RankID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.RankAppliedFor_RankID.EditAttributes)>
        @(mtCrewAdd.RankAppliedFor_RankID.SelectOptionListHtml("x_RankAppliedFor_RankID"))
    </select>
    @Html.Raw(mtCrewAdd.RankAppliedFor_RankID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.RankAppliedFor_RankID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.RankAppliedFor_RankID.Lookup.GetParamTag(mtCrewAdd, "p_x_RankAppliedFor_RankID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_RankAppliedFor_RankID", selectId: "fMTCrewadd_x_RankAppliedFor_RankID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.RankAppliedFor_RankID?.lookupOptions.length) {
        options.data = { id: "x_RankAppliedFor_RankID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_RankAppliedFor_RankID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.RankAppliedFor_RankID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.RankAppliedFor_RankID.Visible (end) *@
@if (mtCrewAdd.WillAcceptLowRank.Visible) { // mtCrewAdd.WillAcceptLowRank.Visible (begin)
    <div id="r_WillAcceptLowRank" @Html.Raw(mtCrewAdd.WillAcceptLowRank.RowAttributes)>
        <label id="elh_MTCrew_WillAcceptLowRank" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.WillAcceptLowRank.Caption)@Html.Raw(mtCrewAdd.WillAcceptLowRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.WillAcceptLowRank.CellAttributes)>
<span id="el_MTCrew_WillAcceptLowRank">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewAdd.WillAcceptLowRank.IsInvalidClass)" data-table="MTCrew" data-field="x_WillAcceptLowRank" data-boolean name="x_WillAcceptLowRank" id="x_WillAcceptLowRank" value="1" checked="@ConvertToBool(mtCrewAdd.WillAcceptLowRank.CurrentValue)" @Html.Raw(mtCrewAdd.WillAcceptLowRank.EditAttributes) aria-describedby="x_WillAcceptLowRank_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.WillAcceptLowRank.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewAdd.WillAcceptLowRank.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewAdd.WillAcceptLowRank.Visible (end) *@
@if (mtCrewAdd.AvailableFrom.Visible) { // mtCrewAdd.AvailableFrom.Visible (begin)
    <div id="r_AvailableFrom" @Html.Raw(mtCrewAdd.AvailableFrom.RowAttributes)>
        <label id="elh_MTCrew_AvailableFrom" for="x_AvailableFrom" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AvailableFrom.Caption)@Html.Raw(mtCrewAdd.AvailableFrom.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AvailableFrom.CellAttributes)>
<span id="el_MTCrew_AvailableFrom">
<input type="@(mtCrewAdd.AvailableFrom.InputTextType)" name="x_AvailableFrom" id="x_AvailableFrom" data-table="MTCrew" data-field="x_AvailableFrom" value="@Html.Raw(mtCrewAdd.AvailableFrom.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AvailableFrom.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AvailableFrom.FormatPattern)"@Html.Raw(mtCrewAdd.AvailableFrom.EditAttributes) aria-describedby="x_AvailableFrom_help">
@Html.Raw(mtCrewAdd.AvailableFrom.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AvailableFrom.GetErrorMessage())</div>
@if (!mtCrewAdd.AvailableFrom.ReadOnly && !mtCrewAdd.AvailableFrom.Disabled && !mtCrewAdd.AvailableFrom.EditAttrs.Is("readonly") && !mtCrewAdd.AvailableFrom.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewadd", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewadd", "x_AvailableFrom", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewAdd.AvailableFrom.Visible (end) *@
@if (mtCrewAdd.AvailableUntil.Visible) { // mtCrewAdd.AvailableUntil.Visible (begin)
    <div id="r_AvailableUntil" @Html.Raw(mtCrewAdd.AvailableUntil.RowAttributes)>
        <label id="elh_MTCrew_AvailableUntil" for="x_AvailableUntil" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AvailableUntil.Caption)@Html.Raw(mtCrewAdd.AvailableUntil.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AvailableUntil.CellAttributes)>
<span id="el_MTCrew_AvailableUntil">
<input type="@(mtCrewAdd.AvailableUntil.InputTextType)" name="x_AvailableUntil" id="x_AvailableUntil" data-table="MTCrew" data-field="x_AvailableUntil" value="@Html.Raw(mtCrewAdd.AvailableUntil.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AvailableUntil.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AvailableUntil.FormatPattern)"@Html.Raw(mtCrewAdd.AvailableUntil.EditAttributes) aria-describedby="x_AvailableUntil_help">
@Html.Raw(mtCrewAdd.AvailableUntil.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AvailableUntil.GetErrorMessage())</div>
@if (!mtCrewAdd.AvailableUntil.ReadOnly && !mtCrewAdd.AvailableUntil.Disabled && !mtCrewAdd.AvailableUntil.EditAttrs.Is("readonly") && !mtCrewAdd.AvailableUntil.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewadd", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewadd", "x_AvailableUntil", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewAdd.AvailableUntil.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressDetail.Visible) { // mtCrewAdd.PrimaryAddressDetail.Visible (begin)
    <div id="r_PrimaryAddressDetail" @Html.Raw(mtCrewAdd.PrimaryAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressDetail" for="x_PrimaryAddressDetail" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressDetail.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressDetail.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressDetail">
<textarea data-table="MTCrew" data-field="x_PrimaryAddressDetail" name="x_PrimaryAddressDetail" id="x_PrimaryAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressDetail.PlaceHolder))"@Html.Raw(mtCrewAdd.PrimaryAddressDetail.EditAttributes) aria-describedby="x_PrimaryAddressDetail_help">@(mtCrewAdd.PrimaryAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewAdd.PrimaryAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressDetail.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressCity.Visible) { // mtCrewAdd.PrimaryAddressCity.Visible (begin)
    <div id="r_PrimaryAddressCity" @Html.Raw(mtCrewAdd.PrimaryAddressCity.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressCity" for="x_PrimaryAddressCity" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressCity.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressCity.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressCity">
<input type="@(mtCrewAdd.PrimaryAddressCity.InputTextType)" name="x_PrimaryAddressCity" id="x_PrimaryAddressCity" data-table="MTCrew" data-field="x_PrimaryAddressCity" value="@Html.Raw(mtCrewAdd.PrimaryAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressCity.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressCity.EditAttributes) aria-describedby="x_PrimaryAddressCity_help">
@Html.Raw(mtCrewAdd.PrimaryAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressCity.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressState.Visible) { // mtCrewAdd.PrimaryAddressState.Visible (begin)
    <div id="r_PrimaryAddressState" @Html.Raw(mtCrewAdd.PrimaryAddressState.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressState" for="x_PrimaryAddressState" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressState.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressState.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressState">
<input type="@(mtCrewAdd.PrimaryAddressState.InputTextType)" name="x_PrimaryAddressState" id="x_PrimaryAddressState" data-table="MTCrew" data-field="x_PrimaryAddressState" value="@Html.Raw(mtCrewAdd.PrimaryAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressState.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressState.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressState.EditAttributes) aria-describedby="x_PrimaryAddressState_help">
@Html.Raw(mtCrewAdd.PrimaryAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressState.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressState.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressNearestAirport.Visible) { // mtCrewAdd.PrimaryAddressNearestAirport.Visible (begin)
    <div id="r_PrimaryAddressNearestAirport" @Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressNearestAirport" for="x_PrimaryAddressNearestAirport" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressNearestAirport">
<input type="@(mtCrewAdd.PrimaryAddressNearestAirport.InputTextType)" name="x_PrimaryAddressNearestAirport" id="x_PrimaryAddressNearestAirport" data-table="MTCrew" data-field="x_PrimaryAddressNearestAirport" value="@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressNearestAirport.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressNearestAirport.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.EditAttributes) aria-describedby="x_PrimaryAddressNearestAirport_help">
@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressNearestAirport.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressNearestAirport.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressPostCode.Visible) { // mtCrewAdd.PrimaryAddressPostCode.Visible (begin)
    <div id="r_PrimaryAddressPostCode" @Html.Raw(mtCrewAdd.PrimaryAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressPostCode" for="x_PrimaryAddressPostCode" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressPostCode.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressPostCode">
<input type="@(mtCrewAdd.PrimaryAddressPostCode.InputTextType)" name="x_PrimaryAddressPostCode" id="x_PrimaryAddressPostCode" data-table="MTCrew" data-field="x_PrimaryAddressPostCode" value="@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressPostCode.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.EditAttributes) aria-describedby="x_PrimaryAddressPostCode_help">
@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressPostCode.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressCountryID.Visible) { // mtCrewAdd.PrimaryAddressCountryID.Visible (begin)
    <div id="r_PrimaryAddressCountryID" @Html.Raw(mtCrewAdd.PrimaryAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressCountryID" for="x_PrimaryAddressCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressCountryID.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressCountryID.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressCountryID">
    <select
        id="x_PrimaryAddressCountryID"
        name="x_PrimaryAddressCountryID"
        class="form-select ew-select@(mtCrewAdd.PrimaryAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_PrimaryAddressCountryID"
        data-table="MTCrew"
        data-field="x_PrimaryAddressCountryID"
        data-value-separator="@(mtCrewAdd.PrimaryAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.PrimaryAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.PrimaryAddressCountryID.EditAttributes)>
        @(mtCrewAdd.PrimaryAddressCountryID.SelectOptionListHtml("x_PrimaryAddressCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.PrimaryAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.PrimaryAddressCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_PrimaryAddressCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_PrimaryAddressCountryID", selectId: "fMTCrewadd_x_PrimaryAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.PrimaryAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_PrimaryAddressCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PrimaryAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressCountryID.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressHomeTel.Visible) { // mtCrewAdd.PrimaryAddressHomeTel.Visible (begin)
    <div id="r_PrimaryAddressHomeTel" @Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressHomeTel" for="x_PrimaryAddressHomeTel" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressHomeTel">
<input type="@(mtCrewAdd.PrimaryAddressHomeTel.InputTextType)" name="x_PrimaryAddressHomeTel" id="x_PrimaryAddressHomeTel" data-table="MTCrew" data-field="x_PrimaryAddressHomeTel" value="@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.EditAttributes) aria-describedby="x_PrimaryAddressHomeTel_help">
@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressHomeTel.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressFax.Visible) { // mtCrewAdd.PrimaryAddressFax.Visible (begin)
    <div id="r_PrimaryAddressFax" @Html.Raw(mtCrewAdd.PrimaryAddressFax.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressFax" for="x_PrimaryAddressFax" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressFax.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressFax.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressFax.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressFax">
<input type="@(mtCrewAdd.PrimaryAddressFax.InputTextType)" name="x_PrimaryAddressFax" id="x_PrimaryAddressFax" data-table="MTCrew" data-field="x_PrimaryAddressFax" value="@Html.Raw(mtCrewAdd.PrimaryAddressFax.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PrimaryAddressFax.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PrimaryAddressFax.FormatPattern)"@Html.Raw(mtCrewAdd.PrimaryAddressFax.EditAttributes) aria-describedby="x_PrimaryAddressFax_help">
@Html.Raw(mtCrewAdd.PrimaryAddressFax.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressFax.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressFax.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressDetail.Visible) { // mtCrewAdd.AlternativeAddressDetail.Visible (begin)
    <div id="r_AlternativeAddressDetail" @Html.Raw(mtCrewAdd.AlternativeAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressDetail" for="x_AlternativeAddressDetail" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressDetail.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressDetail.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressDetail">
<textarea data-table="MTCrew" data-field="x_AlternativeAddressDetail" name="x_AlternativeAddressDetail" id="x_AlternativeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AlternativeAddressDetail.PlaceHolder))"@Html.Raw(mtCrewAdd.AlternativeAddressDetail.EditAttributes) aria-describedby="x_AlternativeAddressDetail_help">@(mtCrewAdd.AlternativeAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewAdd.AlternativeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressDetail.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressCity.Visible) { // mtCrewAdd.AlternativeAddressCity.Visible (begin)
    <div id="r_AlternativeAddressCity" @Html.Raw(mtCrewAdd.AlternativeAddressCity.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressCity" for="x_AlternativeAddressCity" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressCity.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressCity.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressCity">
<input type="@(mtCrewAdd.AlternativeAddressCity.InputTextType)" name="x_AlternativeAddressCity" id="x_AlternativeAddressCity" data-table="MTCrew" data-field="x_AlternativeAddressCity" value="@Html.Raw(mtCrewAdd.AlternativeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AlternativeAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AlternativeAddressCity.FormatPattern)"@Html.Raw(mtCrewAdd.AlternativeAddressCity.EditAttributes) aria-describedby="x_AlternativeAddressCity_help">
@Html.Raw(mtCrewAdd.AlternativeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressCity.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressState.Visible) { // mtCrewAdd.AlternativeAddressState.Visible (begin)
    <div id="r_AlternativeAddressState" @Html.Raw(mtCrewAdd.AlternativeAddressState.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressState" for="x_AlternativeAddressState" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressState.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressState.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressState.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressState">
<input type="@(mtCrewAdd.AlternativeAddressState.InputTextType)" name="x_AlternativeAddressState" id="x_AlternativeAddressState" data-table="MTCrew" data-field="x_AlternativeAddressState" value="@Html.Raw(mtCrewAdd.AlternativeAddressState.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AlternativeAddressState.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AlternativeAddressState.FormatPattern)"@Html.Raw(mtCrewAdd.AlternativeAddressState.EditAttributes) aria-describedby="x_AlternativeAddressState_help">
@Html.Raw(mtCrewAdd.AlternativeAddressState.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressState.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressState.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressHomeTel.Visible) { // mtCrewAdd.AlternativeAddressHomeTel.Visible (begin)
    <div id="r_AlternativeAddressHomeTel" @Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressHomeTel" for="x_AlternativeAddressHomeTel" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressHomeTel">
<input type="@(mtCrewAdd.AlternativeAddressHomeTel.InputTextType)" name="x_AlternativeAddressHomeTel" id="x_AlternativeAddressHomeTel" data-table="MTCrew" data-field="x_AlternativeAddressHomeTel" value="@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AlternativeAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AlternativeAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.EditAttributes) aria-describedby="x_AlternativeAddressHomeTel_help">
@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressHomeTel.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressPostCode.Visible) { // mtCrewAdd.AlternativeAddressPostCode.Visible (begin)
    <div id="r_AlternativeAddressPostCode" @Html.Raw(mtCrewAdd.AlternativeAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressPostCode" for="x_AlternativeAddressPostCode" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressPostCode.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressPostCode">
<input type="@(mtCrewAdd.AlternativeAddressPostCode.InputTextType)" name="x_AlternativeAddressPostCode" id="x_AlternativeAddressPostCode" data-table="MTCrew" data-field="x_AlternativeAddressPostCode" value="@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.AlternativeAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewAdd.AlternativeAddressPostCode.FormatPattern)"@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.EditAttributes) aria-describedby="x_AlternativeAddressPostCode_help">
@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressPostCode.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressCountryID.Visible) { // mtCrewAdd.AlternativeAddressCountryID.Visible (begin)
    <div id="r_AlternativeAddressCountryID" @Html.Raw(mtCrewAdd.AlternativeAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressCountryID" for="x_AlternativeAddressCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressCountryID.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressCountryID.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressCountryID">
    <select
        id="x_AlternativeAddressCountryID"
        name="x_AlternativeAddressCountryID"
        class="form-select ew-select@(mtCrewAdd.AlternativeAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_AlternativeAddressCountryID"
        data-table="MTCrew"
        data-field="x_AlternativeAddressCountryID"
        data-value-separator="@(mtCrewAdd.AlternativeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.AlternativeAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.AlternativeAddressCountryID.EditAttributes)>
        @(mtCrewAdd.AlternativeAddressCountryID.SelectOptionListHtml("x_AlternativeAddressCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.AlternativeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.AlternativeAddressCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_AlternativeAddressCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_AlternativeAddressCountryID", selectId: "fMTCrewadd_x_AlternativeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.AlternativeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_AlternativeAddressCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.AlternativeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressCountryID.Visible (end) *@
@if (mtCrewAdd.MobileNumber.Visible) { // mtCrewAdd.MobileNumber.Visible (begin)
    <div id="r_MobileNumber" @Html.Raw(mtCrewAdd.MobileNumber.RowAttributes)>
        <label id="elh_MTCrew_MobileNumber" for="x_MobileNumber" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.MobileNumber.Caption)@Html.Raw(mtCrewAdd.MobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.MobileNumber.CellAttributes)>
<span id="el_MTCrew_MobileNumber">
<input type="@(mtCrewAdd.MobileNumber.InputTextType)" name="x_MobileNumber" id="x_MobileNumber" data-table="MTCrew" data-field="x_MobileNumber" value="@Html.Raw(mtCrewAdd.MobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.MobileNumber.PlaceHolder))" data-format-pattern="@(mtCrewAdd.MobileNumber.FormatPattern)"@Html.Raw(mtCrewAdd.MobileNumber.EditAttributes) aria-describedby="x_MobileNumber_help">
@Html.Raw(mtCrewAdd.MobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.MobileNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.MobileNumber.Visible (end) *@
@if (mtCrewAdd._Email.Visible) { // mtCrewAdd._Email.Visible (begin)
    <div id="r__Email" @Html.Raw(mtCrewAdd._Email.RowAttributes)>
        <label id="elh_MTCrew__Email" for="x__Email" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd._Email.Caption)@Html.Raw(mtCrewAdd._Email.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd._Email.CellAttributes)>
<span id="el_MTCrew__Email">
<input type="@(mtCrewAdd._Email.InputTextType)" name="x__Email" id="x__Email" data-table="MTCrew" data-field="x__Email" value="@Html.Raw(mtCrewAdd._Email.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd._Email.PlaceHolder))" data-format-pattern="@(mtCrewAdd._Email.FormatPattern)"@Html.Raw(mtCrewAdd._Email.EditAttributes) aria-describedby="x__Email_help">
@Html.Raw(mtCrewAdd._Email.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd._Email.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd._Email.Visible (end) *@
@if (mtCrewAdd.SocialSecurityNumber.Visible) { // mtCrewAdd.SocialSecurityNumber.Visible (begin)
    <div id="r_SocialSecurityNumber" @Html.Raw(mtCrewAdd.SocialSecurityNumber.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityNumber" for="x_SocialSecurityNumber" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.SocialSecurityNumber.Caption)@Html.Raw(mtCrewAdd.SocialSecurityNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.SocialSecurityNumber.CellAttributes)>
<span id="el_MTCrew_SocialSecurityNumber">
<input type="@(mtCrewAdd.SocialSecurityNumber.InputTextType)" name="x_SocialSecurityNumber" id="x_SocialSecurityNumber" data-table="MTCrew" data-field="x_SocialSecurityNumber" value="@Html.Raw(mtCrewAdd.SocialSecurityNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.SocialSecurityNumber.PlaceHolder))" data-format-pattern="@(mtCrewAdd.SocialSecurityNumber.FormatPattern)"@Html.Raw(mtCrewAdd.SocialSecurityNumber.EditAttributes) aria-describedby="x_SocialSecurityNumber_help">
@Html.Raw(mtCrewAdd.SocialSecurityNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.SocialSecurityNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.SocialSecurityNumber.Visible (end) *@
@if (mtCrewAdd.SocialSecurityIssuingCountryID.Visible) { // mtCrewAdd.SocialSecurityIssuingCountryID.Visible (begin)
    <div id="r_SocialSecurityIssuingCountryID" @Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityIssuingCountryID" for="x_SocialSecurityIssuingCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.Caption)@Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.CellAttributes)>
<span id="el_MTCrew_SocialSecurityIssuingCountryID">
    <select
        id="x_SocialSecurityIssuingCountryID"
        name="x_SocialSecurityIssuingCountryID"
        class="form-select ew-select@(mtCrewAdd.SocialSecurityIssuingCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_SocialSecurityIssuingCountryID"
        data-table="MTCrew"
        data-field="x_SocialSecurityIssuingCountryID"
        data-value-separator="@(mtCrewAdd.SocialSecurityIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.SocialSecurityIssuingCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.EditAttributes)>
        @(mtCrewAdd.SocialSecurityIssuingCountryID.SelectOptionListHtml("x_SocialSecurityIssuingCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.SocialSecurityIssuingCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_SocialSecurityIssuingCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_SocialSecurityIssuingCountryID", selectId: "fMTCrewadd_x_SocialSecurityIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.SocialSecurityIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_SocialSecurityIssuingCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_SocialSecurityIssuingCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.SocialSecurityIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.SocialSecurityIssuingCountryID.Visible (end) *@
@if (mtCrewAdd.SocialSecurityImage.Visible) { // mtCrewAdd.SocialSecurityImage.Visible (begin)
    <div id="r_SocialSecurityImage" @Html.Raw(mtCrewAdd.SocialSecurityImage.RowAttributes)>
        <label id="elh_MTCrew_SocialSecurityImage" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.SocialSecurityImage.Caption)@Html.Raw(mtCrewAdd.SocialSecurityImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.SocialSecurityImage.CellAttributes)>
<span id="el_MTCrew_SocialSecurityImage">
<div id="fd_x_SocialSecurityImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_SocialSecurityImage"
        name="x_SocialSecurityImage"
        class="form-control ew-file-input"
        title="@(mtCrewAdd.SocialSecurityImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_SocialSecurityImage"
        data-size="100"
        data-accept-file-types="@(mtCrewAdd.SocialSecurityImage.AcceptFileTypes)"
        data-max-file-size="@(mtCrewAdd.SocialSecurityImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewAdd.SocialSecurityImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_SocialSecurityImage_help"
        @Html.Raw((mtCrewAdd.SocialSecurityImage.ReadOnly || mtCrewAdd.SocialSecurityImage.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewAdd.SocialSecurityImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewAdd.SocialSecurityImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.SocialSecurityImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_SocialSecurityImage" id= "fn_x_SocialSecurityImage" value="@(mtCrewAdd.SocialSecurityImage.Upload.FileName)">
<input type="hidden" name="fa_x_SocialSecurityImage" id= "fa_x_SocialSecurityImage" value="0">
<table id="ft_x_SocialSecurityImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewAdd.SocialSecurityImage.Visible (end) *@
@if (mtCrewAdd.PersonalTaxNumber.Visible) { // mtCrewAdd.PersonalTaxNumber.Visible (begin)
    <div id="r_PersonalTaxNumber" @Html.Raw(mtCrewAdd.PersonalTaxNumber.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxNumber" for="x_PersonalTaxNumber" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PersonalTaxNumber.Caption)@Html.Raw(mtCrewAdd.PersonalTaxNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PersonalTaxNumber.CellAttributes)>
<span id="el_MTCrew_PersonalTaxNumber">
<input type="@(mtCrewAdd.PersonalTaxNumber.InputTextType)" name="x_PersonalTaxNumber" id="x_PersonalTaxNumber" data-table="MTCrew" data-field="x_PersonalTaxNumber" value="@Html.Raw(mtCrewAdd.PersonalTaxNumber.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.PersonalTaxNumber.PlaceHolder))" data-format-pattern="@(mtCrewAdd.PersonalTaxNumber.FormatPattern)"@Html.Raw(mtCrewAdd.PersonalTaxNumber.EditAttributes) aria-describedby="x_PersonalTaxNumber_help">
@Html.Raw(mtCrewAdd.PersonalTaxNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PersonalTaxNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PersonalTaxNumber.Visible (end) *@
@if (mtCrewAdd.PersonalTaxIssuingCountryID.Visible) { // mtCrewAdd.PersonalTaxIssuingCountryID.Visible (begin)
    <div id="r_PersonalTaxIssuingCountryID" @Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxIssuingCountryID" for="x_PersonalTaxIssuingCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.Caption)@Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.CellAttributes)>
<span id="el_MTCrew_PersonalTaxIssuingCountryID">
    <select
        id="x_PersonalTaxIssuingCountryID"
        name="x_PersonalTaxIssuingCountryID"
        class="form-select ew-select@(mtCrewAdd.PersonalTaxIssuingCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_PersonalTaxIssuingCountryID"
        data-table="MTCrew"
        data-field="x_PersonalTaxIssuingCountryID"
        data-value-separator="@(mtCrewAdd.PersonalTaxIssuingCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.PersonalTaxIssuingCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.EditAttributes)>
        @(mtCrewAdd.PersonalTaxIssuingCountryID.SelectOptionListHtml("x_PersonalTaxIssuingCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.PersonalTaxIssuingCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_PersonalTaxIssuingCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_PersonalTaxIssuingCountryID", selectId: "fMTCrewadd_x_PersonalTaxIssuingCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.PersonalTaxIssuingCountryID?.lookupOptions.length) {
        options.data = { id: "x_PersonalTaxIssuingCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_PersonalTaxIssuingCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PersonalTaxIssuingCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PersonalTaxIssuingCountryID.Visible (end) *@
@if (mtCrewAdd.PersonalTaxImage.Visible) { // mtCrewAdd.PersonalTaxImage.Visible (begin)
    <div id="r_PersonalTaxImage" @Html.Raw(mtCrewAdd.PersonalTaxImage.RowAttributes)>
        <label id="elh_MTCrew_PersonalTaxImage" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PersonalTaxImage.Caption)@Html.Raw(mtCrewAdd.PersonalTaxImage.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PersonalTaxImage.CellAttributes)>
<span id="el_MTCrew_PersonalTaxImage">
<div id="fd_x_PersonalTaxImage" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_PersonalTaxImage"
        name="x_PersonalTaxImage"
        class="form-control ew-file-input"
        title="@(mtCrewAdd.PersonalTaxImage.Title)"
        lang="@(CurrentLanguageID)"
        data-table="MTCrew"
        data-field="x_PersonalTaxImage"
        data-size="100"
        data-accept-file-types="@(mtCrewAdd.PersonalTaxImage.AcceptFileTypes)"
        data-max-file-size="@(mtCrewAdd.PersonalTaxImage.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(mtCrewAdd.PersonalTaxImage.ImageCropper ? 0 : 1)"
        aria-describedby="x_PersonalTaxImage_help"
        @Html.Raw((mtCrewAdd.PersonalTaxImage.ReadOnly || mtCrewAdd.PersonalTaxImage.Disabled) ? " disabled" : "")
        @Html.Raw(mtCrewAdd.PersonalTaxImage.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(mtCrewAdd.PersonalTaxImage.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.PersonalTaxImage.GetErrorMessage())</div>
<input type="hidden" name="fn_x_PersonalTaxImage" id= "fn_x_PersonalTaxImage" value="@(mtCrewAdd.PersonalTaxImage.Upload.FileName)">
<input type="hidden" name="fa_x_PersonalTaxImage" id= "fa_x_PersonalTaxImage" value="0">
<table id="ft_x_PersonalTaxImage" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PersonalTaxImage.Visible (end) *@
@if (mtCrewAdd.NomineeFullName.Visible) { // mtCrewAdd.NomineeFullName.Visible (begin)
    <div id="r_NomineeFullName" @Html.Raw(mtCrewAdd.NomineeFullName.RowAttributes)>
        <label id="elh_MTCrew_NomineeFullName" for="x_NomineeFullName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeFullName.Caption)@Html.Raw(mtCrewAdd.NomineeFullName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeFullName.CellAttributes)>
<span id="el_MTCrew_NomineeFullName">
<input type="@(mtCrewAdd.NomineeFullName.InputTextType)" name="x_NomineeFullName" id="x_NomineeFullName" data-table="MTCrew" data-field="x_NomineeFullName" value="@Html.Raw(mtCrewAdd.NomineeFullName.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeFullName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeFullName.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeFullName.EditAttributes) aria-describedby="x_NomineeFullName_help">
@Html.Raw(mtCrewAdd.NomineeFullName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeFullName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeFullName.Visible (end) *@
@if (mtCrewAdd.NomineeRelationship.Visible) { // mtCrewAdd.NomineeRelationship.Visible (begin)
    <div id="r_NomineeRelationship" @Html.Raw(mtCrewAdd.NomineeRelationship.RowAttributes)>
        <label id="elh_MTCrew_NomineeRelationship" for="x_NomineeRelationship" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeRelationship.Caption)@Html.Raw(mtCrewAdd.NomineeRelationship.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeRelationship.CellAttributes)>
<span id="el_MTCrew_NomineeRelationship">
<input type="@(mtCrewAdd.NomineeRelationship.InputTextType)" name="x_NomineeRelationship" id="x_NomineeRelationship" data-table="MTCrew" data-field="x_NomineeRelationship" value="@Html.Raw(mtCrewAdd.NomineeRelationship.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeRelationship.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeRelationship.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeRelationship.EditAttributes) aria-describedby="x_NomineeRelationship_help">
@Html.Raw(mtCrewAdd.NomineeRelationship.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeRelationship.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeRelationship.Visible (end) *@
@if (mtCrewAdd.NomineeGender.Visible) { // mtCrewAdd.NomineeGender.Visible (begin)
    <div id="r_NomineeGender" @Html.Raw(mtCrewAdd.NomineeGender.RowAttributes)>
        <label id="elh_MTCrew_NomineeGender" for="x_NomineeGender" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeGender.Caption)@Html.Raw(mtCrewAdd.NomineeGender.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeGender.CellAttributes)>
<span id="el_MTCrew_NomineeGender">
    <select
        id="x_NomineeGender"
        name="x_NomineeGender"
        class="form-select ew-select@(mtCrewAdd.NomineeGender.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_NomineeGender"
        data-table="MTCrew"
        data-field="x_NomineeGender"
        data-value-separator="@(mtCrewAdd.NomineeGender.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.NomineeGender.PlaceHolder))"
        @Html.Raw(mtCrewAdd.NomineeGender.EditAttributes)>
        @(mtCrewAdd.NomineeGender.SelectOptionListHtml("x_NomineeGender"))
    </select>
    @Html.Raw(mtCrewAdd.NomineeGender.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeGender.GetErrorMessage())</div>
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_NomineeGender", selectId: "fMTCrewadd_x_NomineeGender" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.NomineeGender?.lookupOptions.length) {
        options.data = { id: "x_NomineeGender", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_NomineeGender", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeGender.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeGender.Visible (end) *@
@if (mtCrewAdd.NomineeNationality_CountryID.Visible) { // mtCrewAdd.NomineeNationality_CountryID.Visible (begin)
    <div id="r_NomineeNationality_CountryID" @Html.Raw(mtCrewAdd.NomineeNationality_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeNationality_CountryID" for="x_NomineeNationality_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeNationality_CountryID.Caption)@Html.Raw(mtCrewAdd.NomineeNationality_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeNationality_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeNationality_CountryID">
    <select
        id="x_NomineeNationality_CountryID"
        name="x_NomineeNationality_CountryID"
        class="form-select ew-select@(mtCrewAdd.NomineeNationality_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_NomineeNationality_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeNationality_CountryID"
        data-value-separator="@(mtCrewAdd.NomineeNationality_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.NomineeNationality_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.NomineeNationality_CountryID.EditAttributes)>
        @(mtCrewAdd.NomineeNationality_CountryID.SelectOptionListHtml("x_NomineeNationality_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.NomineeNationality_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeNationality_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.NomineeNationality_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_NomineeNationality_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_NomineeNationality_CountryID", selectId: "fMTCrewadd_x_NomineeNationality_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.NomineeNationality_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeNationality_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_NomineeNationality_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeNationality_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeNationality_CountryID.Visible (end) *@
@if (mtCrewAdd.NomineeAddressDetail.Visible) { // mtCrewAdd.NomineeAddressDetail.Visible (begin)
    <div id="r_NomineeAddressDetail" @Html.Raw(mtCrewAdd.NomineeAddressDetail.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressDetail" for="x_NomineeAddressDetail" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressDetail.Caption)@Html.Raw(mtCrewAdd.NomineeAddressDetail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressDetail.CellAttributes)>
<span id="el_MTCrew_NomineeAddressDetail">
<textarea data-table="MTCrew" data-field="x_NomineeAddressDetail" name="x_NomineeAddressDetail" id="x_NomineeAddressDetail" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeAddressDetail.PlaceHolder))"@Html.Raw(mtCrewAdd.NomineeAddressDetail.EditAttributes) aria-describedby="x_NomineeAddressDetail_help">@(mtCrewAdd.NomineeAddressDetail.EditValue)</textarea>
@Html.Raw(mtCrewAdd.NomineeAddressDetail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressDetail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressDetail.Visible (end) *@
@if (mtCrewAdd.NomineeAddressCity.Visible) { // mtCrewAdd.NomineeAddressCity.Visible (begin)
    <div id="r_NomineeAddressCity" @Html.Raw(mtCrewAdd.NomineeAddressCity.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressCity" for="x_NomineeAddressCity" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressCity.Caption)@Html.Raw(mtCrewAdd.NomineeAddressCity.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressCity.CellAttributes)>
<span id="el_MTCrew_NomineeAddressCity">
<input type="@(mtCrewAdd.NomineeAddressCity.InputTextType)" name="x_NomineeAddressCity" id="x_NomineeAddressCity" data-table="MTCrew" data-field="x_NomineeAddressCity" value="@Html.Raw(mtCrewAdd.NomineeAddressCity.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeAddressCity.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeAddressCity.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeAddressCity.EditAttributes) aria-describedby="x_NomineeAddressCity_help">
@Html.Raw(mtCrewAdd.NomineeAddressCity.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressCity.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressCity.Visible (end) *@
@if (mtCrewAdd.NomineeAddressPostCode.Visible) { // mtCrewAdd.NomineeAddressPostCode.Visible (begin)
    <div id="r_NomineeAddressPostCode" @Html.Raw(mtCrewAdd.NomineeAddressPostCode.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressPostCode" for="x_NomineeAddressPostCode" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressPostCode.Caption)@Html.Raw(mtCrewAdd.NomineeAddressPostCode.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressPostCode.CellAttributes)>
<span id="el_MTCrew_NomineeAddressPostCode">
<input type="@(mtCrewAdd.NomineeAddressPostCode.InputTextType)" name="x_NomineeAddressPostCode" id="x_NomineeAddressPostCode" data-table="MTCrew" data-field="x_NomineeAddressPostCode" value="@Html.Raw(mtCrewAdd.NomineeAddressPostCode.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeAddressPostCode.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeAddressPostCode.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeAddressPostCode.EditAttributes) aria-describedby="x_NomineeAddressPostCode_help">
@Html.Raw(mtCrewAdd.NomineeAddressPostCode.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressPostCode.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressPostCode.Visible (end) *@
@if (mtCrewAdd.NomineeAddressCountryID.Visible) { // mtCrewAdd.NomineeAddressCountryID.Visible (begin)
    <div id="r_NomineeAddressCountryID" @Html.Raw(mtCrewAdd.NomineeAddressCountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressCountryID" for="x_NomineeAddressCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressCountryID.Caption)@Html.Raw(mtCrewAdd.NomineeAddressCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressCountryID.CellAttributes)>
<span id="el_MTCrew_NomineeAddressCountryID">
    <select
        id="x_NomineeAddressCountryID"
        name="x_NomineeAddressCountryID"
        class="form-select ew-select@(mtCrewAdd.NomineeAddressCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_NomineeAddressCountryID"
        data-table="MTCrew"
        data-field="x_NomineeAddressCountryID"
        data-value-separator="@(mtCrewAdd.NomineeAddressCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.NomineeAddressCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.NomineeAddressCountryID.EditAttributes)>
        @(mtCrewAdd.NomineeAddressCountryID.SelectOptionListHtml("x_NomineeAddressCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.NomineeAddressCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.NomineeAddressCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_NomineeAddressCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_NomineeAddressCountryID", selectId: "fMTCrewadd_x_NomineeAddressCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.NomineeAddressCountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_NomineeAddressCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeAddressCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressCountryID.Visible (end) *@
@if (mtCrewAdd.NomineeAddressHomeTel.Visible) { // mtCrewAdd.NomineeAddressHomeTel.Visible (begin)
    <div id="r_NomineeAddressHomeTel" @Html.Raw(mtCrewAdd.NomineeAddressHomeTel.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressHomeTel" for="x_NomineeAddressHomeTel" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.Caption)@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressHomeTel.CellAttributes)>
<span id="el_MTCrew_NomineeAddressHomeTel">
<input type="@(mtCrewAdd.NomineeAddressHomeTel.InputTextType)" name="x_NomineeAddressHomeTel" id="x_NomineeAddressHomeTel" data-table="MTCrew" data-field="x_NomineeAddressHomeTel" value="@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeAddressHomeTel.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeAddressHomeTel.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.EditAttributes) aria-describedby="x_NomineeAddressHomeTel_help">
@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressHomeTel.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressHomeTel.Visible (end) *@
@if (mtCrewAdd.NomineeEmail.Visible) { // mtCrewAdd.NomineeEmail.Visible (begin)
    <div id="r_NomineeEmail" @Html.Raw(mtCrewAdd.NomineeEmail.RowAttributes)>
        <label id="elh_MTCrew_NomineeEmail" for="x_NomineeEmail" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeEmail.Caption)@Html.Raw(mtCrewAdd.NomineeEmail.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeEmail.CellAttributes)>
<span id="el_MTCrew_NomineeEmail">
<input type="@(mtCrewAdd.NomineeEmail.InputTextType)" name="x_NomineeEmail" id="x_NomineeEmail" data-table="MTCrew" data-field="x_NomineeEmail" value="@Html.Raw(mtCrewAdd.NomineeEmail.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeEmail.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeEmail.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeEmail.EditAttributes) aria-describedby="x_NomineeEmail_help">
@Html.Raw(mtCrewAdd.NomineeEmail.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeEmail.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeEmail.Visible (end) *@
@if (mtCrewAdd.NomineeMobileNumber.Visible) { // mtCrewAdd.NomineeMobileNumber.Visible (begin)
    <div id="r_NomineeMobileNumber" @Html.Raw(mtCrewAdd.NomineeMobileNumber.RowAttributes)>
        <label id="elh_MTCrew_NomineeMobileNumber" for="x_NomineeMobileNumber" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeMobileNumber.Caption)@Html.Raw(mtCrewAdd.NomineeMobileNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeMobileNumber.CellAttributes)>
<span id="el_MTCrew_NomineeMobileNumber">
<input type="@(mtCrewAdd.NomineeMobileNumber.InputTextType)" name="x_NomineeMobileNumber" id="x_NomineeMobileNumber" data-table="MTCrew" data-field="x_NomineeMobileNumber" value="@Html.Raw(mtCrewAdd.NomineeMobileNumber.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NomineeMobileNumber.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NomineeMobileNumber.FormatPattern)"@Html.Raw(mtCrewAdd.NomineeMobileNumber.EditAttributes) aria-describedby="x_NomineeMobileNumber_help">
@Html.Raw(mtCrewAdd.NomineeMobileNumber.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeMobileNumber.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeMobileNumber.Visible (end) *@
@if (mtCrewAdd.ForeignVisaHasBeenDenied.Visible) { // mtCrewAdd.ForeignVisaHasBeenDenied.Visible (begin)
    <div id="r_ForeignVisaHasBeenDenied" @Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaHasBeenDenied" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.Caption)@Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.CellAttributes)>
<span id="el_MTCrew_ForeignVisaHasBeenDenied">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewAdd.ForeignVisaHasBeenDenied.IsInvalidClass)" data-table="MTCrew" data-field="x_ForeignVisaHasBeenDenied" data-boolean name="x_ForeignVisaHasBeenDenied" id="x_ForeignVisaHasBeenDenied" value="1" checked="@ConvertToBool(mtCrewAdd.ForeignVisaHasBeenDenied.CurrentValue)" @Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.EditAttributes) aria-describedby="x_ForeignVisaHasBeenDenied_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewAdd.ForeignVisaHasBeenDenied.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewAdd.ForeignVisaHasBeenDenied.Visible (end) *@
@if (mtCrewAdd.ForeignVisaDenied_CountryID.Visible) { // mtCrewAdd.ForeignVisaDenied_CountryID.Visible (begin)
    <div id="r_ForeignVisaDenied_CountryID" @Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaDenied_CountryID" for="x_ForeignVisaDenied_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.Caption)@Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.CellAttributes)>
<span id="el_MTCrew_ForeignVisaDenied_CountryID">
    <select
        id="x_ForeignVisaDenied_CountryID"
        name="x_ForeignVisaDenied_CountryID"
        class="form-select ew-select@(mtCrewAdd.ForeignVisaDenied_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_ForeignVisaDenied_CountryID"
        data-table="MTCrew"
        data-field="x_ForeignVisaDenied_CountryID"
        data-value-separator="@(mtCrewAdd.ForeignVisaDenied_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.ForeignVisaDenied_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.EditAttributes)>
        @(mtCrewAdd.ForeignVisaDenied_CountryID.SelectOptionListHtml("x_ForeignVisaDenied_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.ForeignVisaDenied_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_ForeignVisaDenied_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_ForeignVisaDenied_CountryID", selectId: "fMTCrewadd_x_ForeignVisaDenied_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.ForeignVisaDenied_CountryID?.lookupOptions.length) {
        options.data = { id: "x_ForeignVisaDenied_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_ForeignVisaDenied_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.ForeignVisaDenied_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.ForeignVisaDenied_CountryID.Visible (end) *@
@if (mtCrewAdd.ForeignVisaDeniedReason.Visible) { // mtCrewAdd.ForeignVisaDeniedReason.Visible (begin)
    <div id="r_ForeignVisaDeniedReason" @Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.RowAttributes)>
        <label id="elh_MTCrew_ForeignVisaDeniedReason" for="x_ForeignVisaDeniedReason" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.Caption)@Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.CellAttributes)>
<span id="el_MTCrew_ForeignVisaDeniedReason">
<textarea data-table="MTCrew" data-field="x_ForeignVisaDeniedReason" name="x_ForeignVisaDeniedReason" id="x_ForeignVisaDeniedReason" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.ForeignVisaDeniedReason.PlaceHolder))"@Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.EditAttributes) aria-describedby="x_ForeignVisaDeniedReason_help">@(mtCrewAdd.ForeignVisaDeniedReason.EditValue)</textarea>
@Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.ForeignVisaDeniedReason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.ForeignVisaDeniedReason.Visible (end) *@
@if (mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.Visible) { // mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.Visible (begin)
    <div id="r_HasMaritimeAccidentOrCourtOfEnquiry" @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.RowAttributes)>
        <label id="elh_MTCrew_HasMaritimeAccidentOrCourtOfEnquiry" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.Caption)@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.CellAttributes)>
<span id="el_MTCrew_HasMaritimeAccidentOrCourtOfEnquiry">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.IsInvalidClass)" data-table="MTCrew" data-field="x_HasMaritimeAccidentOrCourtOfEnquiry" data-boolean name="x_HasMaritimeAccidentOrCourtOfEnquiry" id="x_HasMaritimeAccidentOrCourtOfEnquiry" value="1" checked="@ConvertToBool(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.CurrentValue)" @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.EditAttributes) aria-describedby="x_HasMaritimeAccidentOrCourtOfEnquiry_help">
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.GetErrorMessage())</div>
</div>
@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.GetCustomMessage)
</span>
</div></div>
    </div>
} @* mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiry.Visible (end) *@
@if (mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible) { // mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible (begin)
    <div id="r_HasMaritimeAccidentOrCourtOfEnquiryDetails" @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.RowAttributes)>
        <label id="elh_MTCrew_HasMaritimeAccidentOrCourtOfEnquiryDetails" for="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.Caption)@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.CellAttributes)>
<span id="el_MTCrew_HasMaritimeAccidentOrCourtOfEnquiryDetails">
<textarea data-table="MTCrew" data-field="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" name="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" id="x_HasMaritimeAccidentOrCourtOfEnquiryDetails" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.PlaceHolder))"@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.EditAttributes) aria-describedby="x_HasMaritimeAccidentOrCourtOfEnquiryDetails_help">@(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.EditValue)</textarea>
@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.HasMaritimeAccidentOrCourtOfEnquiryDetails.Visible (end) *@
@if (mtCrewAdd.Reference1CompanyName.Visible) { // mtCrewAdd.Reference1CompanyName.Visible (begin)
    <div id="r_Reference1CompanyName" @Html.Raw(mtCrewAdd.Reference1CompanyName.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyName" for="x_Reference1CompanyName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1CompanyName.Caption)@Html.Raw(mtCrewAdd.Reference1CompanyName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1CompanyName.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyName">
<input type="@(mtCrewAdd.Reference1CompanyName.InputTextType)" name="x_Reference1CompanyName" id="x_Reference1CompanyName" data-table="MTCrew" data-field="x_Reference1CompanyName" value="@Html.Raw(mtCrewAdd.Reference1CompanyName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference1CompanyName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference1CompanyName.FormatPattern)"@Html.Raw(mtCrewAdd.Reference1CompanyName.EditAttributes) aria-describedby="x_Reference1CompanyName_help">
@Html.Raw(mtCrewAdd.Reference1CompanyName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1CompanyName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1CompanyName.Visible (end) *@
@if (mtCrewAdd.Reference1ContactPersonName.Visible) { // mtCrewAdd.Reference1ContactPersonName.Visible (begin)
    <div id="r_Reference1ContactPersonName" @Html.Raw(mtCrewAdd.Reference1ContactPersonName.RowAttributes)>
        <label id="elh_MTCrew_Reference1ContactPersonName" for="x_Reference1ContactPersonName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1ContactPersonName.Caption)@Html.Raw(mtCrewAdd.Reference1ContactPersonName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1ContactPersonName.CellAttributes)>
<span id="el_MTCrew_Reference1ContactPersonName">
<input type="@(mtCrewAdd.Reference1ContactPersonName.InputTextType)" name="x_Reference1ContactPersonName" id="x_Reference1ContactPersonName" data-table="MTCrew" data-field="x_Reference1ContactPersonName" value="@Html.Raw(mtCrewAdd.Reference1ContactPersonName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference1ContactPersonName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference1ContactPersonName.FormatPattern)"@Html.Raw(mtCrewAdd.Reference1ContactPersonName.EditAttributes) aria-describedby="x_Reference1ContactPersonName_help">
@Html.Raw(mtCrewAdd.Reference1ContactPersonName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1ContactPersonName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1ContactPersonName.Visible (end) *@
@if (mtCrewAdd.Reference1CompanyAddress.Visible) { // mtCrewAdd.Reference1CompanyAddress.Visible (begin)
    <div id="r_Reference1CompanyAddress" @Html.Raw(mtCrewAdd.Reference1CompanyAddress.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyAddress" for="x_Reference1CompanyAddress" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1CompanyAddress.Caption)@Html.Raw(mtCrewAdd.Reference1CompanyAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1CompanyAddress.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyAddress">
<textarea data-table="MTCrew" data-field="x_Reference1CompanyAddress" name="x_Reference1CompanyAddress" id="x_Reference1CompanyAddress" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference1CompanyAddress.PlaceHolder))"@Html.Raw(mtCrewAdd.Reference1CompanyAddress.EditAttributes) aria-describedby="x_Reference1CompanyAddress_help">@(mtCrewAdd.Reference1CompanyAddress.EditValue)</textarea>
@Html.Raw(mtCrewAdd.Reference1CompanyAddress.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1CompanyAddress.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1CompanyAddress.Visible (end) *@
@if (mtCrewAdd.Reference1CompanyCountryID.Visible) { // mtCrewAdd.Reference1CompanyCountryID.Visible (begin)
    <div id="r_Reference1CompanyCountryID" @Html.Raw(mtCrewAdd.Reference1CompanyCountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyCountryID" for="x_Reference1CompanyCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1CompanyCountryID.Caption)@Html.Raw(mtCrewAdd.Reference1CompanyCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1CompanyCountryID.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyCountryID">
    <select
        id="x_Reference1CompanyCountryID"
        name="x_Reference1CompanyCountryID"
        class="form-select ew-select@(mtCrewAdd.Reference1CompanyCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Reference1CompanyCountryID"
        data-table="MTCrew"
        data-field="x_Reference1CompanyCountryID"
        data-value-separator="@(mtCrewAdd.Reference1CompanyCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Reference1CompanyCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Reference1CompanyCountryID.EditAttributes)>
        @(mtCrewAdd.Reference1CompanyCountryID.SelectOptionListHtml("x_Reference1CompanyCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.Reference1CompanyCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1CompanyCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.Reference1CompanyCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_Reference1CompanyCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Reference1CompanyCountryID", selectId: "fMTCrewadd_x_Reference1CompanyCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Reference1CompanyCountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference1CompanyCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Reference1CompanyCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference1CompanyCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1CompanyCountryID.Visible (end) *@
@if (mtCrewAdd.Reference1CompanyTelephone.Visible) { // mtCrewAdd.Reference1CompanyTelephone.Visible (begin)
    <div id="r_Reference1CompanyTelephone" @Html.Raw(mtCrewAdd.Reference1CompanyTelephone.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyTelephone" for="x_Reference1CompanyTelephone" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.Caption)@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1CompanyTelephone.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyTelephone">
<input type="@(mtCrewAdd.Reference1CompanyTelephone.InputTextType)" name="x_Reference1CompanyTelephone" id="x_Reference1CompanyTelephone" data-table="MTCrew" data-field="x_Reference1CompanyTelephone" value="@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference1CompanyTelephone.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference1CompanyTelephone.FormatPattern)"@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.EditAttributes) aria-describedby="x_Reference1CompanyTelephone_help">
@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1CompanyTelephone.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1CompanyTelephone.Visible (end) *@
@if (mtCrewAdd.Reference2CompanyName.Visible) { // mtCrewAdd.Reference2CompanyName.Visible (begin)
    <div id="r_Reference2CompanyName" @Html.Raw(mtCrewAdd.Reference2CompanyName.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyName" for="x_Reference2CompanyName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2CompanyName.Caption)@Html.Raw(mtCrewAdd.Reference2CompanyName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2CompanyName.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyName">
<input type="@(mtCrewAdd.Reference2CompanyName.InputTextType)" name="x_Reference2CompanyName" id="x_Reference2CompanyName" data-table="MTCrew" data-field="x_Reference2CompanyName" value="@Html.Raw(mtCrewAdd.Reference2CompanyName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference2CompanyName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference2CompanyName.FormatPattern)"@Html.Raw(mtCrewAdd.Reference2CompanyName.EditAttributes) aria-describedby="x_Reference2CompanyName_help">
@Html.Raw(mtCrewAdd.Reference2CompanyName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2CompanyName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2CompanyName.Visible (end) *@
@if (mtCrewAdd.Reference2ContactPersonName.Visible) { // mtCrewAdd.Reference2ContactPersonName.Visible (begin)
    <div id="r_Reference2ContactPersonName" @Html.Raw(mtCrewAdd.Reference2ContactPersonName.RowAttributes)>
        <label id="elh_MTCrew_Reference2ContactPersonName" for="x_Reference2ContactPersonName" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2ContactPersonName.Caption)@Html.Raw(mtCrewAdd.Reference2ContactPersonName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2ContactPersonName.CellAttributes)>
<span id="el_MTCrew_Reference2ContactPersonName">
<input type="@(mtCrewAdd.Reference2ContactPersonName.InputTextType)" name="x_Reference2ContactPersonName" id="x_Reference2ContactPersonName" data-table="MTCrew" data-field="x_Reference2ContactPersonName" value="@Html.Raw(mtCrewAdd.Reference2ContactPersonName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference2ContactPersonName.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference2ContactPersonName.FormatPattern)"@Html.Raw(mtCrewAdd.Reference2ContactPersonName.EditAttributes) aria-describedby="x_Reference2ContactPersonName_help">
@Html.Raw(mtCrewAdd.Reference2ContactPersonName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2ContactPersonName.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2ContactPersonName.Visible (end) *@
@if (mtCrewAdd.Reference2CompanyAddress.Visible) { // mtCrewAdd.Reference2CompanyAddress.Visible (begin)
    <div id="r_Reference2CompanyAddress" @Html.Raw(mtCrewAdd.Reference2CompanyAddress.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyAddress" for="x_Reference2CompanyAddress" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2CompanyAddress.Caption)@Html.Raw(mtCrewAdd.Reference2CompanyAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2CompanyAddress.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyAddress">
<textarea data-table="MTCrew" data-field="x_Reference2CompanyAddress" name="x_Reference2CompanyAddress" id="x_Reference2CompanyAddress" cols="50" rows="4" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference2CompanyAddress.PlaceHolder))"@Html.Raw(mtCrewAdd.Reference2CompanyAddress.EditAttributes) aria-describedby="x_Reference2CompanyAddress_help">@(mtCrewAdd.Reference2CompanyAddress.EditValue)</textarea>
@Html.Raw(mtCrewAdd.Reference2CompanyAddress.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2CompanyAddress.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2CompanyAddress.Visible (end) *@
@if (mtCrewAdd.Reference2CompanyCountryID.Visible) { // mtCrewAdd.Reference2CompanyCountryID.Visible (begin)
    <div id="r_Reference2CompanyCountryID" @Html.Raw(mtCrewAdd.Reference2CompanyCountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyCountryID" for="x_Reference2CompanyCountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2CompanyCountryID.Caption)@Html.Raw(mtCrewAdd.Reference2CompanyCountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2CompanyCountryID.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyCountryID">
    <select
        id="x_Reference2CompanyCountryID"
        name="x_Reference2CompanyCountryID"
        class="form-select ew-select@(mtCrewAdd.Reference2CompanyCountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Reference2CompanyCountryID"
        data-table="MTCrew"
        data-field="x_Reference2CompanyCountryID"
        data-value-separator="@(mtCrewAdd.Reference2CompanyCountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Reference2CompanyCountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Reference2CompanyCountryID.EditAttributes)>
        @(mtCrewAdd.Reference2CompanyCountryID.SelectOptionListHtml("x_Reference2CompanyCountryID"))
    </select>
    @Html.Raw(mtCrewAdd.Reference2CompanyCountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2CompanyCountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.Reference2CompanyCountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_Reference2CompanyCountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Reference2CompanyCountryID", selectId: "fMTCrewadd_x_Reference2CompanyCountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Reference2CompanyCountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference2CompanyCountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Reference2CompanyCountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference2CompanyCountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2CompanyCountryID.Visible (end) *@
@if (mtCrewAdd.Reference2CompanyTelephone.Visible) { // mtCrewAdd.Reference2CompanyTelephone.Visible (begin)
    <div id="r_Reference2CompanyTelephone" @Html.Raw(mtCrewAdd.Reference2CompanyTelephone.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyTelephone" for="x_Reference2CompanyTelephone" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.Caption)@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2CompanyTelephone.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyTelephone">
<input type="@(mtCrewAdd.Reference2CompanyTelephone.InputTextType)" name="x_Reference2CompanyTelephone" id="x_Reference2CompanyTelephone" data-table="MTCrew" data-field="x_Reference2CompanyTelephone" value="@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.EditValue)" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reference2CompanyTelephone.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reference2CompanyTelephone.FormatPattern)"@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.EditAttributes) aria-describedby="x_Reference2CompanyTelephone_help">
@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2CompanyTelephone.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2CompanyTelephone.Visible (end) *@
@if (mtCrewAdd.Status.Visible) { // mtCrewAdd.Status.Visible (begin)
    <div id="r_Status" @Html.Raw(mtCrewAdd.Status.RowAttributes)>
        <label id="elh_MTCrew_Status" for="x_Status" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Status.Caption)@Html.Raw(mtCrewAdd.Status.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Status.CellAttributes)>
<span id="el_MTCrew_Status">
<input type="@(mtCrewAdd.Status.InputTextType)" name="x_Status" id="x_Status" data-table="MTCrew" data-field="x_Status" value="@Html.Raw(mtCrewAdd.Status.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Status.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Status.FormatPattern)"@Html.Raw(mtCrewAdd.Status.EditAttributes) aria-describedby="x_Status_help">
@Html.Raw(mtCrewAdd.Status.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Status.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Status.Visible (end) *@
@if (mtCrewAdd.Reason.Visible) { // mtCrewAdd.Reason.Visible (begin)
    <div id="r_Reason" @Html.Raw(mtCrewAdd.Reason.RowAttributes)>
        <label id="elh_MTCrew_Reason" for="x_Reason" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reason.Caption)@Html.Raw(mtCrewAdd.Reason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reason.CellAttributes)>
<span id="el_MTCrew_Reason">
<input type="@(mtCrewAdd.Reason.InputTextType)" name="x_Reason" id="x_Reason" data-table="MTCrew" data-field="x_Reason" value="@Html.Raw(mtCrewAdd.Reason.EditValue)" size="30" maxlength="200" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Reason.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Reason.FormatPattern)"@Html.Raw(mtCrewAdd.Reason.EditAttributes) aria-describedby="x_Reason_help">
@Html.Raw(mtCrewAdd.Reason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reason.Visible (end) *@
@if (mtCrewAdd.Weight.Visible) { // mtCrewAdd.Weight.Visible (begin)
    <div id="r_Weight" @Html.Raw(mtCrewAdd.Weight.RowAttributes)>
        <label id="elh_MTCrew_Weight" for="x_Weight" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Weight.Caption)@Html.Raw(mtCrewAdd.Weight.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Weight.CellAttributes)>
<span id="el_MTCrew_Weight">
<input type="@(mtCrewAdd.Weight.InputTextType)" name="x_Weight" id="x_Weight" data-table="MTCrew" data-field="x_Weight" value="@Html.Raw(mtCrewAdd.Weight.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Weight.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Weight.FormatPattern)"@Html.Raw(mtCrewAdd.Weight.EditAttributes) aria-describedby="x_Weight_help">
@Html.Raw(mtCrewAdd.Weight.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Weight.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Weight.Visible (end) *@
@if (mtCrewAdd.Height.Visible) { // mtCrewAdd.Height.Visible (begin)
    <div id="r_Height" @Html.Raw(mtCrewAdd.Height.RowAttributes)>
        <label id="elh_MTCrew_Height" for="x_Height" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Height.Caption)@Html.Raw(mtCrewAdd.Height.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Height.CellAttributes)>
<span id="el_MTCrew_Height">
<input type="@(mtCrewAdd.Height.InputTextType)" name="x_Height" id="x_Height" data-table="MTCrew" data-field="x_Height" value="@Html.Raw(mtCrewAdd.Height.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.Height.PlaceHolder))" data-format-pattern="@(mtCrewAdd.Height.FormatPattern)"@Html.Raw(mtCrewAdd.Height.EditAttributes) aria-describedby="x_Height_help">
@Html.Raw(mtCrewAdd.Height.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.Height.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Height.Visible (end) *@
@if (mtCrewAdd.CoverallSize.Visible) { // mtCrewAdd.CoverallSize.Visible (begin)
    <div id="r_CoverallSize" @Html.Raw(mtCrewAdd.CoverallSize.RowAttributes)>
        <label id="elh_MTCrew_CoverallSize" for="x_CoverallSize" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.CoverallSize.Caption)@Html.Raw(mtCrewAdd.CoverallSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.CoverallSize.CellAttributes)>
<span id="el_MTCrew_CoverallSize">
<input type="@(mtCrewAdd.CoverallSize.InputTextType)" name="x_CoverallSize" id="x_CoverallSize" data-table="MTCrew" data-field="x_CoverallSize" value="@Html.Raw(mtCrewAdd.CoverallSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.CoverallSize.PlaceHolder))" data-format-pattern="@(mtCrewAdd.CoverallSize.FormatPattern)"@Html.Raw(mtCrewAdd.CoverallSize.EditAttributes) aria-describedby="x_CoverallSize_help">
@Html.Raw(mtCrewAdd.CoverallSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.CoverallSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.CoverallSize.Visible (end) *@
@if (mtCrewAdd.SafetyShoesSize.Visible) { // mtCrewAdd.SafetyShoesSize.Visible (begin)
    <div id="r_SafetyShoesSize" @Html.Raw(mtCrewAdd.SafetyShoesSize.RowAttributes)>
        <label id="elh_MTCrew_SafetyShoesSize" for="x_SafetyShoesSize" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.SafetyShoesSize.Caption)@Html.Raw(mtCrewAdd.SafetyShoesSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.SafetyShoesSize.CellAttributes)>
<span id="el_MTCrew_SafetyShoesSize">
<input type="@(mtCrewAdd.SafetyShoesSize.InputTextType)" name="x_SafetyShoesSize" id="x_SafetyShoesSize" data-table="MTCrew" data-field="x_SafetyShoesSize" value="@Html.Raw(mtCrewAdd.SafetyShoesSize.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.SafetyShoesSize.PlaceHolder))" data-format-pattern="@(mtCrewAdd.SafetyShoesSize.FormatPattern)"@Html.Raw(mtCrewAdd.SafetyShoesSize.EditAttributes) aria-describedby="x_SafetyShoesSize_help">
@Html.Raw(mtCrewAdd.SafetyShoesSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.SafetyShoesSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.SafetyShoesSize.Visible (end) *@
@if (mtCrewAdd.ShirtSize.Visible) { // mtCrewAdd.ShirtSize.Visible (begin)
    <div id="r_ShirtSize" @Html.Raw(mtCrewAdd.ShirtSize.RowAttributes)>
        <label id="elh_MTCrew_ShirtSize" for="x_ShirtSize" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.ShirtSize.Caption)@Html.Raw(mtCrewAdd.ShirtSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.ShirtSize.CellAttributes)>
<span id="el_MTCrew_ShirtSize">
<input type="@(mtCrewAdd.ShirtSize.InputTextType)" name="x_ShirtSize" id="x_ShirtSize" data-table="MTCrew" data-field="x_ShirtSize" value="@Html.Raw(mtCrewAdd.ShirtSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.ShirtSize.PlaceHolder))" data-format-pattern="@(mtCrewAdd.ShirtSize.FormatPattern)"@Html.Raw(mtCrewAdd.ShirtSize.EditAttributes) aria-describedby="x_ShirtSize_help">
@Html.Raw(mtCrewAdd.ShirtSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.ShirtSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.ShirtSize.Visible (end) *@
@if (mtCrewAdd.TrousersSize.Visible) { // mtCrewAdd.TrousersSize.Visible (begin)
    <div id="r_TrousersSize" @Html.Raw(mtCrewAdd.TrousersSize.RowAttributes)>
        <label id="elh_MTCrew_TrousersSize" for="x_TrousersSize" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.TrousersSize.Caption)@Html.Raw(mtCrewAdd.TrousersSize.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.TrousersSize.CellAttributes)>
<span id="el_MTCrew_TrousersSize">
<input type="@(mtCrewAdd.TrousersSize.InputTextType)" name="x_TrousersSize" id="x_TrousersSize" data-table="MTCrew" data-field="x_TrousersSize" value="@Html.Raw(mtCrewAdd.TrousersSize.EditValue)" size="30" maxlength="5" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.TrousersSize.PlaceHolder))" data-format-pattern="@(mtCrewAdd.TrousersSize.FormatPattern)"@Html.Raw(mtCrewAdd.TrousersSize.EditAttributes) aria-describedby="x_TrousersSize_help">
@Html.Raw(mtCrewAdd.TrousersSize.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.TrousersSize.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.TrousersSize.Visible (end) *@
@if (mtCrewAdd.NSSF_Health_Number.Visible) { // mtCrewAdd.NSSF_Health_Number.Visible (begin)
    <div id="r_NSSF_Health_Number" @Html.Raw(mtCrewAdd.NSSF_Health_Number.RowAttributes)>
        <label id="elh_MTCrew_NSSF_Health_Number" for="x_NSSF_Health_Number" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NSSF_Health_Number.Caption)@Html.Raw(mtCrewAdd.NSSF_Health_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NSSF_Health_Number.CellAttributes)>
<span id="el_MTCrew_NSSF_Health_Number">
<input type="@(mtCrewAdd.NSSF_Health_Number.InputTextType)" name="x_NSSF_Health_Number" id="x_NSSF_Health_Number" data-table="MTCrew" data-field="x_NSSF_Health_Number" value="@Html.Raw(mtCrewAdd.NSSF_Health_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NSSF_Health_Number.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NSSF_Health_Number.FormatPattern)"@Html.Raw(mtCrewAdd.NSSF_Health_Number.EditAttributes) aria-describedby="x_NSSF_Health_Number_help">
@Html.Raw(mtCrewAdd.NSSF_Health_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NSSF_Health_Number.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NSSF_Health_Number.Visible (end) *@
@if (mtCrewAdd.NSSF_Occupation_Number.Visible) { // mtCrewAdd.NSSF_Occupation_Number.Visible (begin)
    <div id="r_NSSF_Occupation_Number" @Html.Raw(mtCrewAdd.NSSF_Occupation_Number.RowAttributes)>
        <label id="elh_MTCrew_NSSF_Occupation_Number" for="x_NSSF_Occupation_Number" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.Caption)@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NSSF_Occupation_Number.CellAttributes)>
<span id="el_MTCrew_NSSF_Occupation_Number">
<input type="@(mtCrewAdd.NSSF_Occupation_Number.InputTextType)" name="x_NSSF_Occupation_Number" id="x_NSSF_Occupation_Number" data-table="MTCrew" data-field="x_NSSF_Occupation_Number" value="@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.NSSF_Occupation_Number.PlaceHolder))" data-format-pattern="@(mtCrewAdd.NSSF_Occupation_Number.FormatPattern)"@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.EditAttributes) aria-describedby="x_NSSF_Occupation_Number_help">
@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.NSSF_Occupation_Number.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NSSF_Occupation_Number.Visible (end) *@
@if (mtCrewAdd.FinalAcceptedDate.Visible) { // mtCrewAdd.FinalAcceptedDate.Visible (begin)
    <div id="r_FinalAcceptedDate" @Html.Raw(mtCrewAdd.FinalAcceptedDate.RowAttributes)>
        <label id="elh_MTCrew_FinalAcceptedDate" for="x_FinalAcceptedDate" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.FinalAcceptedDate.Caption)@Html.Raw(mtCrewAdd.FinalAcceptedDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.FinalAcceptedDate.CellAttributes)>
<span id="el_MTCrew_FinalAcceptedDate">
<input type="@(mtCrewAdd.FinalAcceptedDate.InputTextType)" name="x_FinalAcceptedDate" id="x_FinalAcceptedDate" data-table="MTCrew" data-field="x_FinalAcceptedDate" value="@Html.Raw(mtCrewAdd.FinalAcceptedDate.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.FinalAcceptedDate.PlaceHolder))" data-format-pattern="@(mtCrewAdd.FinalAcceptedDate.FormatPattern)"@Html.Raw(mtCrewAdd.FinalAcceptedDate.EditAttributes) aria-describedby="x_FinalAcceptedDate_help">
@Html.Raw(mtCrewAdd.FinalAcceptedDate.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.FinalAcceptedDate.GetErrorMessage())</div>
@if (!mtCrewAdd.FinalAcceptedDate.ReadOnly && !mtCrewAdd.FinalAcceptedDate.Disabled && !mtCrewAdd.FinalAcceptedDate.EditAttrs.Is("readonly") && !mtCrewAdd.FinalAcceptedDate.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewadd", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewadd", "x_FinalAcceptedDate", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewAdd.FinalAcceptedDate.Visible (end) *@
@if (mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Visible) { // mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Visible (begin)
    <div id="r_Reference1CompanyTelephoneCode_CountryID" @Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference1CompanyTelephoneCode_CountryID" for="x_Reference1CompanyTelephoneCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Caption)@Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.CellAttributes)>
<span id="el_MTCrew_Reference1CompanyTelephoneCode_CountryID">
    <select
        id="x_Reference1CompanyTelephoneCode_CountryID"
        name="x_Reference1CompanyTelephoneCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Reference1CompanyTelephoneCode_CountryID"
        data-table="MTCrew"
        data-field="x_Reference1CompanyTelephoneCode_CountryID"
        data-value-separator="@(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.EditAttributes)>
        @(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.SelectOptionListHtml("x_Reference1CompanyTelephoneCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_Reference1CompanyTelephoneCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Reference1CompanyTelephoneCode_CountryID", selectId: "fMTCrewadd_x_Reference1CompanyTelephoneCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Reference1CompanyTelephoneCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference1CompanyTelephoneCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Reference1CompanyTelephoneCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference1CompanyTelephoneCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference1CompanyTelephoneCode_CountryID.Visible (end) *@
@if (mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Visible) { // mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Visible (begin)
    <div id="r_Reference2CompanyTelephoneCode_CountryID" @Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_Reference2CompanyTelephoneCode_CountryID" for="x_Reference2CompanyTelephoneCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Caption)@Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.CellAttributes)>
<span id="el_MTCrew_Reference2CompanyTelephoneCode_CountryID">
    <select
        id="x_Reference2CompanyTelephoneCode_CountryID"
        name="x_Reference2CompanyTelephoneCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_Reference2CompanyTelephoneCode_CountryID"
        data-table="MTCrew"
        data-field="x_Reference2CompanyTelephoneCode_CountryID"
        data-value-separator="@(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.EditAttributes)>
        @(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.SelectOptionListHtml("x_Reference2CompanyTelephoneCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_Reference2CompanyTelephoneCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_Reference2CompanyTelephoneCode_CountryID", selectId: "fMTCrewadd_x_Reference2CompanyTelephoneCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.Reference2CompanyTelephoneCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_Reference2CompanyTelephoneCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_Reference2CompanyTelephoneCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.Reference2CompanyTelephoneCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.Reference2CompanyTelephoneCode_CountryID.Visible (end) *@
@if (mtCrewAdd.MobileNumberCode_CountryID.Visible) { // mtCrewAdd.MobileNumberCode_CountryID.Visible (begin)
    <div id="r_MobileNumberCode_CountryID" @Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_MobileNumberCode_CountryID" for="x_MobileNumberCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.Caption)@Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.CellAttributes)>
<span id="el_MTCrew_MobileNumberCode_CountryID">
    <select
        id="x_MobileNumberCode_CountryID"
        name="x_MobileNumberCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.MobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_MobileNumberCode_CountryID"
        data-table="MTCrew"
        data-field="x_MobileNumberCode_CountryID"
        data-value-separator="@(mtCrewAdd.MobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.MobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.EditAttributes)>
        @(mtCrewAdd.MobileNumberCode_CountryID.SelectOptionListHtml("x_MobileNumberCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.MobileNumberCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_MobileNumberCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_MobileNumberCode_CountryID", selectId: "fMTCrewadd_x_MobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.MobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_MobileNumberCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_MobileNumberCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.MobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.MobileNumberCode_CountryID.Visible (end) *@
@if (mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Visible) { // mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_PrimaryAddressHomeTelCode_CountryID" @Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_PrimaryAddressHomeTelCode_CountryID" for="x_PrimaryAddressHomeTelCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_PrimaryAddressHomeTelCode_CountryID">
    <select
        id="x_PrimaryAddressHomeTelCode_CountryID"
        name="x_PrimaryAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_PrimaryAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_PrimaryAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.SelectOptionListHtml("x_PrimaryAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_PrimaryAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_PrimaryAddressHomeTelCode_CountryID", selectId: "fMTCrewadd_x_PrimaryAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.PrimaryAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_PrimaryAddressHomeTelCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.PrimaryAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.PrimaryAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Visible) { // mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_AlternativeAddressHomeTelCode_CountryID" @Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_AlternativeAddressHomeTelCode_CountryID" for="x_AlternativeAddressHomeTelCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_AlternativeAddressHomeTelCode_CountryID">
    <select
        id="x_AlternativeAddressHomeTelCode_CountryID"
        name="x_AlternativeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_AlternativeAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_AlternativeAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_AlternativeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_AlternativeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_AlternativeAddressHomeTelCode_CountryID", selectId: "fMTCrewadd_x_AlternativeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.AlternativeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_AlternativeAddressHomeTelCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.AlternativeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.AlternativeAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Visible) { // mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Visible (begin)
    <div id="r_NomineeAddressHomeTelCode_CountryID" @Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeAddressHomeTelCode_CountryID" for="x_NomineeAddressHomeTelCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Caption)@Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeAddressHomeTelCode_CountryID">
    <select
        id="x_NomineeAddressHomeTelCode_CountryID"
        name="x_NomineeAddressHomeTelCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_NomineeAddressHomeTelCode_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeAddressHomeTelCode_CountryID"
        data-value-separator="@(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.EditAttributes)>
        @(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.SelectOptionListHtml("x_NomineeAddressHomeTelCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_NomineeAddressHomeTelCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_NomineeAddressHomeTelCode_CountryID", selectId: "fMTCrewadd_x_NomineeAddressHomeTelCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.NomineeAddressHomeTelCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_NomineeAddressHomeTelCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeAddressHomeTelCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeAddressHomeTelCode_CountryID.Visible (end) *@
@if (mtCrewAdd.NomineeMobileNumberCode_CountryID.Visible) { // mtCrewAdd.NomineeMobileNumberCode_CountryID.Visible (begin)
    <div id="r_NomineeMobileNumberCode_CountryID" @Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.RowAttributes)>
        <label id="elh_MTCrew_NomineeMobileNumberCode_CountryID" for="x_NomineeMobileNumberCode_CountryID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.Caption)@Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.CellAttributes)>
<span id="el_MTCrew_NomineeMobileNumberCode_CountryID">
    <select
        id="x_NomineeMobileNumberCode_CountryID"
        name="x_NomineeMobileNumberCode_CountryID"
        class="form-select ew-select@(mtCrewAdd.NomineeMobileNumberCode_CountryID.IsInvalidClass)"
        data-select2-id="fMTCrewadd_x_NomineeMobileNumberCode_CountryID"
        data-table="MTCrew"
        data-field="x_NomineeMobileNumberCode_CountryID"
        data-value-separator="@(mtCrewAdd.NomineeMobileNumberCode_CountryID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCrewAdd.NomineeMobileNumberCode_CountryID.PlaceHolder))"
        @Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.EditAttributes)>
        @(mtCrewAdd.NomineeMobileNumberCode_CountryID.SelectOptionListHtml("x_NomineeMobileNumberCode_CountryID"))
    </select>
    @Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.GetErrorMessage())</div>
@Html.Raw(mtCrewAdd.NomineeMobileNumberCode_CountryID.Lookup.GetParamTag(mtCrewAdd, "p_x_NomineeMobileNumberCode_CountryID"))
<script>
loadjs.ready("fMTCrewadd", function() {
    var options = { name: "x_NomineeMobileNumberCode_CountryID", selectId: "fMTCrewadd_x_NomineeMobileNumberCode_CountryID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCrewadd.lists.NomineeMobileNumberCode_CountryID?.lookupOptions.length) {
        options.data = { id: "x_NomineeMobileNumberCode_CountryID", form: "fMTCrewadd" };
    } else {
        options.ajax = { id: "x_NomineeMobileNumberCode_CountryID", form: "fMTCrewadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCrew.fields.NomineeMobileNumberCode_CountryID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCrewAdd.NomineeMobileNumberCode_CountryID.Visible (end) *@
@if (mtCrewAdd.RevisedReason.Visible) { // mtCrewAdd.RevisedReason.Visible (begin)
    <div id="r_RevisedReason" @Html.Raw(mtCrewAdd.RevisedReason.RowAttributes)>
        <label id="elh_MTCrew_RevisedReason" for="x_RevisedReason" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.RevisedReason.Caption)@Html.Raw(mtCrewAdd.RevisedReason.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.RevisedReason.CellAttributes)>
<span id="el_MTCrew_RevisedReason">
<input type="@(mtCrewAdd.RevisedReason.InputTextType)" name="x_RevisedReason" id="x_RevisedReason" data-table="MTCrew" data-field="x_RevisedReason" value="@Html.Raw(mtCrewAdd.RevisedReason.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.RevisedReason.PlaceHolder))" data-format-pattern="@(mtCrewAdd.RevisedReason.FormatPattern)"@Html.Raw(mtCrewAdd.RevisedReason.EditAttributes) aria-describedby="x_RevisedReason_help">
@Html.Raw(mtCrewAdd.RevisedReason.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.RevisedReason.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.RevisedReason.Visible (end) *@
@if (mtCrewAdd.RevisedDateTime.Visible) { // mtCrewAdd.RevisedDateTime.Visible (begin)
    <div id="r_RevisedDateTime" @Html.Raw(mtCrewAdd.RevisedDateTime.RowAttributes)>
        <label id="elh_MTCrew_RevisedDateTime" for="x_RevisedDateTime" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.RevisedDateTime.Caption)@Html.Raw(mtCrewAdd.RevisedDateTime.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.RevisedDateTime.CellAttributes)>
<span id="el_MTCrew_RevisedDateTime">
<input type="@(mtCrewAdd.RevisedDateTime.InputTextType)" name="x_RevisedDateTime" id="x_RevisedDateTime" data-table="MTCrew" data-field="x_RevisedDateTime" value="@Html.Raw(mtCrewAdd.RevisedDateTime.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.RevisedDateTime.PlaceHolder))" data-format-pattern="@(mtCrewAdd.RevisedDateTime.FormatPattern)"@Html.Raw(mtCrewAdd.RevisedDateTime.EditAttributes) aria-describedby="x_RevisedDateTime_help">
@Html.Raw(mtCrewAdd.RevisedDateTime.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.RevisedDateTime.GetErrorMessage())</div>
@if (!mtCrewAdd.RevisedDateTime.ReadOnly && !mtCrewAdd.RevisedDateTime.Disabled && !mtCrewAdd.RevisedDateTime.EditAttrs.Is("readonly") && !mtCrewAdd.RevisedDateTime.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTCrewadd", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTCrewadd", "x_RevisedDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtCrewAdd.RevisedDateTime.Visible (end) *@
@if (mtCrewAdd.MTManningAgentID.Visible) { // mtCrewAdd.MTManningAgentID.Visible (begin)
    <div id="r_MTManningAgentID" @Html.Raw(mtCrewAdd.MTManningAgentID.RowAttributes)>
        <label id="elh_MTCrew_MTManningAgentID" for="x_MTManningAgentID" class="@(mtCrewAdd.LeftColumnClass)">@Html.Raw(mtCrewAdd.MTManningAgentID.Caption)@Html.Raw(mtCrewAdd.MTManningAgentID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCrewAdd.RightColumnClass)"><div @Html.Raw(mtCrewAdd.MTManningAgentID.CellAttributes)>
<span id="el_MTCrew_MTManningAgentID">
<input type="@(mtCrewAdd.MTManningAgentID.InputTextType)" name="x_MTManningAgentID" id="x_MTManningAgentID" data-table="MTCrew" data-field="x_MTManningAgentID" value="@Html.Raw(mtCrewAdd.MTManningAgentID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtCrewAdd.MTManningAgentID.PlaceHolder))" data-format-pattern="@(mtCrewAdd.MTManningAgentID.FormatPattern)"@Html.Raw(mtCrewAdd.MTManningAgentID.EditAttributes) aria-describedby="x_MTManningAgentID_help">
@Html.Raw(mtCrewAdd.MTManningAgentID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtCrewAdd.MTManningAgentID.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtCrewAdd.MTManningAgentID.Visible (end) *@
</div><!-- /page* -->
@{ mtCrewAdd.CloseRecordset(); }
@if (mtCrewAdd.CurrentDetailTables.Contains("MTCrewCertificate") && mtCrewCertificate.DetailAdd) {
    if (!Empty(mtCrewAdd.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewCertificate", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewCertificateGrid")
    View = this;
}
@if (mtCrewAdd.CurrentDetailTables.Contains("MTCrewDocument") && mtCrewDocument.DetailAdd) {
    if (!Empty(mtCrewAdd.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewDocument", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewDocumentGrid")
    View = this;
}
@if (mtCrewAdd.CurrentDetailTables.Contains("MTCrewExperience") && mtCrewExperience.DetailAdd) {
    if (!Empty(mtCrewAdd.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewExperience", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewExperienceGrid")
    View = this;
}
@if (mtCrewAdd.CurrentDetailTables.Contains("MTCrewFamily") && mtCrewFamily.DetailAdd) {
    if (!Empty(mtCrewAdd.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewFamily", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewFamilyGrid")
    View = this;
}
@if (mtCrewAdd.CurrentDetailTables.Contains("MTCrewMedicalHistory") && mtCrewMedicalHistory.DetailAdd) {
    if (!Empty(mtCrewAdd.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("MTCrewMedicalHistory", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("MtCrewMedicalHistoryGrid")
    View = this;
}
@Html.Raw(mtCrewAdd.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtCrewAdd.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTCrewadd">@Html.Raw(Language.Phrase("AddBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTCrewadd" data-href="@AppPath(mtCrewAdd.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtCrewAdd.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@mtCrewAdd.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTCrew");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
