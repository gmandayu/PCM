@{
    // View
    View = this;

    // Check action result
    if (mtRecruitmentStatusEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtRecruitmentStatusEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtRecruitmentStatusEdit.ShowPageHeader()
@mtRecruitmentStatusEdit.ShowMessages()
<main class="edit">
<form name="fMTRecruitmentStatusedit" id="fMTRecruitmentStatusedit" class="@(mtRecruitmentStatusEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(mtRecruitmentStatusEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTRecruitmentStatus: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fMTRecruitmentStatusedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTRecruitmentStatusedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["ID", [fields.ID.visible && fields.ID.required ? ew.Validators.required(fields.ID.caption) : null], fields.ID.isInvalid],
            ["Code", [fields.Code.visible && fields.Code.required ? ew.Validators.required(fields.Code.caption) : null, ew.Validators.integer], fields.Code.isInvalid],
            ["Description", [fields.Description.visible && fields.Description.required ? ew.Validators.required(fields.Description.caption) : null], fields.Description.isInvalid],
            ["CreatedByUserID", [fields.CreatedByUserID.visible && fields.CreatedByUserID.required ? ew.Validators.required(fields.CreatedByUserID.caption) : null, ew.Validators.integer], fields.CreatedByUserID.isInvalid],
            ["CreatedDateTime", [fields.CreatedDateTime.visible && fields.CreatedDateTime.required ? ew.Validators.required(fields.CreatedDateTime.caption) : null, ew.Validators.datetime(fields.CreatedDateTime.clientFormatPattern)], fields.CreatedDateTime.isInvalid],
            ["LastUpdatedByUserID", [fields.LastUpdatedByUserID.visible && fields.LastUpdatedByUserID.required ? ew.Validators.required(fields.LastUpdatedByUserID.caption) : null, ew.Validators.integer], fields.LastUpdatedByUserID.isInvalid],
            ["LastUpdatedDateTime", [fields.LastUpdatedDateTime.visible && fields.LastUpdatedDateTime.required ? ew.Validators.required(fields.LastUpdatedDateTime.caption) : null, ew.Validators.datetime(fields.LastUpdatedDateTime.clientFormatPattern)], fields.LastUpdatedDateTime.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(mtRecruitmentStatusEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtRecruitmentStatusEdit.OldKeyName)" value="@Html.Raw(mtRecruitmentStatusEdit.OldKey)">
<div class="ew-edit-div"><!-- page* -->
@if (mtRecruitmentStatusEdit.ID.Visible) { // mtRecruitmentStatusEdit.ID.Visible (begin)
    <div id="r_ID" @Html.Raw(mtRecruitmentStatusEdit.ID.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_ID" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.ID.Caption)@Html.Raw(mtRecruitmentStatusEdit.ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.ID.CellAttributes)>
<span id="el_MTRecruitmentStatus_ID">
<span @Html.Raw(mtRecruitmentStatusEdit.ID.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(mtRecruitmentStatusEdit.ID.EditValue)))"></span>
<input type="hidden" data-table="MTRecruitmentStatus" data-field="x_ID" data-hidden="1" name="x_ID" id="x_ID" value="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.ID.CurrentValue))">
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.ID.Visible (end) *@
@if (mtRecruitmentStatusEdit.Code.Visible) { // mtRecruitmentStatusEdit.Code.Visible (begin)
    <div id="r_Code" @Html.Raw(mtRecruitmentStatusEdit.Code.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_Code" for="x_Code" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.Code.Caption)@Html.Raw(mtRecruitmentStatusEdit.Code.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.Code.CellAttributes)>
<span id="el_MTRecruitmentStatus_Code">
<input type="@(mtRecruitmentStatusEdit.Code.InputTextType)" name="x_Code" id="x_Code" data-table="MTRecruitmentStatus" data-field="x_Code" value="@Html.Raw(mtRecruitmentStatusEdit.Code.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.Code.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.Code.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.Code.EditAttributes) aria-describedby="x_Code_help">
@Html.Raw(mtRecruitmentStatusEdit.Code.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.Code.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.Code.Visible (end) *@
@if (mtRecruitmentStatusEdit.Description.Visible) { // mtRecruitmentStatusEdit.Description.Visible (begin)
    <div id="r_Description" @Html.Raw(mtRecruitmentStatusEdit.Description.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_Description" for="x_Description" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.Description.Caption)@Html.Raw(mtRecruitmentStatusEdit.Description.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.Description.CellAttributes)>
<span id="el_MTRecruitmentStatus_Description">
<input type="@(mtRecruitmentStatusEdit.Description.InputTextType)" name="x_Description" id="x_Description" data-table="MTRecruitmentStatus" data-field="x_Description" value="@Html.Raw(mtRecruitmentStatusEdit.Description.EditValue)" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.Description.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.Description.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.Description.EditAttributes) aria-describedby="x_Description_help">
@Html.Raw(mtRecruitmentStatusEdit.Description.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.Description.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.Description.Visible (end) *@
@if (mtRecruitmentStatusEdit.CreatedByUserID.Visible) { // mtRecruitmentStatusEdit.CreatedByUserID.Visible (begin)
    <div id="r_CreatedByUserID" @Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_CreatedByUserID" for="x_CreatedByUserID" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.Caption)@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.CellAttributes)>
<span id="el_MTRecruitmentStatus_CreatedByUserID">
<input type="@(mtRecruitmentStatusEdit.CreatedByUserID.InputTextType)" name="x_CreatedByUserID" id="x_CreatedByUserID" data-table="MTRecruitmentStatus" data-field="x_CreatedByUserID" value="@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.CreatedByUserID.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.CreatedByUserID.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.EditAttributes) aria-describedby="x_CreatedByUserID_help">
@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.CreatedByUserID.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.CreatedByUserID.Visible (end) *@
@if (mtRecruitmentStatusEdit.CreatedDateTime.Visible) { // mtRecruitmentStatusEdit.CreatedDateTime.Visible (begin)
    <div id="r_CreatedDateTime" @Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_CreatedDateTime" for="x_CreatedDateTime" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.Caption)@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.CellAttributes)>
<span id="el_MTRecruitmentStatus_CreatedDateTime">
<input type="@(mtRecruitmentStatusEdit.CreatedDateTime.InputTextType)" name="x_CreatedDateTime" id="x_CreatedDateTime" data-table="MTRecruitmentStatus" data-field="x_CreatedDateTime" value="@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.CreatedDateTime.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.CreatedDateTime.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.EditAttributes) aria-describedby="x_CreatedDateTime_help">
@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.CreatedDateTime.GetErrorMessage())</div>
@if (!mtRecruitmentStatusEdit.CreatedDateTime.ReadOnly && !mtRecruitmentStatusEdit.CreatedDateTime.Disabled && !mtRecruitmentStatusEdit.CreatedDateTime.EditAttrs.Is("readonly") && !mtRecruitmentStatusEdit.CreatedDateTime.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTRecruitmentStatusedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTRecruitmentStatusedit", "x_CreatedDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.CreatedDateTime.Visible (end) *@
@if (mtRecruitmentStatusEdit.LastUpdatedByUserID.Visible) { // mtRecruitmentStatusEdit.LastUpdatedByUserID.Visible (begin)
    <div id="r_LastUpdatedByUserID" @Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_LastUpdatedByUserID" for="x_LastUpdatedByUserID" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.Caption)@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.CellAttributes)>
<span id="el_MTRecruitmentStatus_LastUpdatedByUserID">
<input type="@(mtRecruitmentStatusEdit.LastUpdatedByUserID.InputTextType)" name="x_LastUpdatedByUserID" id="x_LastUpdatedByUserID" data-table="MTRecruitmentStatus" data-field="x_LastUpdatedByUserID" value="@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.LastUpdatedByUserID.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.LastUpdatedByUserID.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.EditAttributes) aria-describedby="x_LastUpdatedByUserID_help">
@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedByUserID.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.LastUpdatedByUserID.Visible (end) *@
@if (mtRecruitmentStatusEdit.LastUpdatedDateTime.Visible) { // mtRecruitmentStatusEdit.LastUpdatedDateTime.Visible (begin)
    <div id="r_LastUpdatedDateTime" @Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.RowAttributes)>
        <label id="elh_MTRecruitmentStatus_LastUpdatedDateTime" for="x_LastUpdatedDateTime" class="@(mtRecruitmentStatusEdit.LeftColumnClass)">@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.Caption)@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtRecruitmentStatusEdit.RightColumnClass)"><div @Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.CellAttributes)>
<span id="el_MTRecruitmentStatus_LastUpdatedDateTime">
<input type="@(mtRecruitmentStatusEdit.LastUpdatedDateTime.InputTextType)" name="x_LastUpdatedDateTime" id="x_LastUpdatedDateTime" data-table="MTRecruitmentStatus" data-field="x_LastUpdatedDateTime" value="@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.EditValue)" placeholder="@Html.Raw(HtmlEncode(mtRecruitmentStatusEdit.LastUpdatedDateTime.PlaceHolder))" data-format-pattern="@(mtRecruitmentStatusEdit.LastUpdatedDateTime.FormatPattern)"@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.EditAttributes) aria-describedby="x_LastUpdatedDateTime_help">
@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtRecruitmentStatusEdit.LastUpdatedDateTime.GetErrorMessage())</div>
@if (!mtRecruitmentStatusEdit.LastUpdatedDateTime.ReadOnly && !mtRecruitmentStatusEdit.LastUpdatedDateTime.Disabled && !mtRecruitmentStatusEdit.LastUpdatedDateTime.EditAttrs.Is("readonly") && !mtRecruitmentStatusEdit.LastUpdatedDateTime.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fMTRecruitmentStatusedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fMTRecruitmentStatusedit", "x_LastUpdatedDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* mtRecruitmentStatusEdit.LastUpdatedDateTime.Visible (end) *@
</div><!-- /page* -->
@{ mtRecruitmentStatusEdit.CloseRecordset(); }
@Html.Raw(mtRecruitmentStatusEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtRecruitmentStatusEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTRecruitmentStatusedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTRecruitmentStatusedit" data-href="@AppPath(mtRecruitmentStatusEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtRecruitmentStatusEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
</main>
@mtRecruitmentStatusEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTRecruitmentStatus");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
