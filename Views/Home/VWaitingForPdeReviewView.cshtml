@{
    // View
    View = this;

    // Check action result
    if (vWaitingForPdeReviewView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!vWaitingForPdeReviewView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!vWaitingForPdeReviewView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!vWaitingForPdeReviewView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @vWaitingForPdeReviewView.ExportOptions.RenderBody()
    @vWaitingForPdeReviewView.OtherOptions.RenderBody()
</div>
}
@vWaitingForPdeReviewView.ShowPageHeader()
@vWaitingForPdeReviewView.ShowMessages()
<main class="view">
<form name="fv_WaitingForPDEReviewview" id="fv_WaitingForPDEReviewview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!vWaitingForPdeReviewView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(vWaitingForPdeReviewView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { v_WaitingForPDEReview: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fv_WaitingForPDEReviewview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fv_WaitingForPDEReviewview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(vWaitingForPdeReviewView.IsModal)">
<table class="@(vWaitingForPdeReviewView.TableClass)">
@if (vWaitingForPdeReviewView.IndividualCodeNumber.Visible) { // vWaitingForPdeReviewView.IndividualCodeNumber.Visible (begin)
    <tr id="r_IndividualCodeNumber" @Html.Raw(vWaitingForPdeReviewView.IndividualCodeNumber.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_IndividualCodeNumber">@Html.Raw(vWaitingForPdeReviewView.IndividualCodeNumber.Caption)</span></td>
        <td data-name="IndividualCodeNumber" @Html.Raw(vWaitingForPdeReviewView.IndividualCodeNumber.CellAttributes)>
<span id="el_v_WaitingForPDEReview_IndividualCodeNumber">
<span @Html.Raw(vWaitingForPdeReviewView.IndividualCodeNumber.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.IndividualCodeNumber.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.IndividualCodeNumber.Visible (end) *@
@if (vWaitingForPdeReviewView.FullName.Visible) { // vWaitingForPdeReviewView.FullName.Visible (begin)
    <tr id="r_FullName" @Html.Raw(vWaitingForPdeReviewView.FullName.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_FullName">@Html.Raw(vWaitingForPdeReviewView.FullName.Caption)</span></td>
        <td data-name="FullName" @Html.Raw(vWaitingForPdeReviewView.FullName.CellAttributes)>
<span id="el_v_WaitingForPDEReview_FullName">
<span @Html.Raw(vWaitingForPdeReviewView.FullName.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.FullName.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.FullName.Visible (end) *@
@if (vWaitingForPdeReviewView.RequiredPhoto.Visible) { // vWaitingForPdeReviewView.RequiredPhoto.Visible (begin)
    <tr id="r_RequiredPhoto" @Html.Raw(vWaitingForPdeReviewView.RequiredPhoto.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_RequiredPhoto">@Html.Raw(vWaitingForPdeReviewView.RequiredPhoto.Caption)</span></td>
        <td data-name="RequiredPhoto" @Html.Raw(vWaitingForPdeReviewView.RequiredPhoto.CellAttributes)>
<span id="el_v_WaitingForPDEReview_RequiredPhoto">
<span @Html.Raw(vWaitingForPdeReviewView.RequiredPhoto.ViewAttributes)><a href="uploads/@ConvertToString(vWaitingForPdeReviewList.IndividualCodeNumber.GetViewValue())/@ConvertToString(vWaitingForPdeReviewList.RequiredPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.RequiredPhoto.Visible (end) *@
@if (vWaitingForPdeReviewView.VisaPhoto.Visible) { // vWaitingForPdeReviewView.VisaPhoto.Visible (begin)
    <tr id="r_VisaPhoto" @Html.Raw(vWaitingForPdeReviewView.VisaPhoto.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_VisaPhoto">@Html.Raw(vWaitingForPdeReviewView.VisaPhoto.Caption)</span></td>
        <td data-name="VisaPhoto" @Html.Raw(vWaitingForPdeReviewView.VisaPhoto.CellAttributes)>
<span id="el_v_WaitingForPDEReview_VisaPhoto">
<span @Html.Raw(vWaitingForPdeReviewView.VisaPhoto.ViewAttributes)><a href="uploads/@ConvertToString(vWaitingForPdeReviewList.IndividualCodeNumber.GetViewValue())/@ConvertToString(vWaitingForPdeReviewList.VisaPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.VisaPhoto.Visible (end) *@
@if (vWaitingForPdeReviewView.Gender.Visible) { // vWaitingForPdeReviewView.Gender.Visible (begin)
    <tr id="r_Gender" @Html.Raw(vWaitingForPdeReviewView.Gender.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_Gender">@Html.Raw(vWaitingForPdeReviewView.Gender.Caption)</span></td>
        <td data-name="Gender" @Html.Raw(vWaitingForPdeReviewView.Gender.CellAttributes)>
<span id="el_v_WaitingForPDEReview_Gender">
<span @Html.Raw(vWaitingForPdeReviewView.Gender.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.Gender.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.Gender.Visible (end) *@
@if (vWaitingForPdeReviewView.RankAppliedFor.Visible) { // vWaitingForPdeReviewView.RankAppliedFor.Visible (begin)
    <tr id="r_RankAppliedFor" @Html.Raw(vWaitingForPdeReviewView.RankAppliedFor.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_RankAppliedFor">@Html.Raw(vWaitingForPdeReviewView.RankAppliedFor.Caption)</span></td>
        <td data-name="RankAppliedFor" @Html.Raw(vWaitingForPdeReviewView.RankAppliedFor.CellAttributes)>
<span id="el_v_WaitingForPDEReview_RankAppliedFor">
<span @Html.Raw(vWaitingForPdeReviewView.RankAppliedFor.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.RankAppliedFor.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.RankAppliedFor.Visible (end) *@
@if (vWaitingForPdeReviewView.WillAcceptLowRank.Visible) { // vWaitingForPdeReviewView.WillAcceptLowRank.Visible (begin)
    <tr id="r_WillAcceptLowRank" @Html.Raw(vWaitingForPdeReviewView.WillAcceptLowRank.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_WillAcceptLowRank">@Html.Raw(vWaitingForPdeReviewView.WillAcceptLowRank.Caption)</span></td>
        <td data-name="WillAcceptLowRank" @Html.Raw(vWaitingForPdeReviewView.WillAcceptLowRank.CellAttributes)>
<span id="el_v_WaitingForPDEReview_WillAcceptLowRank">
<span @Html.Raw(vWaitingForPdeReviewView.WillAcceptLowRank.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_WillAcceptLowRank_@(vWaitingForPdeReviewView.RowCount)" class="form-check-input" value="@(vWaitingForPdeReviewView.WillAcceptLowRank.GetViewValue())" disabled checked="@(ConvertToBool(vWaitingForPdeReviewView.WillAcceptLowRank.CurrentValue))">
    <label class="form-check-label" for="x_WillAcceptLowRank_@(vWaitingForPdeReviewView.RowCount)"></label>
</div></span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.WillAcceptLowRank.Visible (end) *@
@if (vWaitingForPdeReviewView.AvailableFrom.Visible) { // vWaitingForPdeReviewView.AvailableFrom.Visible (begin)
    <tr id="r_AvailableFrom" @Html.Raw(vWaitingForPdeReviewView.AvailableFrom.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_AvailableFrom">@Html.Raw(vWaitingForPdeReviewView.AvailableFrom.Caption)</span></td>
        <td data-name="AvailableFrom" @Html.Raw(vWaitingForPdeReviewView.AvailableFrom.CellAttributes)>
<span id="el_v_WaitingForPDEReview_AvailableFrom">
<span @Html.Raw(vWaitingForPdeReviewView.AvailableFrom.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.AvailableFrom.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.AvailableFrom.Visible (end) *@
@if (vWaitingForPdeReviewView.AvailableUntil.Visible) { // vWaitingForPdeReviewView.AvailableUntil.Visible (begin)
    <tr id="r_AvailableUntil" @Html.Raw(vWaitingForPdeReviewView.AvailableUntil.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_AvailableUntil">@Html.Raw(vWaitingForPdeReviewView.AvailableUntil.Caption)</span></td>
        <td data-name="AvailableUntil" @Html.Raw(vWaitingForPdeReviewView.AvailableUntil.CellAttributes)>
<span id="el_v_WaitingForPDEReview_AvailableUntil">
<span @Html.Raw(vWaitingForPdeReviewView.AvailableUntil.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.AvailableUntil.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.AvailableUntil.Visible (end) *@
@if (vWaitingForPdeReviewView.FormSubmittedDateTime.Visible) { // vWaitingForPdeReviewView.FormSubmittedDateTime.Visible (begin)
    <tr id="r_FormSubmittedDateTime" @Html.Raw(vWaitingForPdeReviewView.FormSubmittedDateTime.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_FormSubmittedDateTime">@Html.Raw(vWaitingForPdeReviewView.FormSubmittedDateTime.Caption)</span></td>
        <td data-name="FormSubmittedDateTime" @Html.Raw(vWaitingForPdeReviewView.FormSubmittedDateTime.CellAttributes)>
<span id="el_v_WaitingForPDEReview_FormSubmittedDateTime">
<span @Html.Raw(vWaitingForPdeReviewView.FormSubmittedDateTime.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.FormSubmittedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.FormSubmittedDateTime.Visible (end) *@
@if (vWaitingForPdeReviewView.ManningAgentName.Visible) { // vWaitingForPdeReviewView.ManningAgentName.Visible (begin)
    <tr id="r_ManningAgentName" @Html.Raw(vWaitingForPdeReviewView.ManningAgentName.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_ManningAgentName">@Html.Raw(vWaitingForPdeReviewView.ManningAgentName.Caption)</span></td>
        <td data-name="ManningAgentName" @Html.Raw(vWaitingForPdeReviewView.ManningAgentName.CellAttributes)>
<span id="el_v_WaitingForPDEReview_ManningAgentName">
<span @Html.Raw(vWaitingForPdeReviewView.ManningAgentName.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.ManningAgentName.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.ManningAgentName.Visible (end) *@
@if (vWaitingForPdeReviewView.CreatedBy.Visible) { // vWaitingForPdeReviewView.CreatedBy.Visible (begin)
    <tr id="r_CreatedBy" @Html.Raw(vWaitingForPdeReviewView.CreatedBy.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_CreatedBy">@Html.Raw(vWaitingForPdeReviewView.CreatedBy.Caption)</span></td>
        <td data-name="CreatedBy" @Html.Raw(vWaitingForPdeReviewView.CreatedBy.CellAttributes)>
<span id="el_v_WaitingForPDEReview_CreatedBy">
<span @Html.Raw(vWaitingForPdeReviewView.CreatedBy.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.CreatedBy.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.CreatedBy.Visible (end) *@
@if (vWaitingForPdeReviewView.CreatedDateTime.Visible) { // vWaitingForPdeReviewView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(vWaitingForPdeReviewView.CreatedDateTime.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_CreatedDateTime">@Html.Raw(vWaitingForPdeReviewView.CreatedDateTime.Caption)</span></td>
        <td data-name="CreatedDateTime" @Html.Raw(vWaitingForPdeReviewView.CreatedDateTime.CellAttributes)>
<span id="el_v_WaitingForPDEReview_CreatedDateTime">
<span @Html.Raw(vWaitingForPdeReviewView.CreatedDateTime.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.CreatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.CreatedDateTime.Visible (end) *@
@if (vWaitingForPdeReviewView.LastUpdatedBy.Visible) { // vWaitingForPdeReviewView.LastUpdatedBy.Visible (begin)
    <tr id="r_LastUpdatedBy" @Html.Raw(vWaitingForPdeReviewView.LastUpdatedBy.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_LastUpdatedBy">@Html.Raw(vWaitingForPdeReviewView.LastUpdatedBy.Caption)</span></td>
        <td data-name="LastUpdatedBy" @Html.Raw(vWaitingForPdeReviewView.LastUpdatedBy.CellAttributes)>
<span id="el_v_WaitingForPDEReview_LastUpdatedBy">
<span @Html.Raw(vWaitingForPdeReviewView.LastUpdatedBy.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.LastUpdatedBy.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.LastUpdatedBy.Visible (end) *@
@if (vWaitingForPdeReviewView.LastUpdatedDateTime.Visible) { // vWaitingForPdeReviewView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(vWaitingForPdeReviewView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(vWaitingForPdeReviewView.TableLeftColumnClass)"><span id="elh_v_WaitingForPDEReview_LastUpdatedDateTime">@Html.Raw(vWaitingForPdeReviewView.LastUpdatedDateTime.Caption)</span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(vWaitingForPdeReviewView.LastUpdatedDateTime.CellAttributes)>
<span id="el_v_WaitingForPDEReview_LastUpdatedDateTime">
<span @Html.Raw(vWaitingForPdeReviewView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(vWaitingForPdeReviewView.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* vWaitingForPdeReviewView.LastUpdatedDateTime.Visible (end) *@
</table>
@{ vWaitingForPdeReviewView.CloseRecordset(); }
</form>
</main>
@vWaitingForPdeReviewView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!vWaitingForPdeReviewView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
