@{
    // View
    View = this;

    // Check action result
    if (crewDocumentForAdminViewModeView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewDocumentForAdminViewModeView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewDocumentForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewDocumentForAdminViewModeView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewDocumentForAdminViewModeView.ExportOptions.RenderBody()
    @crewDocumentForAdminViewModeView.OtherOptions.RenderBody()
</div>
}
@crewDocumentForAdminViewModeView.ShowPageHeader()
@crewDocumentForAdminViewModeView.ShowMessages()
<main class="view">
<form name="fCrewDocumentForAdminViewModeview" id="fCrewDocumentForAdminViewModeview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewDocumentForAdminViewModeView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewDocumentForAdminViewModeView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewDocumentForAdminViewMode: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewDocumentForAdminViewModeview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewDocumentForAdminViewModeview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewDocumentForAdminViewModeView.IsModal)">
<table class="@(crewDocumentForAdminViewModeView.TableClass)">
@if (crewDocumentForAdminViewModeView.MTCrewID.Visible) { // crewDocumentForAdminViewModeView.MTCrewID.Visible (begin)
    <tr id="r_MTCrewID" @Html.Raw(crewDocumentForAdminViewModeView.MTCrewID.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_MTCrewID"><template id="tpc_CrewDocumentForAdminViewMode_MTCrewID">@Html.Raw(crewDocumentForAdminViewModeView.MTCrewID.Caption)</template></span></td>
        <td data-name="MTCrewID" @Html.Raw(crewDocumentForAdminViewModeView.MTCrewID.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_MTCrewID"><span id="el_CrewDocumentForAdminViewMode_MTCrewID">
<span @Html.Raw(crewDocumentForAdminViewModeView.MTCrewID.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.MTCrewID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.MTCrewID.Visible (end) *@
@if (crewDocumentForAdminViewModeView.MTDocumentID.Visible) { // crewDocumentForAdminViewModeView.MTDocumentID.Visible (begin)
    <tr id="r_MTDocumentID" @Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_MTDocumentID"><template id="tpc_CrewDocumentForAdminViewMode_MTDocumentID">@Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.Caption)</template></span></td>
        <td data-name="MTDocumentID" @Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_MTDocumentID"><span id="el_CrewDocumentForAdminViewMode_MTDocumentID">
<span @Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.MTDocumentID.Visible (end) *@
@if (crewDocumentForAdminViewModeView.Number.Visible) { // crewDocumentForAdminViewModeView.Number.Visible (begin)
    <tr id="r_Number" @Html.Raw(crewDocumentForAdminViewModeView.Number.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_Number"><template id="tpc_CrewDocumentForAdminViewMode_Number">@Html.Raw(crewDocumentForAdminViewModeView.Number.Caption)</template></span></td>
        <td data-name="Number" @Html.Raw(crewDocumentForAdminViewModeView.Number.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_Number"><span id="el_CrewDocumentForAdminViewMode_Number">
<span @Html.Raw(crewDocumentForAdminViewModeView.Number.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.Number.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.Number.Visible (end) *@
@if (crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.Visible) { // crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.Visible (begin)
    <tr id="r_CountryOfIssue_CountryID" @Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_CountryOfIssue_CountryID"><template id="tpc_CrewDocumentForAdminViewMode_CountryOfIssue_CountryID">@Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.Caption)</template></span></td>
        <td data-name="CountryOfIssue_CountryID" @Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_CountryOfIssue_CountryID"><span id="el_CrewDocumentForAdminViewMode_CountryOfIssue_CountryID">
<span @Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.Visible (end) *@
@if (crewDocumentForAdminViewModeView.DateOfIssue.Visible) { // crewDocumentForAdminViewModeView.DateOfIssue.Visible (begin)
    <tr id="r_DateOfIssue" @Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_DateOfIssue"><template id="tpc_CrewDocumentForAdminViewMode_DateOfIssue">@Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.Caption)</template></span></td>
        <td data-name="DateOfIssue" @Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_DateOfIssue"><span id="el_CrewDocumentForAdminViewMode_DateOfIssue">
<span @Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.DateOfIssue.Visible (end) *@
@if (crewDocumentForAdminViewModeView.PlaceOfIssue.Visible) { // crewDocumentForAdminViewModeView.PlaceOfIssue.Visible (begin)
    <tr id="r_PlaceOfIssue" @Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_PlaceOfIssue"><template id="tpc_CrewDocumentForAdminViewMode_PlaceOfIssue">@Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.Caption)</template></span></td>
        <td data-name="PlaceOfIssue" @Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_PlaceOfIssue"><span id="el_CrewDocumentForAdminViewMode_PlaceOfIssue">
<span @Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.PlaceOfIssue.Visible (end) *@
@if (crewDocumentForAdminViewModeView.DateValidUntil.Visible) { // crewDocumentForAdminViewModeView.DateValidUntil.Visible (begin)
    <tr id="r_DateValidUntil" @Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_DateValidUntil"><template id="tpc_CrewDocumentForAdminViewMode_DateValidUntil">@Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.Caption)</template></span></td>
        <td data-name="DateValidUntil" @Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_DateValidUntil"><span id="el_CrewDocumentForAdminViewMode_DateValidUntil">
<span @Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.DateValidUntil.Visible (end) *@
@if (crewDocumentForAdminViewModeView.Image.Visible) { // crewDocumentForAdminViewModeView.Image.Visible (begin)
    <tr id="r_Image" @Html.Raw(crewDocumentForAdminViewModeView.Image.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_Image"><template id="tpc_CrewDocumentForAdminViewMode_Image">@Html.Raw(crewDocumentForAdminViewModeView.Image.Caption)</template></span></td>
        <td data-name="Image" @Html.Raw(crewDocumentForAdminViewModeView.Image.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_Image"><span id="el_CrewDocumentForAdminViewMode_Image">
<span>
@Html.Raw(await GetFileViewTag((DbField)crewDocumentForAdminViewModeView.Image, ConvertToString(crewDocumentForAdminViewModeView.Image.GetViewValue()), false))
</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.Image.Visible (end) *@
@if (crewDocumentForAdminViewModeView.CreatedByUserID.Visible) { // crewDocumentForAdminViewModeView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(crewDocumentForAdminViewModeView.CreatedByUserID.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_CreatedByUserID"><template id="tpc_CrewDocumentForAdminViewMode_CreatedByUserID">@Html.Raw(crewDocumentForAdminViewModeView.CreatedByUserID.Caption)</template></span></td>
        <td data-name="CreatedByUserID" @Html.Raw(crewDocumentForAdminViewModeView.CreatedByUserID.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_CreatedByUserID"><span id="el_CrewDocumentForAdminViewMode_CreatedByUserID">
<span @Html.Raw(crewDocumentForAdminViewModeView.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.CreatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.CreatedByUserID.Visible (end) *@
@if (crewDocumentForAdminViewModeView.CreatedDateTime.Visible) { // crewDocumentForAdminViewModeView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(crewDocumentForAdminViewModeView.CreatedDateTime.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_CreatedDateTime"><template id="tpc_CrewDocumentForAdminViewMode_CreatedDateTime">@Html.Raw(crewDocumentForAdminViewModeView.CreatedDateTime.Caption)</template></span></td>
        <td data-name="CreatedDateTime" @Html.Raw(crewDocumentForAdminViewModeView.CreatedDateTime.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_CreatedDateTime"><span id="el_CrewDocumentForAdminViewMode_CreatedDateTime">
<span @Html.Raw(crewDocumentForAdminViewModeView.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.CreatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.CreatedDateTime.Visible (end) *@
@if (crewDocumentForAdminViewModeView.LastUpdatedByUserID.Visible) { // crewDocumentForAdminViewModeView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_LastUpdatedByUserID"><template id="tpc_CrewDocumentForAdminViewMode_LastUpdatedByUserID">@Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedByUserID.Caption)</template></span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedByUserID.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_LastUpdatedByUserID"><span id="el_CrewDocumentForAdminViewMode_LastUpdatedByUserID">
<span @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.LastUpdatedByUserID.Visible (end) *@
@if (crewDocumentForAdminViewModeView.LastUpdatedDateTime.Visible) { // crewDocumentForAdminViewModeView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_LastUpdatedDateTime"><template id="tpc_CrewDocumentForAdminViewMode_LastUpdatedDateTime">@Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedDateTime.Caption)</template></span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedDateTime.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_LastUpdatedDateTime"><span id="el_CrewDocumentForAdminViewMode_LastUpdatedDateTime">
<span @Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewDocumentForAdminViewModeView.LastUpdatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.LastUpdatedDateTime.Visible (end) *@
@if (crewDocumentForAdminViewModeView.IsDraft.Visible) { // crewDocumentForAdminViewModeView.IsDraft.Visible (begin)
    <tr id="r_IsDraft" @Html.Raw(crewDocumentForAdminViewModeView.IsDraft.RowAttributes)>
        <td class="@(crewDocumentForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewDocumentForAdminViewMode_IsDraft"><template id="tpc_CrewDocumentForAdminViewMode_IsDraft">@Html.Raw(crewDocumentForAdminViewModeView.IsDraft.Caption)</template></span></td>
        <td data-name="IsDraft" @Html.Raw(crewDocumentForAdminViewModeView.IsDraft.CellAttributes)>
<template id="tpx_CrewDocumentForAdminViewMode_IsDraft"><span id="el_CrewDocumentForAdminViewMode_IsDraft">
<span @Html.Raw(crewDocumentForAdminViewModeView.IsDraft.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_IsDraft_@(crewDocumentForAdminViewModeView.RowCount)" class="form-check-input" value="@(crewDocumentForAdminViewModeView.IsDraft.GetViewValue())" disabled checked="@(ConvertToBool(crewDocumentForAdminViewModeView.IsDraft.CurrentValue))">
    <label class="form-check-label" for="x_IsDraft_@(crewDocumentForAdminViewModeView.RowCount)"></label>
</div></span>
</span></template></td>
    </tr>
} @* crewDocumentForAdminViewModeView.IsDraft.Visible (end) *@
</table>
<div id="tpd_CrewDocumentForAdminViewModeview" class="ew-custom-template"></div>
<template id="tpm_CrewDocumentForAdminViewModeview">
<div id="ct_crewDocumentForAdminViewModeView">    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
            </a>     
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
            </a>
        </li>
    </ul>  
    <div class="row">
        <div class="col-sm-6">
            <div id="r_MTDocumentID" class="mb-2 row">
                <label for="x_MTDocumentID" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.MTDocumentID.Caption)</label>
                <div>
                    @{
                        string mtDocumentID = crewDocumentForAdminViewModeView.MTDocumentID.GetViewValue();
                        object documentTypeObject = ExecuteScalar("SELECT Type FROM MTDocument WHERE ID = '" + mtDocumentID + "';");
                    }
                    @if (documentTypeObject != null)
                    {
                        @Html.Raw(documentTypeObject.ToString());
                    }
                    else
                    {
                        @Html.Raw("&nbsp;");
                    }
                </div>
            </div>
            <div id="r_CountryOfIssue_CountryID" class="mb-2 row">
                <label for="x_CountryOfIssue_CountryID" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.CountryOfIssue_CountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_CountryOfIssue_CountryID"></slot>
                        }
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                     <div id="r_DateOfIssue" class="mb-2 row">
                        <label for="x_DateOfIssue" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.DateOfIssue.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.DateOfIssue.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_DateOfIssue"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_DateValidUntil" class="mb-2 row">
                        <label for="x_DateValidUntil" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.DateValidUntil.Caption)</label>
                        <div>
                            @{
                                if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.DateValidUntil.GetViewValue()))
                                {
                                    @Html.Raw("&nbsp;");
                                }
                                else
                                {
                                    <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_DateValidUntil"></slot>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_Number" class="mb-2 row">
                <label for="x_Number" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.Number.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.Number.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_Number"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_PlaceOfIssue" class="mb-2 row">
                <label for="x_PlaceOfIssue" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.PlaceOfIssue.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.PlaceOfIssue.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_PlaceOfIssue"></slot>
                        }
                    }
                </div>
            </div>
            <div id="r_Image" class="mb-2 row">
                <label for="x_Image" class="col-form-label">@Html.Raw(crewDocumentForAdminViewModeView.Image.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewDocumentForAdminViewModeView.Image.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewDocumentForAdminViewMode_Image"></slot>
                        }
                    }
                </div>
            </div>
        </div> 
    </div>
    <div id="approve-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="ew-modal-dialog-title" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="ew-modal-dialog-title" class="modal-title">
                        @(CurrentLanguage == "en-US" ? "Confirmation" : "Konfirmasi")
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        @(CurrentLanguage == "en-US" ? "Are you sure you want to approve?" : "Apakah Anda yakin untuk menyetujui?")
                    </p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary ew-btn" id="btn-approve" type="button">
                        @(CurrentLanguage == "en-US" ? "Yes" : "Iya")
                    </button>
                    <button class="btn btn-default ew-btn" id="btn-cancel" type="button" data-bs-dismiss="modal">
                        @(CurrentLanguage == "en-US" ? "No" : "Tidak")
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
</template>
@{ crewDocumentForAdminViewModeView.CloseRecordset(); }
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewDocumentForAdminViewModeView.Rows)) };
    ew.applyTemplate("tpd_CrewDocumentForAdminViewModeview", "tpm_CrewDocumentForAdminViewModeview", "CrewDocumentForAdminViewModeview", "@(crewDocumentForAdminViewModeView.Export)", "CrewDocumentForAdminViewMode", ew.templateData.rows[0], @(crewDocumentForAdminViewModeView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewDocumentForAdminViewModeView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewDocumentForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // get the current URL without Add or Edit for assigning active class in tabs
    const currentUrlWithoutAddEditListView = currentUrlObject.href.replace(/Add|Edit|List|View/g, "");
    // Create a new URLSearchParams object based on the current URL's search parameters
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    // Extract the value of the crewID query parameter
    const currentlyEditedCrewID = urlQueryParams.get('crewID');
    const crewDocumentID = currentUrlObject.pathname.split('/').pop();

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        const hrefWithoutAddEditListView = href.replace(/Add|Edit|List|View/g, "");
        // Check if the href contains current page's url
        if (currentUrlWithoutAddEditListView.includes(hrefWithoutAddEditListView)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the href contains "Edit" or "Add"
        if (href.includes("ViewModeView")) {
            // Add "/" and the currently edited crew ID to the href
            const newHref = href + "/" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("ViewModeList")) {
            // Add "?crewID=" and the currently edited crew ID to the href
            const newHref = href + "?crewID=" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();
    $('div.btn-toolbar.ew-toolbar').remove();
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                // Parse the data in the response
                const isAdmin = response.data.IsAdmin;
                const employeeStatus = response.data.EmployeeStatus;
                if (currentlyEditedCrewID === null) {
                    if (isAdmin) {
                        // redirect to list page with error message: record not found
                        if (employeeStatus === 'Candidate - Draft') {
                            window.location.replace(`${ew.PATH_BASE}RegistrationEdit/-1`);
                        } else if (employeeStatus === 'Candidate - Submitted') {
                            window.location.replace(`${ew.PATH_BASE}VWaitingForPdeReviewView/-1`);
                        }
                    } else {
                        window.location.replace(`${ew.PATH_BASE}index`);
                    }
                }

                // add buttons
                const flexDiv = $("<div class='d-flex mb-3'></div>");
                if (employeeStatus === 'Candidate - Draft') {
                    const editButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-edit",
                        name: "btn-edit",
                        href: `${ew.PATH_BASE}CrewDocumentForAdminViewModeEdit/${crewDocumentID}?crewID=${currentlyEditedCrewID}`,
                    });
                    const deleteButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Delete" : "Hapus",
                        class: "btn btn-default ew-btn me-auto primary-red-bg primary-white-clr ew-action ew-delete", 
                        id: "btn-delete",
                        name: "btn-delete",
                        href: `${ew.PATH_BASE}CrewDocumentForAdminViewModeDelete/${crewDocumentID}`,
                        "data-ew-action": "inline-delete",
                        "data-caption": "Delete",
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewDocumentForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(editButton);
                    flexDiv.append(deleteButton);
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewDocumentForAdminViewModeview').append(buttonsDiv);
                } else if (employeeStatus === 'Candidate - Submitted') {
                    const approveButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Approve" : "Setujui",
                        class: "btn btn-primary ew-btn me-auto", 
                        id: "btn-invoke-approve-modal",
                        href: `#`,
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewDocumentForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    approveButton.on('click', function(event) {
                        event.preventDefault(); // Prevent the default behavior of the anchor element
                        $('#approve-modal-dialog').modal('show');
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    if (isAdmin) {
                        flexDiv.append(approveButton);
                    }
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewDocumentForAdminViewModeview').append(buttonsDiv);
                    if (isAdmin) {
                        const approveCrewDocumentApiUrl = "approve-crew-document";
                        $("#btn-approve").click(function() {
                            $.ajax({
                                method: "POST",
                                url: `${parentUrl}api/Registration/${approveCrewDocumentApiUrl}?crewDocumentID=${parseInt(crewDocumentID, 10)}`,
                                success: function(response) {
                                    if (response.success) {
                                        $('#approve-modal-dialog').modal('hide');
                                        let successMessage = '';
                                        if (selectedLanguage.id === 'en-US') {
                                            successMessage = `Approve Document Successful`;
                                        } else {
                                            successMessage = `Menyetujui Dokumen Berhasil`;
                                        }                
                                        const baseUrl = new URL(window.location.href).origin + ew.PATH_BASE;
                                        const targetUrl = new URL(`${baseUrl}CrewDocumentForAdminViewModeList?crewID=${currentlyEditedCrewID}`);
                                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                                        const params = new URLSearchParams(targetUrl.search);
                                        params.set('successMessage', encodedSuccessMessage);
                                        targetUrl.search = params.toString();
                                        window.location.href = targetUrl.href;
                                    } else {
                                        $('#approve-modal-dialog').modal('hide');
                                        const errorMessage = response.errorMessage;
                                        ew.showToast(errorMessage);
                                    }
                                },
                                error: function(xhr, textStatus, errorThrown) {
                                    $('#approve-modal-dialog').modal('hide');
                                    ew.showToast(errorThrown);
                                }
                            });
                        });
                    }
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
});
</script>
}
