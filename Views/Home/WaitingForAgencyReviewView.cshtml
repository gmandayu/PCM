@{
    // View
    View = this;

    // Check action result
    if (waitingForAgencyReviewView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!waitingForAgencyReviewView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!waitingForAgencyReviewView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!waitingForAgencyReviewView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @waitingForAgencyReviewView.ExportOptions.RenderBody()
    @waitingForAgencyReviewView.OtherOptions.RenderBody()
</div>
}
@waitingForAgencyReviewView.ShowPageHeader()
@waitingForAgencyReviewView.ShowMessages()
<main class="view">
<form name="fWaitingForAgencyReviewview" id="fWaitingForAgencyReviewview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!waitingForAgencyReviewView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(waitingForAgencyReviewView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { WaitingForAgencyReview: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fWaitingForAgencyReviewview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fWaitingForAgencyReviewview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(waitingForAgencyReviewView.IsModal)">
<table class="@(waitingForAgencyReviewView.TableClass)">
@if (waitingForAgencyReviewView.IndividualCodeNumber.Visible) { // waitingForAgencyReviewView.IndividualCodeNumber.Visible (begin)
    <tr id="r_IndividualCodeNumber" @Html.Raw(waitingForAgencyReviewView.IndividualCodeNumber.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_IndividualCodeNumber">@Html.Raw(waitingForAgencyReviewView.IndividualCodeNumber.Caption)</span></td>
        <td data-name="IndividualCodeNumber" @Html.Raw(waitingForAgencyReviewView.IndividualCodeNumber.CellAttributes)>
<span id="el_WaitingForAgencyReview_IndividualCodeNumber">
<span @Html.Raw(waitingForAgencyReviewView.IndividualCodeNumber.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.IndividualCodeNumber.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.IndividualCodeNumber.Visible (end) *@
@if (waitingForAgencyReviewView.FullName.Visible) { // waitingForAgencyReviewView.FullName.Visible (begin)
    <tr id="r_FullName" @Html.Raw(waitingForAgencyReviewView.FullName.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_FullName">@Html.Raw(waitingForAgencyReviewView.FullName.Caption)</span></td>
        <td data-name="FullName" @Html.Raw(waitingForAgencyReviewView.FullName.CellAttributes)>
<span id="el_WaitingForAgencyReview_FullName">
<span @Html.Raw(waitingForAgencyReviewView.FullName.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.FullName.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.FullName.Visible (end) *@
@if (waitingForAgencyReviewView.RequiredPhoto.Visible) { // waitingForAgencyReviewView.RequiredPhoto.Visible (begin)
    <tr id="r_RequiredPhoto" @Html.Raw(waitingForAgencyReviewView.RequiredPhoto.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_RequiredPhoto">@Html.Raw(waitingForAgencyReviewView.RequiredPhoto.Caption)</span></td>
        <td data-name="RequiredPhoto" @Html.Raw(waitingForAgencyReviewView.RequiredPhoto.CellAttributes)>
<span id="el_WaitingForAgencyReview_RequiredPhoto">
<span @Html.Raw(waitingForAgencyReviewView.RequiredPhoto.ViewAttributes)><a href="uploads/@ConvertToString(waitingForAgencyReviewList.IndividualCodeNumber.GetViewValue())/@ConvertToString(waitingForAgencyReviewList.RequiredPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.RequiredPhoto.Visible (end) *@
@if (waitingForAgencyReviewView.VisaPhoto.Visible) { // waitingForAgencyReviewView.VisaPhoto.Visible (begin)
    <tr id="r_VisaPhoto" @Html.Raw(waitingForAgencyReviewView.VisaPhoto.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_VisaPhoto">@Html.Raw(waitingForAgencyReviewView.VisaPhoto.Caption)</span></td>
        <td data-name="VisaPhoto" @Html.Raw(waitingForAgencyReviewView.VisaPhoto.CellAttributes)>
<span id="el_WaitingForAgencyReview_VisaPhoto">
<span @Html.Raw(waitingForAgencyReviewView.VisaPhoto.ViewAttributes)><a href="uploads/@ConvertToString(waitingForAgencyReviewList.IndividualCodeNumber.GetViewValue())/@ConvertToString(waitingForAgencyReviewList.VisaPhoto.GetViewValue())" target="_blank">Attachment</a>
</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.VisaPhoto.Visible (end) *@
@if (waitingForAgencyReviewView.Gender.Visible) { // waitingForAgencyReviewView.Gender.Visible (begin)
    <tr id="r_Gender" @Html.Raw(waitingForAgencyReviewView.Gender.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_Gender">@Html.Raw(waitingForAgencyReviewView.Gender.Caption)</span></td>
        <td data-name="Gender" @Html.Raw(waitingForAgencyReviewView.Gender.CellAttributes)>
<span id="el_WaitingForAgencyReview_Gender">
<span @Html.Raw(waitingForAgencyReviewView.Gender.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.Gender.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.Gender.Visible (end) *@
@if (waitingForAgencyReviewView.RankAppliedFor.Visible) { // waitingForAgencyReviewView.RankAppliedFor.Visible (begin)
    <tr id="r_RankAppliedFor" @Html.Raw(waitingForAgencyReviewView.RankAppliedFor.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_RankAppliedFor">@Html.Raw(waitingForAgencyReviewView.RankAppliedFor.Caption)</span></td>
        <td data-name="RankAppliedFor" @Html.Raw(waitingForAgencyReviewView.RankAppliedFor.CellAttributes)>
<span id="el_WaitingForAgencyReview_RankAppliedFor">
<span @Html.Raw(waitingForAgencyReviewView.RankAppliedFor.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.RankAppliedFor.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.RankAppliedFor.Visible (end) *@
@if (waitingForAgencyReviewView.WillAcceptLowRank.Visible) { // waitingForAgencyReviewView.WillAcceptLowRank.Visible (begin)
    <tr id="r_WillAcceptLowRank" @Html.Raw(waitingForAgencyReviewView.WillAcceptLowRank.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_WillAcceptLowRank">@Html.Raw(waitingForAgencyReviewView.WillAcceptLowRank.Caption)</span></td>
        <td data-name="WillAcceptLowRank" @Html.Raw(waitingForAgencyReviewView.WillAcceptLowRank.CellAttributes)>
<span id="el_WaitingForAgencyReview_WillAcceptLowRank">
<span @Html.Raw(waitingForAgencyReviewView.WillAcceptLowRank.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_WillAcceptLowRank_@(waitingForAgencyReviewView.RowCount)" class="form-check-input" value="@(waitingForAgencyReviewView.WillAcceptLowRank.GetViewValue())" disabled checked="@(ConvertToBool(waitingForAgencyReviewView.WillAcceptLowRank.CurrentValue))">
    <label class="form-check-label" for="x_WillAcceptLowRank_@(waitingForAgencyReviewView.RowCount)"></label>
</div></span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.WillAcceptLowRank.Visible (end) *@
@if (waitingForAgencyReviewView.AvailableFrom.Visible) { // waitingForAgencyReviewView.AvailableFrom.Visible (begin)
    <tr id="r_AvailableFrom" @Html.Raw(waitingForAgencyReviewView.AvailableFrom.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_AvailableFrom">@Html.Raw(waitingForAgencyReviewView.AvailableFrom.Caption)</span></td>
        <td data-name="AvailableFrom" @Html.Raw(waitingForAgencyReviewView.AvailableFrom.CellAttributes)>
<span id="el_WaitingForAgencyReview_AvailableFrom">
<span @Html.Raw(waitingForAgencyReviewView.AvailableFrom.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.AvailableFrom.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.AvailableFrom.Visible (end) *@
@if (waitingForAgencyReviewView.AvailableUntil.Visible) { // waitingForAgencyReviewView.AvailableUntil.Visible (begin)
    <tr id="r_AvailableUntil" @Html.Raw(waitingForAgencyReviewView.AvailableUntil.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_AvailableUntil">@Html.Raw(waitingForAgencyReviewView.AvailableUntil.Caption)</span></td>
        <td data-name="AvailableUntil" @Html.Raw(waitingForAgencyReviewView.AvailableUntil.CellAttributes)>
<span id="el_WaitingForAgencyReview_AvailableUntil">
<span @Html.Raw(waitingForAgencyReviewView.AvailableUntil.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.AvailableUntil.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.AvailableUntil.Visible (end) *@
@if (waitingForAgencyReviewView.FormSubmittedDateTime.Visible) { // waitingForAgencyReviewView.FormSubmittedDateTime.Visible (begin)
    <tr id="r_FormSubmittedDateTime" @Html.Raw(waitingForAgencyReviewView.FormSubmittedDateTime.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_FormSubmittedDateTime">@Html.Raw(waitingForAgencyReviewView.FormSubmittedDateTime.Caption)</span></td>
        <td data-name="FormSubmittedDateTime" @Html.Raw(waitingForAgencyReviewView.FormSubmittedDateTime.CellAttributes)>
<span id="el_WaitingForAgencyReview_FormSubmittedDateTime">
<span @Html.Raw(waitingForAgencyReviewView.FormSubmittedDateTime.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.FormSubmittedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.FormSubmittedDateTime.Visible (end) *@
@if (waitingForAgencyReviewView.CreatedBy.Visible) { // waitingForAgencyReviewView.CreatedBy.Visible (begin)
    <tr id="r_CreatedBy" @Html.Raw(waitingForAgencyReviewView.CreatedBy.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_CreatedBy">@Html.Raw(waitingForAgencyReviewView.CreatedBy.Caption)</span></td>
        <td data-name="CreatedBy" @Html.Raw(waitingForAgencyReviewView.CreatedBy.CellAttributes)>
<span id="el_WaitingForAgencyReview_CreatedBy">
<span @Html.Raw(waitingForAgencyReviewView.CreatedBy.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.CreatedBy.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.CreatedBy.Visible (end) *@
@if (waitingForAgencyReviewView.CreatedDateTime.Visible) { // waitingForAgencyReviewView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(waitingForAgencyReviewView.CreatedDateTime.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_CreatedDateTime">@Html.Raw(waitingForAgencyReviewView.CreatedDateTime.Caption)</span></td>
        <td data-name="CreatedDateTime" @Html.Raw(waitingForAgencyReviewView.CreatedDateTime.CellAttributes)>
<span id="el_WaitingForAgencyReview_CreatedDateTime">
<span @Html.Raw(waitingForAgencyReviewView.CreatedDateTime.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.CreatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.CreatedDateTime.Visible (end) *@
@if (waitingForAgencyReviewView.LastUpdatedBy.Visible) { // waitingForAgencyReviewView.LastUpdatedBy.Visible (begin)
    <tr id="r_LastUpdatedBy" @Html.Raw(waitingForAgencyReviewView.LastUpdatedBy.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_LastUpdatedBy">@Html.Raw(waitingForAgencyReviewView.LastUpdatedBy.Caption)</span></td>
        <td data-name="LastUpdatedBy" @Html.Raw(waitingForAgencyReviewView.LastUpdatedBy.CellAttributes)>
<span id="el_WaitingForAgencyReview_LastUpdatedBy">
<span @Html.Raw(waitingForAgencyReviewView.LastUpdatedBy.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.LastUpdatedBy.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.LastUpdatedBy.Visible (end) *@
@if (waitingForAgencyReviewView.LastUpdatedDateTime.Visible) { // waitingForAgencyReviewView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(waitingForAgencyReviewView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_LastUpdatedDateTime">@Html.Raw(waitingForAgencyReviewView.LastUpdatedDateTime.Caption)</span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(waitingForAgencyReviewView.LastUpdatedDateTime.CellAttributes)>
<span id="el_WaitingForAgencyReview_LastUpdatedDateTime">
<span @Html.Raw(waitingForAgencyReviewView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.LastUpdatedDateTime.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.LastUpdatedDateTime.Visible (end) *@
@if (waitingForAgencyReviewView.MTManningAgentID.Visible) { // waitingForAgencyReviewView.MTManningAgentID.Visible (begin)
    <tr id="r_MTManningAgentID" @Html.Raw(waitingForAgencyReviewView.MTManningAgentID.RowAttributes)>
        <td class="@(waitingForAgencyReviewView.TableLeftColumnClass)"><span id="elh_WaitingForAgencyReview_MTManningAgentID">@Html.Raw(waitingForAgencyReviewView.MTManningAgentID.Caption)</span></td>
        <td data-name="MTManningAgentID" @Html.Raw(waitingForAgencyReviewView.MTManningAgentID.CellAttributes)>
<span id="el_WaitingForAgencyReview_MTManningAgentID">
<span @Html.Raw(waitingForAgencyReviewView.MTManningAgentID.ViewAttributes)>
@Html.Raw(waitingForAgencyReviewView.MTManningAgentID.GetViewValue())</span>
</span></td>
    </tr>
} @* waitingForAgencyReviewView.MTManningAgentID.Visible (end) *@
</table>
@{ waitingForAgencyReviewView.CloseRecordset(); }
</form>
</main>
@waitingForAgencyReviewView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!waitingForAgencyReviewView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
