@{
    // View
    View = this;

    // Check action result
    if (crewChecklistForAdminEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewChecklistForAdminEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@crewChecklistForAdminEdit.ShowPageHeader()
@crewChecklistForAdminEdit.ShowMessages()
<main class="edit">
<form name="fCrewChecklistForAdminedit" id="fCrewChecklistForAdminedit" class="@(crewChecklistForAdminEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(crewChecklistForAdminEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewChecklistForAdmin: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fCrewChecklistForAdminedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewChecklistForAdminedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["MTCrewID", [fields.MTCrewID.visible && fields.MTCrewID.required ? ew.Validators.required(fields.MTCrewID.caption) : null], fields.MTCrewID.isInvalid],
            ["Activity10", [fields.Activity10.visible && fields.Activity10.required ? ew.Validators.required(fields.Activity10.caption) : null], fields.Activity10.isInvalid],
            ["RemarkActivity10", [fields.RemarkActivity10.visible && fields.RemarkActivity10.required ? ew.Validators.required(fields.RemarkActivity10.caption) : null], fields.RemarkActivity10.isInvalid],
            ["Activity11", [fields.Activity11.visible && fields.Activity11.required ? ew.Validators.required(fields.Activity11.caption) : null], fields.Activity11.isInvalid],
            ["RemarkActivity11", [fields.RemarkActivity11.visible && fields.RemarkActivity11.required ? ew.Validators.required(fields.RemarkActivity11.caption) : null], fields.RemarkActivity11.isInvalid],
            ["Activity12", [fields.Activity12.visible && fields.Activity12.required ? ew.Validators.required(fields.Activity12.caption) : null], fields.Activity12.isInvalid],
            ["RemarkActivity12", [fields.RemarkActivity12.visible && fields.RemarkActivity12.required ? ew.Validators.required(fields.RemarkActivity12.caption) : null], fields.RemarkActivity12.isInvalid],
            ["Activity13", [fields.Activity13.visible && fields.Activity13.required ? ew.Validators.required(fields.Activity13.caption) : null], fields.Activity13.isInvalid],
            ["RemarkActivity13", [fields.RemarkActivity13.visible && fields.RemarkActivity13.required ? ew.Validators.required(fields.RemarkActivity13.caption) : null], fields.RemarkActivity13.isInvalid],
            ["Activity14", [fields.Activity14.visible && fields.Activity14.required ? ew.Validators.required(fields.Activity14.caption) : null], fields.Activity14.isInvalid],
            ["RemarkActivity14", [fields.RemarkActivity14.visible && fields.RemarkActivity14.required ? ew.Validators.required(fields.RemarkActivity14.caption) : null], fields.RemarkActivity14.isInvalid],
            ["Activity20", [fields.Activity20.visible && fields.Activity20.required ? ew.Validators.required(fields.Activity20.caption) : null], fields.Activity20.isInvalid],
            ["RemarkActivity20", [fields.RemarkActivity20.visible && fields.RemarkActivity20.required ? ew.Validators.required(fields.RemarkActivity20.caption) : null], fields.RemarkActivity20.isInvalid],
            ["Activity30", [fields.Activity30.visible && fields.Activity30.required ? ew.Validators.required(fields.Activity30.caption) : null], fields.Activity30.isInvalid],
            ["RemarkActivity30", [fields.RemarkActivity30.visible && fields.RemarkActivity30.required ? ew.Validators.required(fields.RemarkActivity30.caption) : null], fields.RemarkActivity30.isInvalid],
            ["Activity40", [fields.Activity40.visible && fields.Activity40.required ? ew.Validators.required(fields.Activity40.caption) : null], fields.Activity40.isInvalid],
            ["RemarkActivity40", [fields.RemarkActivity40.visible && fields.RemarkActivity40.required ? ew.Validators.required(fields.RemarkActivity40.caption) : null], fields.RemarkActivity40.isInvalid],
            ["Activity50", [fields.Activity50.visible && fields.Activity50.required ? ew.Validators.required(fields.Activity50.caption) : null], fields.Activity50.isInvalid],
            ["RemarkActivity50", [fields.RemarkActivity50.visible && fields.RemarkActivity50.required ? ew.Validators.required(fields.RemarkActivity50.caption) : null], fields.RemarkActivity50.isInvalid],
            ["Activity60", [fields.Activity60.visible && fields.Activity60.required ? ew.Validators.required(fields.Activity60.caption) : null], fields.Activity60.isInvalid],
            ["RemarkActivity60", [fields.RemarkActivity60.visible && fields.RemarkActivity60.required ? ew.Validators.required(fields.RemarkActivity60.caption) : null], fields.RemarkActivity60.isInvalid],
            ["Activity70", [fields.Activity70.visible && fields.Activity70.required ? ew.Validators.required(fields.Activity70.caption) : null], fields.Activity70.isInvalid],
            ["RemarkActivity70", [fields.RemarkActivity70.visible && fields.RemarkActivity70.required ? ew.Validators.required(fields.RemarkActivity70.caption) : null], fields.RemarkActivity70.isInvalid],
            ["InterviewerComment", [fields.InterviewerComment.visible && fields.InterviewerComment.required ? ew.Validators.required(fields.InterviewerComment.caption) : null], fields.InterviewerComment.isInvalid],
            ["JobKnowledge", [fields.JobKnowledge.visible && fields.JobKnowledge.required ? ew.Validators.required(fields.JobKnowledge.caption) : null], fields.JobKnowledge.isInvalid],
            ["SafetyAwareness", [fields.SafetyAwareness.visible && fields.SafetyAwareness.required ? ew.Validators.required(fields.SafetyAwareness.caption) : null], fields.SafetyAwareness.isInvalid],
            ["Personality", [fields.Personality.visible && fields.Personality.required ? ew.Validators.required(fields.Personality.caption) : null], fields.Personality.isInvalid],
            ["EnglishProficiency", [fields.EnglishProficiency.visible && fields.EnglishProficiency.required ? ew.Validators.required(fields.EnglishProficiency.caption) : null], fields.EnglishProficiency.isInvalid],
            ["PrincipalComment", [fields.PrincipalComment.visible && fields.PrincipalComment.required ? ew.Validators.required(fields.PrincipalComment.caption) : null], fields.PrincipalComment.isInvalid],
            ["FinalInterviewComment", [fields.FinalInterviewComment.visible && fields.FinalInterviewComment.required ? ew.Validators.required(fields.FinalInterviewComment.caption) : null], fields.FinalInterviewComment.isInvalid],
            ["InterviewedByPersonOneName", [fields.InterviewedByPersonOneName.visible && fields.InterviewedByPersonOneName.required ? ew.Validators.required(fields.InterviewedByPersonOneName.caption) : null], fields.InterviewedByPersonOneName.isInvalid],
            ["InterviewedByPersonOneRank", [fields.InterviewedByPersonOneRank.visible && fields.InterviewedByPersonOneRank.required ? ew.Validators.required(fields.InterviewedByPersonOneRank.caption) : null], fields.InterviewedByPersonOneRank.isInvalid],
            ["AssistantManagerPdeReviewedDate", [fields.AssistantManagerPdeReviewedDate.visible && fields.AssistantManagerPdeReviewedDate.required ? ew.Validators.required(fields.AssistantManagerPdeReviewedDate.caption) : null], fields.AssistantManagerPdeReviewedDate.isInvalid],
            ["InterviewedByPersonTwoName", [fields.InterviewedByPersonTwoName.visible && fields.InterviewedByPersonTwoName.required ? ew.Validators.required(fields.InterviewedByPersonTwoName.caption) : null], fields.InterviewedByPersonTwoName.isInvalid],
            ["InterviewedByPersonTwoRank", [fields.InterviewedByPersonTwoRank.visible && fields.InterviewedByPersonTwoRank.required ? ew.Validators.required(fields.InterviewedByPersonTwoRank.caption) : null], fields.InterviewedByPersonTwoRank.isInvalid],
            ["InterviewedByPersonThreeName", [fields.InterviewedByPersonThreeName.visible && fields.InterviewedByPersonThreeName.required ? ew.Validators.required(fields.InterviewedByPersonThreeName.caption) : null], fields.InterviewedByPersonThreeName.isInvalid],
            ["InterviewedByPersonThreeRank", [fields.InterviewedByPersonThreeRank.visible && fields.InterviewedByPersonThreeRank.required ? ew.Validators.required(fields.InterviewedByPersonThreeRank.caption) : null], fields.InterviewedByPersonThreeRank.isInvalid],
            ["CrewingManagerApprovalDate", [fields.CrewingManagerApprovalDate.visible && fields.CrewingManagerApprovalDate.required ? ew.Validators.required(fields.CrewingManagerApprovalDate.caption) : null], fields.CrewingManagerApprovalDate.isInvalid],
            ["Activity14Attachment", [fields.Activity14Attachment.visible && fields.Activity14Attachment.required ? ew.Validators.fileRequired(fields.Activity14Attachment.caption) : null], fields.Activity14Attachment.isInvalid],
            ["Activity20Attachment", [fields.Activity20Attachment.visible && fields.Activity20Attachment.required ? ew.Validators.fileRequired(fields.Activity20Attachment.caption) : null], fields.Activity20Attachment.isInvalid],
            ["Activity30Attachment", [fields.Activity30Attachment.visible && fields.Activity30Attachment.required ? ew.Validators.fileRequired(fields.Activity30Attachment.caption) : null], fields.Activity30Attachment.isInvalid],
            ["Activity50Attachment", [fields.Activity50Attachment.visible && fields.Activity50Attachment.required ? ew.Validators.fileRequired(fields.Activity50Attachment.caption) : null], fields.Activity50Attachment.isInvalid],
            ["Activity70Attachment", [fields.Activity70Attachment.visible && fields.Activity70Attachment.required ? ew.Validators.fileRequired(fields.Activity70Attachment.caption) : null], fields.Activity70Attachment.isInvalid],
            ["FinalInterviewAttachment", [fields.FinalInterviewAttachment.visible && fields.FinalInterviewAttachment.required ? ew.Validators.fileRequired(fields.FinalInterviewAttachment.caption) : null], fields.FinalInterviewAttachment.isInvalid],
            ["PrincipalCommentAttachment", [fields.PrincipalCommentAttachment.visible && fields.PrincipalCommentAttachment.required ? ew.Validators.fileRequired(fields.PrincipalCommentAttachment.caption) : null], fields.PrincipalCommentAttachment.isInvalid],
            ["FormPrintoutAttachment", [fields.FormPrintoutAttachment.visible && fields.FormPrintoutAttachment.required ? ew.Validators.fileRequired(fields.FormPrintoutAttachment.caption) : null], fields.FormPrintoutAttachment.isInvalid],
            ["AssistantManagerPdeReviewed", [fields.AssistantManagerPdeReviewed.visible && fields.AssistantManagerPdeReviewed.required ? ew.Validators.required(fields.AssistantManagerPdeReviewed.caption) : null], fields.AssistantManagerPdeReviewed.isInvalid],
            ["CrewingManagerApproval", [fields.CrewingManagerApproval.visible && fields.CrewingManagerApproval.required ? ew.Validators.required(fields.CrewingManagerApproval.caption) : null], fields.CrewingManagerApproval.isInvalid],
            ["InterviewDate", [fields.InterviewDate.visible && fields.InterviewDate.required ? ew.Validators.required(fields.InterviewDate.caption) : null, ew.Validators.datetime(fields.InterviewDate.clientFormatPattern)], fields.InterviewDate.isInvalid],
            ["InterviewAttachment", [fields.InterviewAttachment.visible && fields.InterviewAttachment.required ? ew.Validators.fileRequired(fields.InterviewAttachment.caption) : null], fields.InterviewAttachment.isInvalid],
            ["ApprovedByUserID1", [fields.ApprovedByUserID1.visible && fields.ApprovedByUserID1.required ? ew.Validators.required(fields.ApprovedByUserID1.caption) : null], fields.ApprovedByUserID1.isInvalid],
            ["ApprovedByUserID2", [fields.ApprovedByUserID2.visible && fields.ApprovedByUserID2.required ? ew.Validators.required(fields.ApprovedByUserID2.caption) : null], fields.ApprovedByUserID2.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Activity10": @Html.Raw(crewChecklistForAdminEdit.Activity10.ToClientList(crewChecklistForAdminEdit)),
            "Activity11": @Html.Raw(crewChecklistForAdminEdit.Activity11.ToClientList(crewChecklistForAdminEdit)),
            "Activity12": @Html.Raw(crewChecklistForAdminEdit.Activity12.ToClientList(crewChecklistForAdminEdit)),
            "Activity13": @Html.Raw(crewChecklistForAdminEdit.Activity13.ToClientList(crewChecklistForAdminEdit)),
            "Activity14": @Html.Raw(crewChecklistForAdminEdit.Activity14.ToClientList(crewChecklistForAdminEdit)),
            "Activity20": @Html.Raw(crewChecklistForAdminEdit.Activity20.ToClientList(crewChecklistForAdminEdit)),
            "Activity30": @Html.Raw(crewChecklistForAdminEdit.Activity30.ToClientList(crewChecklistForAdminEdit)),
            "Activity40": @Html.Raw(crewChecklistForAdminEdit.Activity40.ToClientList(crewChecklistForAdminEdit)),
            "Activity50": @Html.Raw(crewChecklistForAdminEdit.Activity50.ToClientList(crewChecklistForAdminEdit)),
            "Activity60": @Html.Raw(crewChecklistForAdminEdit.Activity60.ToClientList(crewChecklistForAdminEdit)),
            "Activity70": @Html.Raw(crewChecklistForAdminEdit.Activity70.ToClientList(crewChecklistForAdminEdit)),
            "JobKnowledge": @Html.Raw(crewChecklistForAdminEdit.JobKnowledge.ToClientList(crewChecklistForAdminEdit)),
            "SafetyAwareness": @Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.ToClientList(crewChecklistForAdminEdit)),
            "Personality": @Html.Raw(crewChecklistForAdminEdit.Personality.ToClientList(crewChecklistForAdminEdit)),
            "EnglishProficiency": @Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.ToClientList(crewChecklistForAdminEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(crewChecklistForAdminEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(crewChecklistForAdminEdit.OldKeyName)" value="@Html.Raw(crewChecklistForAdminEdit.OldKey)">
<div class="ew-edit-div d-none"><!-- page* -->
@if (crewChecklistForAdminEdit.MTCrewID.Visible) { // crewChecklistForAdminEdit.MTCrewID.Visible (begin)
    <div id="r_MTCrewID" @Html.Raw(crewChecklistForAdminEdit.MTCrewID.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_MTCrewID" for="x_MTCrewID" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_MTCrewID">@Html.Raw(crewChecklistForAdminEdit.MTCrewID.Caption)@Html.Raw(crewChecklistForAdminEdit.MTCrewID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.MTCrewID.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_MTCrewID"><span id="el_CrewChecklistForAdmin_MTCrewID">
<input type="@(crewChecklistForAdminEdit.MTCrewID.InputTextType)" name="x_MTCrewID" id="x_MTCrewID" data-table="CrewChecklistForAdmin" data-field="x_MTCrewID" value="@Html.Raw(crewChecklistForAdminEdit.MTCrewID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.MTCrewID.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.MTCrewID.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.MTCrewID.EditAttributes) aria-describedby="x_MTCrewID_help">
@Html.Raw(crewChecklistForAdminEdit.MTCrewID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.MTCrewID.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.MTCrewID.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity10.Visible) { // crewChecklistForAdminEdit.Activity10.Visible (begin)
    <div id="r_Activity10" @Html.Raw(crewChecklistForAdminEdit.Activity10.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity10" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity10">@Html.Raw(crewChecklistForAdminEdit.Activity10.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity10.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity10.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity10"><span id="el_CrewChecklistForAdmin_Activity10">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity10.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity10" data-boolean name="x_Activity10" id="x_Activity10" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity10.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity10.EditAttributes) aria-describedby="x_Activity10_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity10.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity10.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity10.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity10.Visible) { // crewChecklistForAdminEdit.RemarkActivity10.Visible (begin)
    <div id="r_RemarkActivity10" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity10" for="x_RemarkActivity10" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity10">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity10"><span id="el_CrewChecklistForAdmin_RemarkActivity10">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity10" name="x_RemarkActivity10" id="x_RemarkActivity10" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity10.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.EditAttributes) aria-describedby="x_RemarkActivity10_help">@(crewChecklistForAdminEdit.RemarkActivity10.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity10.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity11.Visible) { // crewChecklistForAdminEdit.Activity11.Visible (begin)
    <div id="r_Activity11" @Html.Raw(crewChecklistForAdminEdit.Activity11.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity11" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity11">@Html.Raw(crewChecklistForAdminEdit.Activity11.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity11.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity11.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity11"><span id="el_CrewChecklistForAdmin_Activity11">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity11.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity11" data-boolean name="x_Activity11" id="x_Activity11" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity11.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity11.EditAttributes) aria-describedby="x_Activity11_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity11.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity11.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity11.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity11.Visible) { // crewChecklistForAdminEdit.RemarkActivity11.Visible (begin)
    <div id="r_RemarkActivity11" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity11" for="x_RemarkActivity11" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity11">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity11"><span id="el_CrewChecklistForAdmin_RemarkActivity11">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity11" name="x_RemarkActivity11" id="x_RemarkActivity11" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity11.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.EditAttributes) aria-describedby="x_RemarkActivity11_help">@(crewChecklistForAdminEdit.RemarkActivity11.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity11.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity12.Visible) { // crewChecklistForAdminEdit.Activity12.Visible (begin)
    <div id="r_Activity12" @Html.Raw(crewChecklistForAdminEdit.Activity12.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity12" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity12">@Html.Raw(crewChecklistForAdminEdit.Activity12.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity12.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity12.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity12"><span id="el_CrewChecklistForAdmin_Activity12">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity12.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity12" data-boolean name="x_Activity12" id="x_Activity12" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity12.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity12.EditAttributes) aria-describedby="x_Activity12_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity12.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity12.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity12.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity12.Visible) { // crewChecklistForAdminEdit.RemarkActivity12.Visible (begin)
    <div id="r_RemarkActivity12" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity12" for="x_RemarkActivity12" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity12">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity12"><span id="el_CrewChecklistForAdmin_RemarkActivity12">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity12" name="x_RemarkActivity12" id="x_RemarkActivity12" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity12.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.EditAttributes) aria-describedby="x_RemarkActivity12_help">@(crewChecklistForAdminEdit.RemarkActivity12.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity12.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity13.Visible) { // crewChecklistForAdminEdit.Activity13.Visible (begin)
    <div id="r_Activity13" @Html.Raw(crewChecklistForAdminEdit.Activity13.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity13" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity13">@Html.Raw(crewChecklistForAdminEdit.Activity13.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity13.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity13.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity13"><span id="el_CrewChecklistForAdmin_Activity13">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity13.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity13" data-boolean name="x_Activity13" id="x_Activity13" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity13.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity13.EditAttributes) aria-describedby="x_Activity13_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity13.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity13.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity13.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity13.Visible) { // crewChecklistForAdminEdit.RemarkActivity13.Visible (begin)
    <div id="r_RemarkActivity13" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity13" for="x_RemarkActivity13" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity13">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity13"><span id="el_CrewChecklistForAdmin_RemarkActivity13">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity13" name="x_RemarkActivity13" id="x_RemarkActivity13" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity13.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.EditAttributes) aria-describedby="x_RemarkActivity13_help">@(crewChecklistForAdminEdit.RemarkActivity13.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity13.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity14.Visible) { // crewChecklistForAdminEdit.Activity14.Visible (begin)
    <div id="r_Activity14" @Html.Raw(crewChecklistForAdminEdit.Activity14.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity14" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity14">@Html.Raw(crewChecklistForAdminEdit.Activity14.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity14.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity14.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity14"><span id="el_CrewChecklistForAdmin_Activity14">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity14.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity14" data-boolean name="x_Activity14" id="x_Activity14" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity14.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity14.EditAttributes) aria-describedby="x_Activity14_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity14.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity14.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity14.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity14.Visible) { // crewChecklistForAdminEdit.RemarkActivity14.Visible (begin)
    <div id="r_RemarkActivity14" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity14" for="x_RemarkActivity14" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity14">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity14"><span id="el_CrewChecklistForAdmin_RemarkActivity14">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity14" name="x_RemarkActivity14" id="x_RemarkActivity14" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity14.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.EditAttributes) aria-describedby="x_RemarkActivity14_help">@(crewChecklistForAdminEdit.RemarkActivity14.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity14.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity20.Visible) { // crewChecklistForAdminEdit.Activity20.Visible (begin)
    <div id="r_Activity20" @Html.Raw(crewChecklistForAdminEdit.Activity20.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity20" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity20">@Html.Raw(crewChecklistForAdminEdit.Activity20.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity20.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity20.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity20"><span id="el_CrewChecklistForAdmin_Activity20">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity20.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity20" data-boolean name="x_Activity20" id="x_Activity20" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity20.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity20.EditAttributes) aria-describedby="x_Activity20_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity20.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity20.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity20.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity20.Visible) { // crewChecklistForAdminEdit.RemarkActivity20.Visible (begin)
    <div id="r_RemarkActivity20" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity20" for="x_RemarkActivity20" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity20">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity20"><span id="el_CrewChecklistForAdmin_RemarkActivity20">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity20" name="x_RemarkActivity20" id="x_RemarkActivity20" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity20.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.EditAttributes) aria-describedby="x_RemarkActivity20_help">@(crewChecklistForAdminEdit.RemarkActivity20.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity20.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity30.Visible) { // crewChecklistForAdminEdit.Activity30.Visible (begin)
    <div id="r_Activity30" @Html.Raw(crewChecklistForAdminEdit.Activity30.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity30" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity30">@Html.Raw(crewChecklistForAdminEdit.Activity30.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity30.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity30.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity30"><span id="el_CrewChecklistForAdmin_Activity30">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity30.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity30" data-boolean name="x_Activity30" id="x_Activity30" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity30.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity30.EditAttributes) aria-describedby="x_Activity30_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity30.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity30.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity30.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity30.Visible) { // crewChecklistForAdminEdit.RemarkActivity30.Visible (begin)
    <div id="r_RemarkActivity30" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity30" for="x_RemarkActivity30" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity30">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity30"><span id="el_CrewChecklistForAdmin_RemarkActivity30">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity30" name="x_RemarkActivity30" id="x_RemarkActivity30" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity30.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.EditAttributes) aria-describedby="x_RemarkActivity30_help">@(crewChecklistForAdminEdit.RemarkActivity30.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity30.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity40.Visible) { // crewChecklistForAdminEdit.Activity40.Visible (begin)
    <div id="r_Activity40" @Html.Raw(crewChecklistForAdminEdit.Activity40.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity40" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity40">@Html.Raw(crewChecklistForAdminEdit.Activity40.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity40.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity40.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity40"><span id="el_CrewChecklistForAdmin_Activity40">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity40.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity40" data-boolean name="x_Activity40" id="x_Activity40" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity40.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity40.EditAttributes) aria-describedby="x_Activity40_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity40.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity40.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity40.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity40.Visible) { // crewChecklistForAdminEdit.RemarkActivity40.Visible (begin)
    <div id="r_RemarkActivity40" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity40" for="x_RemarkActivity40" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity40">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity40"><span id="el_CrewChecklistForAdmin_RemarkActivity40">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity40" name="x_RemarkActivity40" id="x_RemarkActivity40" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity40.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.EditAttributes) aria-describedby="x_RemarkActivity40_help">@(crewChecklistForAdminEdit.RemarkActivity40.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity40.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity50.Visible) { // crewChecklistForAdminEdit.Activity50.Visible (begin)
    <div id="r_Activity50" @Html.Raw(crewChecklistForAdminEdit.Activity50.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity50" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity50">@Html.Raw(crewChecklistForAdminEdit.Activity50.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity50.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity50.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity50"><span id="el_CrewChecklistForAdmin_Activity50">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity50.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity50" data-boolean name="x_Activity50" id="x_Activity50" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity50.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity50.EditAttributes) aria-describedby="x_Activity50_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity50.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity50.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity50.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity50.Visible) { // crewChecklistForAdminEdit.RemarkActivity50.Visible (begin)
    <div id="r_RemarkActivity50" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity50" for="x_RemarkActivity50" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity50">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity50"><span id="el_CrewChecklistForAdmin_RemarkActivity50">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity50" name="x_RemarkActivity50" id="x_RemarkActivity50" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity50.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.EditAttributes) aria-describedby="x_RemarkActivity50_help">@(crewChecklistForAdminEdit.RemarkActivity50.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity50.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity60.Visible) { // crewChecklistForAdminEdit.Activity60.Visible (begin)
    <div id="r_Activity60" @Html.Raw(crewChecklistForAdminEdit.Activity60.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity60" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity60">@Html.Raw(crewChecklistForAdminEdit.Activity60.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity60.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity60.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity60"><span id="el_CrewChecklistForAdmin_Activity60">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity60.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity60" data-boolean name="x_Activity60" id="x_Activity60" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity60.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity60.EditAttributes) aria-describedby="x_Activity60_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity60.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity60.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity60.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity60.Visible) { // crewChecklistForAdminEdit.RemarkActivity60.Visible (begin)
    <div id="r_RemarkActivity60" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity60" for="x_RemarkActivity60" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity60">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity60"><span id="el_CrewChecklistForAdmin_RemarkActivity60">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity60" name="x_RemarkActivity60" id="x_RemarkActivity60" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity60.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.EditAttributes) aria-describedby="x_RemarkActivity60_help">@(crewChecklistForAdminEdit.RemarkActivity60.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity60.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity70.Visible) { // crewChecklistForAdminEdit.Activity70.Visible (begin)
    <div id="r_Activity70" @Html.Raw(crewChecklistForAdminEdit.Activity70.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity70" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity70">@Html.Raw(crewChecklistForAdminEdit.Activity70.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity70.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity70.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity70"><span id="el_CrewChecklistForAdmin_Activity70">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(crewChecklistForAdminEdit.Activity70.IsInvalidClass)" data-table="CrewChecklistForAdmin" data-field="x_Activity70" data-boolean name="x_Activity70" id="x_Activity70" value="1" checked="@ConvertToBool(crewChecklistForAdminEdit.Activity70.CurrentValue)" @Html.Raw(crewChecklistForAdminEdit.Activity70.EditAttributes) aria-describedby="x_Activity70_help">
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity70.GetErrorMessage())</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity70.GetCustomMessage)
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity70.Visible (end) *@
@if (crewChecklistForAdminEdit.RemarkActivity70.Visible) { // crewChecklistForAdminEdit.RemarkActivity70.Visible (begin)
    <div id="r_RemarkActivity70" @Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_RemarkActivity70" for="x_RemarkActivity70" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_RemarkActivity70">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.Caption)@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_RemarkActivity70"><span id="el_CrewChecklistForAdmin_RemarkActivity70">
<textarea data-table="CrewChecklistForAdmin" data-field="x_RemarkActivity70" name="x_RemarkActivity70" id="x_RemarkActivity70" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.RemarkActivity70.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.EditAttributes) aria-describedby="x_RemarkActivity70_help">@(crewChecklistForAdminEdit.RemarkActivity70.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.RemarkActivity70.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewerComment.Visible) { // crewChecklistForAdminEdit.InterviewerComment.Visible (begin)
    <div id="r_InterviewerComment" @Html.Raw(crewChecklistForAdminEdit.InterviewerComment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewerComment" for="x_InterviewerComment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewerComment">@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewerComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewerComment"><span id="el_CrewChecklistForAdmin_InterviewerComment">
<textarea data-table="CrewChecklistForAdmin" data-field="x_InterviewerComment" name="x_InterviewerComment" id="x_InterviewerComment" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewerComment.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.EditAttributes) aria-describedby="x_InterviewerComment_help">@(crewChecklistForAdminEdit.InterviewerComment.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewerComment.Visible (end) *@
@if (crewChecklistForAdminEdit.JobKnowledge.Visible) { // crewChecklistForAdminEdit.JobKnowledge.Visible (begin)
    <div id="r_JobKnowledge" @Html.Raw(crewChecklistForAdminEdit.JobKnowledge.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_JobKnowledge" for="x_JobKnowledge" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_JobKnowledge">@Html.Raw(crewChecklistForAdminEdit.JobKnowledge.Caption)@Html.Raw(crewChecklistForAdminEdit.JobKnowledge.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.JobKnowledge.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_JobKnowledge"><span id="el_CrewChecklistForAdmin_JobKnowledge">
    <select
        id="x_JobKnowledge"
        name="x_JobKnowledge"
        class="form-select ew-select@(crewChecklistForAdminEdit.JobKnowledge.IsInvalidClass)"
        data-select2-id="fCrewChecklistForAdminedit_x_JobKnowledge"
        data-table="CrewChecklistForAdmin"
        data-field="x_JobKnowledge"
        data-value-separator="@(crewChecklistForAdminEdit.JobKnowledge.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewChecklistForAdminEdit.JobKnowledge.PlaceHolder))"
        @Html.Raw(crewChecklistForAdminEdit.JobKnowledge.EditAttributes)>
        @(crewChecklistForAdminEdit.JobKnowledge.SelectOptionListHtml("x_JobKnowledge"))
    </select>
    @Html.Raw(crewChecklistForAdminEdit.JobKnowledge.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.JobKnowledge.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewChecklistForAdminedit", function() {
    var options = { name: "x_JobKnowledge", selectId: "fCrewChecklistForAdminedit_x_JobKnowledge" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewChecklistForAdminedit.lists.JobKnowledge?.lookupOptions.length) {
        options.data = { id: "x_JobKnowledge", form: "fCrewChecklistForAdminedit" };
    } else {
        options.ajax = { id: "x_JobKnowledge", form: "fCrewChecklistForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewChecklistForAdmin.fields.JobKnowledge.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.JobKnowledge.Visible (end) *@
@if (crewChecklistForAdminEdit.SafetyAwareness.Visible) { // crewChecklistForAdminEdit.SafetyAwareness.Visible (begin)
    <div id="r_SafetyAwareness" @Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_SafetyAwareness" for="x_SafetyAwareness" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_SafetyAwareness">@Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.Caption)@Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_SafetyAwareness"><span id="el_CrewChecklistForAdmin_SafetyAwareness">
    <select
        id="x_SafetyAwareness"
        name="x_SafetyAwareness"
        class="form-select ew-select@(crewChecklistForAdminEdit.SafetyAwareness.IsInvalidClass)"
        data-select2-id="fCrewChecklistForAdminedit_x_SafetyAwareness"
        data-table="CrewChecklistForAdmin"
        data-field="x_SafetyAwareness"
        data-value-separator="@(crewChecklistForAdminEdit.SafetyAwareness.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewChecklistForAdminEdit.SafetyAwareness.PlaceHolder))"
        @Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.EditAttributes)>
        @(crewChecklistForAdminEdit.SafetyAwareness.SelectOptionListHtml("x_SafetyAwareness"))
    </select>
    @Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewChecklistForAdminedit", function() {
    var options = { name: "x_SafetyAwareness", selectId: "fCrewChecklistForAdminedit_x_SafetyAwareness" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewChecklistForAdminedit.lists.SafetyAwareness?.lookupOptions.length) {
        options.data = { id: "x_SafetyAwareness", form: "fCrewChecklistForAdminedit" };
    } else {
        options.ajax = { id: "x_SafetyAwareness", form: "fCrewChecklistForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewChecklistForAdmin.fields.SafetyAwareness.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.SafetyAwareness.Visible (end) *@
@if (crewChecklistForAdminEdit.Personality.Visible) { // crewChecklistForAdminEdit.Personality.Visible (begin)
    <div id="r_Personality" @Html.Raw(crewChecklistForAdminEdit.Personality.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Personality" for="x_Personality" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Personality">@Html.Raw(crewChecklistForAdminEdit.Personality.Caption)@Html.Raw(crewChecklistForAdminEdit.Personality.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Personality.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Personality"><span id="el_CrewChecklistForAdmin_Personality">
    <select
        id="x_Personality"
        name="x_Personality"
        class="form-select ew-select@(crewChecklistForAdminEdit.Personality.IsInvalidClass)"
        data-select2-id="fCrewChecklistForAdminedit_x_Personality"
        data-table="CrewChecklistForAdmin"
        data-field="x_Personality"
        data-value-separator="@(crewChecklistForAdminEdit.Personality.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewChecklistForAdminEdit.Personality.PlaceHolder))"
        @Html.Raw(crewChecklistForAdminEdit.Personality.EditAttributes)>
        @(crewChecklistForAdminEdit.Personality.SelectOptionListHtml("x_Personality"))
    </select>
    @Html.Raw(crewChecklistForAdminEdit.Personality.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Personality.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewChecklistForAdminedit", function() {
    var options = { name: "x_Personality", selectId: "fCrewChecklistForAdminedit_x_Personality" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewChecklistForAdminedit.lists.Personality?.lookupOptions.length) {
        options.data = { id: "x_Personality", form: "fCrewChecklistForAdminedit" };
    } else {
        options.ajax = { id: "x_Personality", form: "fCrewChecklistForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewChecklistForAdmin.fields.Personality.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Personality.Visible (end) *@
@if (crewChecklistForAdminEdit.EnglishProficiency.Visible) { // crewChecklistForAdminEdit.EnglishProficiency.Visible (begin)
    <div id="r_EnglishProficiency" @Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_EnglishProficiency" for="x_EnglishProficiency" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_EnglishProficiency">@Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.Caption)@Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_EnglishProficiency"><span id="el_CrewChecklistForAdmin_EnglishProficiency">
    <select
        id="x_EnglishProficiency"
        name="x_EnglishProficiency"
        class="form-select ew-select@(crewChecklistForAdminEdit.EnglishProficiency.IsInvalidClass)"
        data-select2-id="fCrewChecklistForAdminedit_x_EnglishProficiency"
        data-table="CrewChecklistForAdmin"
        data-field="x_EnglishProficiency"
        data-value-separator="@(crewChecklistForAdminEdit.EnglishProficiency.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewChecklistForAdminEdit.EnglishProficiency.PlaceHolder))"
        @Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.EditAttributes)>
        @(crewChecklistForAdminEdit.EnglishProficiency.SelectOptionListHtml("x_EnglishProficiency"))
    </select>
    @Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewChecklistForAdminedit", function() {
    var options = { name: "x_EnglishProficiency", selectId: "fCrewChecklistForAdminedit_x_EnglishProficiency" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewChecklistForAdminedit.lists.EnglishProficiency?.lookupOptions.length) {
        options.data = { id: "x_EnglishProficiency", form: "fCrewChecklistForAdminedit" };
    } else {
        options.ajax = { id: "x_EnglishProficiency", form: "fCrewChecklistForAdminedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewChecklistForAdmin.fields.EnglishProficiency.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.EnglishProficiency.Visible (end) *@
@if (crewChecklistForAdminEdit.PrincipalComment.Visible) { // crewChecklistForAdminEdit.PrincipalComment.Visible (begin)
    <div id="r_PrincipalComment" @Html.Raw(crewChecklistForAdminEdit.PrincipalComment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_PrincipalComment" for="x_PrincipalComment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_PrincipalComment">@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.Caption)@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.PrincipalComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_PrincipalComment"><span id="el_CrewChecklistForAdmin_PrincipalComment">
<textarea data-table="CrewChecklistForAdmin" data-field="x_PrincipalComment" name="x_PrincipalComment" id="x_PrincipalComment" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.PrincipalComment.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.EditAttributes) aria-describedby="x_PrincipalComment_help">@(crewChecklistForAdminEdit.PrincipalComment.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.PrincipalComment.Visible (end) *@
@if (crewChecklistForAdminEdit.FinalInterviewComment.Visible) { // crewChecklistForAdminEdit.FinalInterviewComment.Visible (begin)
    <div id="r_FinalInterviewComment" @Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_FinalInterviewComment" for="x_FinalInterviewComment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_FinalInterviewComment">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.Caption)@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FinalInterviewComment"><span id="el_CrewChecklistForAdmin_FinalInterviewComment">
<textarea data-table="CrewChecklistForAdmin" data-field="x_FinalInterviewComment" name="x_FinalInterviewComment" id="x_FinalInterviewComment" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.FinalInterviewComment.PlaceHolder))"@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.EditAttributes) aria-describedby="x_FinalInterviewComment_help">@(crewChecklistForAdminEdit.FinalInterviewComment.EditValue)</textarea>
@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.FinalInterviewComment.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonOneName.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonOneName.Visible (begin)
    <div id="r_InterviewedByPersonOneName" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonOneName" for="x_InterviewedByPersonOneName" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonOneName">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonOneName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonOneName">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonOneName.InputTextType)" name="x_InterviewedByPersonOneName" id="x_InterviewedByPersonOneName" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonOneName" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonOneName.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonOneName.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.EditAttributes) aria-describedby="x_InterviewedByPersonOneName_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonOneName.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonOneRank.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonOneRank.Visible (begin)
    <div id="r_InterviewedByPersonOneRank" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonOneRank" for="x_InterviewedByPersonOneRank" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonOneRank">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonOneRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonOneRank">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonOneRank.InputTextType)" name="x_InterviewedByPersonOneRank" id="x_InterviewedByPersonOneRank" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonOneRank" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonOneRank.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonOneRank.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.EditAttributes) aria-describedby="x_InterviewedByPersonOneRank_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonOneRank.Visible (end) *@
@if (crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Visible) { // crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Visible (begin)
    <div id="r_AssistantManagerPdeReviewedDate" @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate" for="x_AssistantManagerPdeReviewedDate" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate">@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Caption)@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate"><span id="el_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate">
<span @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.EditValue)))"></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_AssistantManagerPdeReviewedDate" data-hidden="1" name="x_AssistantManagerPdeReviewedDate" id="x_AssistantManagerPdeReviewedDate" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonTwoName.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonTwoName.Visible (begin)
    <div id="r_InterviewedByPersonTwoName" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonTwoName" for="x_InterviewedByPersonTwoName" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonTwoName">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonTwoName">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonTwoName.InputTextType)" name="x_InterviewedByPersonTwoName" id="x_InterviewedByPersonTwoName" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonTwoName" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonTwoName.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonTwoName.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.EditAttributes) aria-describedby="x_InterviewedByPersonTwoName_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonTwoName.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Visible (begin)
    <div id="r_InterviewedByPersonTwoRank" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonTwoRank" for="x_InterviewedByPersonTwoRank" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonTwoRank">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonTwoRank">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.InputTextType)" name="x_InterviewedByPersonTwoRank" id="x_InterviewedByPersonTwoRank" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonTwoRank" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.EditAttributes) aria-describedby="x_InterviewedByPersonTwoRank_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonThreeName.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonThreeName.Visible (begin)
    <div id="r_InterviewedByPersonThreeName" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonThreeName" for="x_InterviewedByPersonThreeName" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonThreeName">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeName"><span id="el_CrewChecklistForAdmin_InterviewedByPersonThreeName">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonThreeName.InputTextType)" name="x_InterviewedByPersonThreeName" id="x_InterviewedByPersonThreeName" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonThreeName" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonThreeName.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonThreeName.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.EditAttributes) aria-describedby="x_InterviewedByPersonThreeName_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonThreeName.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Visible) { // crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Visible (begin)
    <div id="r_InterviewedByPersonThreeRank" @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewedByPersonThreeRank" for="x_InterviewedByPersonThreeRank" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewedByPersonThreeRank">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeRank"><span id="el_CrewChecklistForAdmin_InterviewedByPersonThreeRank">
<input type="@(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.InputTextType)" name="x_InterviewedByPersonThreeRank" id="x_InterviewedByPersonThreeRank" data-table="CrewChecklistForAdmin" data-field="x_InterviewedByPersonThreeRank" value="@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.EditAttributes) aria-describedby="x_InterviewedByPersonThreeRank_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Visible (end) *@
@if (crewChecklistForAdminEdit.CrewingManagerApprovalDate.Visible) { // crewChecklistForAdminEdit.CrewingManagerApprovalDate.Visible (begin)
    <div id="r_CrewingManagerApprovalDate" @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_CrewingManagerApprovalDate" for="x_CrewingManagerApprovalDate" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_CrewingManagerApprovalDate">@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.Caption)@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_CrewingManagerApprovalDate"><span id="el_CrewChecklistForAdmin_CrewingManagerApprovalDate">
<span @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(crewChecklistForAdminEdit.CrewingManagerApprovalDate.EditValue)))"></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_CrewingManagerApprovalDate" data-hidden="1" name="x_CrewingManagerApprovalDate" id="x_CrewingManagerApprovalDate" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.CrewingManagerApprovalDate.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.CrewingManagerApprovalDate.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity14Attachment.Visible) { // crewChecklistForAdminEdit.Activity14Attachment.Visible (begin)
    <div id="r_Activity14Attachment" @Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity14Attachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity14Attachment">@Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity14Attachment"><span id="el_CrewChecklistForAdmin_Activity14Attachment">
<div id="fd_x_Activity14Attachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_Activity14Attachment"
        name="x_Activity14Attachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.Activity14Attachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_Activity14Attachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.Activity14Attachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.Activity14Attachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.Activity14Attachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_Activity14Attachment_help"
        @Html.Raw((crewChecklistForAdminEdit.Activity14Attachment.ReadOnly || crewChecklistForAdminEdit.Activity14Attachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_Activity14Attachment" id= "fn_x_Activity14Attachment" value="@(crewChecklistForAdminEdit.Activity14Attachment.Upload.FileName)">
<input type="hidden" name="fa_x_Activity14Attachment" id= "fa_x_Activity14Attachment" value="@(Post("fa_x_Activity14Attachment") == "0" ? "0" : "1")">
<table id="ft_x_Activity14Attachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity14Attachment.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity20Attachment.Visible) { // crewChecklistForAdminEdit.Activity20Attachment.Visible (begin)
    <div id="r_Activity20Attachment" @Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity20Attachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity20Attachment">@Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity20Attachment"><span id="el_CrewChecklistForAdmin_Activity20Attachment">
<div id="fd_x_Activity20Attachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_Activity20Attachment"
        name="x_Activity20Attachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.Activity20Attachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_Activity20Attachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.Activity20Attachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.Activity20Attachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.Activity20Attachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_Activity20Attachment_help"
        @Html.Raw((crewChecklistForAdminEdit.Activity20Attachment.ReadOnly || crewChecklistForAdminEdit.Activity20Attachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_Activity20Attachment" id= "fn_x_Activity20Attachment" value="@(crewChecklistForAdminEdit.Activity20Attachment.Upload.FileName)">
<input type="hidden" name="fa_x_Activity20Attachment" id= "fa_x_Activity20Attachment" value="@(Post("fa_x_Activity20Attachment") == "0" ? "0" : "1")">
<table id="ft_x_Activity20Attachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity20Attachment.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity30Attachment.Visible) { // crewChecklistForAdminEdit.Activity30Attachment.Visible (begin)
    <div id="r_Activity30Attachment" @Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity30Attachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity30Attachment">@Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity30Attachment"><span id="el_CrewChecklistForAdmin_Activity30Attachment">
<div id="fd_x_Activity30Attachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_Activity30Attachment"
        name="x_Activity30Attachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.Activity30Attachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_Activity30Attachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.Activity30Attachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.Activity30Attachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.Activity30Attachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_Activity30Attachment_help"
        @Html.Raw((crewChecklistForAdminEdit.Activity30Attachment.ReadOnly || crewChecklistForAdminEdit.Activity30Attachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_Activity30Attachment" id= "fn_x_Activity30Attachment" value="@(crewChecklistForAdminEdit.Activity30Attachment.Upload.FileName)">
<input type="hidden" name="fa_x_Activity30Attachment" id= "fa_x_Activity30Attachment" value="@(Post("fa_x_Activity30Attachment") == "0" ? "0" : "1")">
<table id="ft_x_Activity30Attachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity30Attachment.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity50Attachment.Visible) { // crewChecklistForAdminEdit.Activity50Attachment.Visible (begin)
    <div id="r_Activity50Attachment" @Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity50Attachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity50Attachment">@Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity50Attachment"><span id="el_CrewChecklistForAdmin_Activity50Attachment">
<div id="fd_x_Activity50Attachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_Activity50Attachment"
        name="x_Activity50Attachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.Activity50Attachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_Activity50Attachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.Activity50Attachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.Activity50Attachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.Activity50Attachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_Activity50Attachment_help"
        @Html.Raw((crewChecklistForAdminEdit.Activity50Attachment.ReadOnly || crewChecklistForAdminEdit.Activity50Attachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_Activity50Attachment" id= "fn_x_Activity50Attachment" value="@(crewChecklistForAdminEdit.Activity50Attachment.Upload.FileName)">
<input type="hidden" name="fa_x_Activity50Attachment" id= "fa_x_Activity50Attachment" value="@(Post("fa_x_Activity50Attachment") == "0" ? "0" : "1")">
<table id="ft_x_Activity50Attachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity50Attachment.Visible (end) *@
@if (crewChecklistForAdminEdit.Activity70Attachment.Visible) { // crewChecklistForAdminEdit.Activity70Attachment.Visible (begin)
    <div id="r_Activity70Attachment" @Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_Activity70Attachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_Activity70Attachment">@Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.Caption)@Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_Activity70Attachment"><span id="el_CrewChecklistForAdmin_Activity70Attachment">
<div id="fd_x_Activity70Attachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_Activity70Attachment"
        name="x_Activity70Attachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.Activity70Attachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_Activity70Attachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.Activity70Attachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.Activity70Attachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.Activity70Attachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_Activity70Attachment_help"
        @Html.Raw((crewChecklistForAdminEdit.Activity70Attachment.ReadOnly || crewChecklistForAdminEdit.Activity70Attachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_Activity70Attachment" id= "fn_x_Activity70Attachment" value="@(crewChecklistForAdminEdit.Activity70Attachment.Upload.FileName)">
<input type="hidden" name="fa_x_Activity70Attachment" id= "fa_x_Activity70Attachment" value="@(Post("fa_x_Activity70Attachment") == "0" ? "0" : "1")">
<table id="ft_x_Activity70Attachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.Activity70Attachment.Visible (end) *@
@if (crewChecklistForAdminEdit.FinalInterviewAttachment.Visible) { // crewChecklistForAdminEdit.FinalInterviewAttachment.Visible (begin)
    <div id="r_FinalInterviewAttachment" @Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_FinalInterviewAttachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_FinalInterviewAttachment">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.Caption)@Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FinalInterviewAttachment"><span id="el_CrewChecklistForAdmin_FinalInterviewAttachment">
<div id="fd_x_FinalInterviewAttachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_FinalInterviewAttachment"
        name="x_FinalInterviewAttachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.FinalInterviewAttachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_FinalInterviewAttachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.FinalInterviewAttachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.FinalInterviewAttachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.FinalInterviewAttachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_FinalInterviewAttachment_help"
        @Html.Raw((crewChecklistForAdminEdit.FinalInterviewAttachment.ReadOnly || crewChecklistForAdminEdit.FinalInterviewAttachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_FinalInterviewAttachment" id= "fn_x_FinalInterviewAttachment" value="@(crewChecklistForAdminEdit.FinalInterviewAttachment.Upload.FileName)">
<input type="hidden" name="fa_x_FinalInterviewAttachment" id= "fa_x_FinalInterviewAttachment" value="@(Post("fa_x_FinalInterviewAttachment") == "0" ? "0" : "1")">
<table id="ft_x_FinalInterviewAttachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.FinalInterviewAttachment.Visible (end) *@
@if (crewChecklistForAdminEdit.PrincipalCommentAttachment.Visible) { // crewChecklistForAdminEdit.PrincipalCommentAttachment.Visible (begin)
    <div id="r_PrincipalCommentAttachment" @Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_PrincipalCommentAttachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_PrincipalCommentAttachment">@Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.Caption)@Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_PrincipalCommentAttachment"><span id="el_CrewChecklistForAdmin_PrincipalCommentAttachment">
<div id="fd_x_PrincipalCommentAttachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_PrincipalCommentAttachment"
        name="x_PrincipalCommentAttachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.PrincipalCommentAttachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_PrincipalCommentAttachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.PrincipalCommentAttachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.PrincipalCommentAttachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.PrincipalCommentAttachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_PrincipalCommentAttachment_help"
        @Html.Raw((crewChecklistForAdminEdit.PrincipalCommentAttachment.ReadOnly || crewChecklistForAdminEdit.PrincipalCommentAttachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_PrincipalCommentAttachment" id= "fn_x_PrincipalCommentAttachment" value="@(crewChecklistForAdminEdit.PrincipalCommentAttachment.Upload.FileName)">
<input type="hidden" name="fa_x_PrincipalCommentAttachment" id= "fa_x_PrincipalCommentAttachment" value="@(Post("fa_x_PrincipalCommentAttachment") == "0" ? "0" : "1")">
<table id="ft_x_PrincipalCommentAttachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.PrincipalCommentAttachment.Visible (end) *@
@if (crewChecklistForAdminEdit.FormPrintoutAttachment.Visible) { // crewChecklistForAdminEdit.FormPrintoutAttachment.Visible (begin)
    <div id="r_FormPrintoutAttachment" @Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_FormPrintoutAttachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_FormPrintoutAttachment">@Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.Caption)@Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_FormPrintoutAttachment"><span id="el_CrewChecklistForAdmin_FormPrintoutAttachment">
<div id="fd_x_FormPrintoutAttachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_FormPrintoutAttachment"
        name="x_FormPrintoutAttachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.FormPrintoutAttachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_FormPrintoutAttachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.FormPrintoutAttachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.FormPrintoutAttachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.FormPrintoutAttachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_FormPrintoutAttachment_help"
        @Html.Raw((crewChecklistForAdminEdit.FormPrintoutAttachment.ReadOnly || crewChecklistForAdminEdit.FormPrintoutAttachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_FormPrintoutAttachment" id= "fn_x_FormPrintoutAttachment" value="@(crewChecklistForAdminEdit.FormPrintoutAttachment.Upload.FileName)">
<input type="hidden" name="fa_x_FormPrintoutAttachment" id= "fa_x_FormPrintoutAttachment" value="@(Post("fa_x_FormPrintoutAttachment") == "0" ? "0" : "1")">
<table id="ft_x_FormPrintoutAttachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.FormPrintoutAttachment.Visible (end) *@
@if (crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Visible) { // crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Visible (begin)
    <div id="r_AssistantManagerPdeReviewed" @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_AssistantManagerPdeReviewed" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_AssistantManagerPdeReviewed">@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Caption)@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewed"><span id="el_CrewChecklistForAdmin_AssistantManagerPdeReviewed">
<span @Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_AssistantManagerPdeReviewed_@(crewChecklistForAdminEdit.RowCount)" class="form-check-input" value="@(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.EditValue)" disabled checked="@(ConvertToBool(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.CurrentValue))">
    <label class="form-check-label" for="x_AssistantManagerPdeReviewed_@(crewChecklistForAdminEdit.RowCount)"></label>
</div></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_AssistantManagerPdeReviewed" data-hidden="1" name="x_AssistantManagerPdeReviewed" id="x_AssistantManagerPdeReviewed" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Visible (end) *@
@if (crewChecklistForAdminEdit.CrewingManagerApproval.Visible) { // crewChecklistForAdminEdit.CrewingManagerApproval.Visible (begin)
    <div id="r_CrewingManagerApproval" @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_CrewingManagerApproval" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_CrewingManagerApproval">@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.Caption)@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_CrewingManagerApproval"><span id="el_CrewChecklistForAdmin_CrewingManagerApproval">
<span @Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_CrewingManagerApproval_@(crewChecklistForAdminEdit.RowCount)" class="form-check-input" value="@(crewChecklistForAdminEdit.CrewingManagerApproval.EditValue)" disabled checked="@(ConvertToBool(crewChecklistForAdminEdit.CrewingManagerApproval.CurrentValue))">
    <label class="form-check-label" for="x_CrewingManagerApproval_@(crewChecklistForAdminEdit.RowCount)"></label>
</div></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_CrewingManagerApproval" data-hidden="1" name="x_CrewingManagerApproval" id="x_CrewingManagerApproval" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.CrewingManagerApproval.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.CrewingManagerApproval.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewDate.Visible) { // crewChecklistForAdminEdit.InterviewDate.Visible (begin)
    <div id="r_InterviewDate" @Html.Raw(crewChecklistForAdminEdit.InterviewDate.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewDate" for="x_InterviewDate" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewDate">@Html.Raw(crewChecklistForAdminEdit.InterviewDate.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewDate.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewDate"><span id="el_CrewChecklistForAdmin_InterviewDate">
<input type="@(crewChecklistForAdminEdit.InterviewDate.InputTextType)" name="x_InterviewDate" id="x_InterviewDate" data-table="CrewChecklistForAdmin" data-field="x_InterviewDate" value="@Html.Raw(crewChecklistForAdminEdit.InterviewDate.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.InterviewDate.PlaceHolder))" data-format-pattern="@(crewChecklistForAdminEdit.InterviewDate.FormatPattern)"@Html.Raw(crewChecklistForAdminEdit.InterviewDate.EditAttributes) aria-describedby="x_InterviewDate_help">
@Html.Raw(crewChecklistForAdminEdit.InterviewDate.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewDate.GetErrorMessage())</div>
@if (!crewChecklistForAdminEdit.InterviewDate.ReadOnly && !crewChecklistForAdminEdit.InterviewDate.Disabled && !crewChecklistForAdminEdit.InterviewDate.EditAttrs.Is("readonly") && !crewChecklistForAdminEdit.InterviewDate.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewChecklistForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewChecklistForAdminedit", "x_InterviewDate", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewDate.Visible (end) *@
@if (crewChecklistForAdminEdit.InterviewAttachment.Visible) { // crewChecklistForAdminEdit.InterviewAttachment.Visible (begin)
    <div id="r_InterviewAttachment" @Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_InterviewAttachment" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_InterviewAttachment">@Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.Caption)@Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_InterviewAttachment"><span id="el_CrewChecklistForAdmin_InterviewAttachment">
<div id="fd_x_InterviewAttachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_InterviewAttachment"
        name="x_InterviewAttachment"
        class="form-control ew-file-input"
        title="@(crewChecklistForAdminEdit.InterviewAttachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewChecklistForAdmin"
        data-field="x_InterviewAttachment"
        data-size="50"
        data-accept-file-types="@(crewChecklistForAdminEdit.InterviewAttachment.AcceptFileTypes)"
        data-max-file-size="@(crewChecklistForAdminEdit.InterviewAttachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewChecklistForAdminEdit.InterviewAttachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_InterviewAttachment_help"
        @Html.Raw((crewChecklistForAdminEdit.InterviewAttachment.ReadOnly || crewChecklistForAdminEdit.InterviewAttachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_InterviewAttachment" id= "fn_x_InterviewAttachment" value="@(crewChecklistForAdminEdit.InterviewAttachment.Upload.FileName)">
<input type="hidden" name="fa_x_InterviewAttachment" id= "fa_x_InterviewAttachment" value="@(Post("fa_x_InterviewAttachment") == "0" ? "0" : "1")">
<table id="ft_x_InterviewAttachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.InterviewAttachment.Visible (end) *@
@if (crewChecklistForAdminEdit.ApprovedByUserID1.Visible) { // crewChecklistForAdminEdit.ApprovedByUserID1.Visible (begin)
    <div id="r_ApprovedByUserID1" @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_ApprovedByUserID1" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_ApprovedByUserID1">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.Caption)@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_ApprovedByUserID1"><span id="el_CrewChecklistForAdmin_ApprovedByUserID1">
<span @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.DisplayValue(crewChecklistForAdminEdit.ApprovedByUserID1.EditValue))</span></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_ApprovedByUserID1" data-hidden="1" name="x_ApprovedByUserID1" id="x_ApprovedByUserID1" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.ApprovedByUserID1.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.ApprovedByUserID1.Visible (end) *@
@if (crewChecklistForAdminEdit.ApprovedByUserID2.Visible) { // crewChecklistForAdminEdit.ApprovedByUserID2.Visible (begin)
    <div id="r_ApprovedByUserID2" @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.RowAttributes)>
        <label id="elh_CrewChecklistForAdmin_ApprovedByUserID2" class="@(crewChecklistForAdminEdit.LeftColumnClass)"><template id="tpc_CrewChecklistForAdmin_ApprovedByUserID2">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.Caption)@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewChecklistForAdminEdit.RightColumnClass)"><div @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.CellAttributes)>
<template id="tpx_CrewChecklistForAdmin_ApprovedByUserID2"><span id="el_CrewChecklistForAdmin_ApprovedByUserID2">
<span @Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.DisplayValue(crewChecklistForAdminEdit.ApprovedByUserID2.EditValue))</span></span>
<input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_ApprovedByUserID2" data-hidden="1" name="x_ApprovedByUserID2" id="x_ApprovedByUserID2" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.ApprovedByUserID2.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewChecklistForAdminEdit.ApprovedByUserID2.Visible (end) *@
</div><!-- /page* -->
    <input type="hidden" data-table="CrewChecklistForAdmin" data-field="x_ID" data-hidden="1" name="x_ID" id="x_ID" value="@Html.Raw(HtmlEncode(crewChecklistForAdminEdit.ID.CurrentValue))">
<div id="tpd_CrewChecklistForAdminedit" class="ew-custom-template"></div>
<template id="tpm_CrewChecklistForAdminedit">
<div id="ct_crewChecklistForAdminEdit"><fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Crew Information" : "Informasi Kru")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_RequiredPhoto" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Pass Photo 3 x 4" : "Pas Foto 3 x 4")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_VisaPhoto" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Visa Photo" : "Foto Visa")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_IndividualCodeNumber" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Individual's Seafarer ID" : "ID Pelaut Individu")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_FullName" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Full Name (Same As ID Card)" : "Nama Lengkap (Sesuai KTP)")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_RankAppliedFor" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Rank Applied For" : "Rank Yang Akan Dipilih")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_WillAcceptLowRank" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Willing To Accept Lower Rank" : "Bersedia Menerima Rank Lebih Rendah")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_AvailableFrom" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Available From" : "Bersedia Bekerja Dari")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_crew_AvailableUntil" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Available Until" : "Bersedia Bekerja Sampai")
                </label>
                <div>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_crew_EmployeeStatus" class="mb-2 row">
                <label class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Employee Status" : "Status Karyawan")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Checklist Items" : "Daftar Ceklis")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity10" class="mb-2 row">
                <label for="x_Activity10" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity10.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity10"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity10" class="mb-2 row">
                <label for="x_RemarkActivity10" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity10.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity10"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity11" class="mb-2 row">
                <label for="x_Activity11" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity11.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity11"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity11" class="mb-2 row">
                <label for="x_RemarkActivity11" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity11.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity11"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity12" class="mb-2 row">
                <label for="x_Activity12" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity12.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity12"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity12" class="mb-2 row">
                <label for="x_RemarkActivity12" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity12.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity12"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity13" class="mb-2 row">
                <label for="x_Activity13" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity13.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity13"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity13" class="mb-2 row">
                <label for="x_RemarkActivity13" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity13.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity13"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity14" class="mb-2 row">
                <label for="x_Activity14" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity14.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity14"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity14" class="mb-2 row">
                <label for="x_RemarkActivity14" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity14.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity14"></slot></div>
            </div>
            <div id="r_Activity14Attachment" class="mb-2 row">
                <label for="x_Activity14Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity14Attachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity14Attachment"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity20" class="mb-2 row">
                <label for="x_Activity20" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity20.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity20"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity20" class="mb-2 row">
                <label for="x_RemarkActivity20" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity20.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity20"></slot></div>
            </div>
            <div id="r_Activity20Attachment" class="mb-2 row">
                <label for="x_Activity20Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity20Attachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity20Attachment"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity30" class="mb-2 row">
                <label for="x_Activity30" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity30.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity30"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity30" class="mb-2 row">
                <label for="x_RemarkActivity30" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity30.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity30"></slot></div>
            </div>
            <div id="r_Activity30Attachment" class="mb-2 row">
                <label for="x_Activity30Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity30Attachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity30Attachment"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity40" class="mb-2 row">
                <label for="x_Activity40" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity40.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity40"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity40" class="mb-2 row">
                <label for="x_RemarkActivity40" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity40.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity40"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity50" class="mb-2 row">
                <label for="x_Activity50" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity50.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity50"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity50" class="mb-2 row">
                <label for="x_RemarkActivity50" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity50.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity50"></slot></div>
            </div>
            <div id="r_Activity50Attachment" class="mb-2 row">
                <label for="x_Activity50Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity50Attachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity50Attachment"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity60" class="mb-2 row">
                <label for="x_Activity60" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity60.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity60"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity60" class="mb-2 row">
                <label for="x_RemarkActivity60" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity60.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity60"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Activity70" class="mb-2 row">
                <label for="x_Activity70" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity70.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity70"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_RemarkActivity70" class="mb-2 row">
                <label for="x_RemarkActivity70" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.RemarkActivity70.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_RemarkActivity70"></slot></div>
            </div>
            <div id="r_Activity70Attachment" class="mb-2 row">
                <label for="x_Activity70Attachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Activity70Attachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Activity70Attachment"></slot></div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Interview" : "Interview")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewerComment" class="mb-2 row">
                <label for="x_InterviewerComment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewerComment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewerComment"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewDate" class="mb-2 row">
                <label for="x_InterviewDate" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewDate.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewDate"></slot></div>
            </div>
            <div id="r_InterviewAttachment" class="mb-2 row">
                <label for="x_InterviewAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewAttachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewAttachment"></slot></div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 1" : "Wawancara 1")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonOneName" class="mb-2 row">
                <label for="x_InterviewedByPersonOneName" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneName.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonOneName"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonOneRank" class="mb-2 row">
                <label for="x_InterviewedByPersonOneRank" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonOneRank.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonOneRank"></slot></div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 2" : "Wawancara 2")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonTwoName" class="mb-2 row">
                <label for="x_InterviewedByPersonTwoName" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoName.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoName"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonTwoRank" class="mb-2 row">
                <label for="x_InterviewedByPersonTwoRank" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonTwoRank.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonTwoRank"></slot></div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Interview 3" : "Wawancara 3")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonThreeName" class="mb-2 row">
                <label for="x_InterviewedByPersonThreeName" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeName.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeName"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_InterviewedByPersonThreeRank" class="mb-2 row">
                <label for="x_InterviewedByPersonThreeRank" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.InterviewedByPersonThreeRank.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_InterviewedByPersonThreeRank"></slot></div>
            </div>
        </div>
    </div>
    <h6 class="fw-bold mt-3">
        @(CurrentLanguage == "en-US" ? "Final Interview" : "Interview Final")
    </h6>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_FinalInterviewComment" class="mb-2 row">
                <label for="x_FinalInterviewComment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewComment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FinalInterviewComment"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_FinalInterviewAttachment" class="mb-2 row">
                <label for="x_FinalInterviewAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.FinalInterviewAttachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FinalInterviewAttachment"></slot></div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Additional Remarks" : "Remark Tambahan")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_JobKnowledge" class="mb-2 row">
                        <label for="x_JobKnowledge" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.JobKnowledge.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_JobKnowledge"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_Personality" class="mb-2 row">
                        <label for="x_Personality" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.Personality.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_Personality"></slot></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-6">
                    <div id="r_SafetyAwareness" class="mb-2 row">
                        <label for="x_SafetyAwareness" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.SafetyAwareness.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_SafetyAwareness"></slot></div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="r_EnglishProficiency" class="mb-2 row">
                        <label for="x_EnglishProficiency" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.EnglishProficiency.Caption)</label>
                        <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_EnglishProficiency"></slot></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_PrincipalComment" class="mb-2 row">
                <label for="x_PrincipalComment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.PrincipalComment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_PrincipalComment"></slot></div>
            </div>
            <div id="r_PrincipalCommentAttachment" class="mb-2 row">
                <label for="x_PrincipalCommentAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.PrincipalCommentAttachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_PrincipalCommentAttachment"></slot></div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Approval" : "Persetujuan")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_AssistantManagerPdeReviewed" class="mb-2 row">
                <label for="x_AssistantManagerPdeReviewed" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewed.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewed"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_ApprovedByUserID1e" class="mb-2 row">
                <label for="x_ApprovedByUserID1" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID1.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_ApprovedByUserID1"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_AssistantManagerPdeReviewedDate" class="mb-2 row">
                <label for="x_AssistantManagerPdeReviewedDate" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.AssistantManagerPdeReviewedDate.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_AssistantManagerPdeReviewedDate"></slot></div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-4">
            <div id="r_CrewingManagerApproval" class="mb-2 row">
                <label for="x_CrewingManagerApproval" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApproval.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_CrewingManagerApproval"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_ApprovedByUserID2" class="mb-2 row">
                <label for="x_ApprovedByUserID2" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.ApprovedByUserID2.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_ApprovedByUserID2"></slot></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div id="r_CrewingManagerApprovalDate" class="mb-2 row">
                <label for="x_CrewingManagerApprovalDate" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.CrewingManagerApprovalDate.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_CrewingManagerApprovalDate"></slot></div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset class="mb-3" style="padding:10px 10px 0px 10px;border:1px solid black;border-radius:5px;">
    <h5 class="fw-bold mb-3">
        @(CurrentLanguage == "en-US" ? "Form Printout" : "Printout Form")
    </h5>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_FormPrintoutAttachment" class="mb-2 row">
                <label for="x_FormPrintoutAttachment" class="col-form-label">@Html.Raw(crewChecklistForAdminEdit.FormPrintoutAttachment.Caption)</label>
                <div><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_FormPrintoutAttachment"></slot></div>
            </div>
        </div>
        <div class="col-sm-6">
        </div>
    </div>
</fieldset>
<div id="r_MTCrewID" class="mb-2 row">
    <label for="x_MTCrewID" class="col-sm-2 col-form-label">@Html.Raw(crewChecklistForAdminEdit.MTCrewID.Caption)</label>
    <div class="col-sm-10"><slot class="ew-slot" name="tpx_CrewChecklistForAdmin_MTCrewID"></slot></div>
</div>
<div id="invite-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="invite-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="invite-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Invite Crew" : "Undang Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-invite-datetime" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_InviteDateTime" class="row">
                        <label for="x_InviteDateTime" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Checklist Invitation Date Time" : "Tanggal Dan Jam Undangan Ceklis")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_InviteDateTime">
                                    <div class="input-group" id="datetimepicker_InviteDateTime" data-target-input="nearest" data-td-target-toggle="nearest">
                                        <input
                                            type="text"
                                            name="x_InviteDateTime"
                                            id="x_InviteDateTime"
                                            value=""
                                            placeholder="@(CurrentLanguage == "en-US" ? "Checklist Invitation Date Time" : "Tanggal Dan Jam Undangan Ceklis")"
                                            data-format-pattern="dd MMM yyyy HH:mm:sszzz"
                                            class="form-control tempus-dominus-input"
                                            data-target="#datetimepicker_InviteDateTime"
                                        />
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_InviteNotes" class="row">
                        <label for="x_InviteNotes" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_InviteNotes">
                                    <textarea
                                        name="x_InviteNotes"
                                        id="x_InviteNotes"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder=@(CurrentLanguage == "en-US" ? "Notes" : "Catatan")
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-add-invite-datetime" type="button">
                    @(CurrentLanguage == "en-US" ? "Invite Crew" : "Undang Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-invite-datetime" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="reject-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="reject-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="reject-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reject-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_RejectedReason" class="row">
                        <label for="x_RejectedReason" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Rejected Reason" : "Alasan Ditolak")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_RejectedReason">
                                    <textarea
                                        name="x_RejectedReason"
                                        id="x_RejectedReason"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder="Rejected Reason"
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-reject" type="button">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-reject-form" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="mcu-modal-dialog" aria-hidden="true" aria-modal="true" class="modal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="mcu-modal-dialog-title" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="mcu-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Create MCU Schedule" : "Tambah Jadwal MCU")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-mcu-schedule" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_MCUScheduleDateTime" class="row">
                        <label for="x_MCUScheduleDateTime" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "MCU Schedule Date Time" : "Tanggal Dan Jam MCU")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_MCUScheduleDateTime">
                                    <div class="input-group" id="datetimepicker_MCUScheduleDateTime" data-target-input="nearest" data-td-target-toggle="nearest">
                                        <input
                                            type="text"
                                            name="x_MCUScheduleDateTime"
                                            id="x_MCUScheduleDateTime"
                                            value=""
                                            placeholder="MCU Date Time"
                                            data-format-pattern="dd MMM yyyy HH:mm:sszzz"
                                            class="form-control tempus-dominus-input"
                                            data-target="#datetimepicker_MCUScheduleDateTime"
                                        />
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="r_MCULocation" class="row">
                        <label for="x_MCULocation" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "MCU Location" : "Lokasi MCU")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_MCULocation">
                                    <input
                                        type="text"
                                        name="x_MCULocation"
                                        id="x_MCULocation"
                                        placeholder="MCU Location"
                                        class="form-control"
                                        maxlength="50"
                                    />
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary ew-btn" id="btn-add-mcu-schedule" type="button">
                    @(CurrentLanguage == "en-US" ? "Create MCU Schedule" : "Tambah Jadwal MCU")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel-mcu-schedule" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="loading-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-md">
        <div class="modal-content">
            <div class="modal-body">
                <p class="text-center mb-0">
                    @(CurrentLanguage == "en-US" ? "Processing..." : "Sedang memproses...")
                </p>
            </div>
        </div>
    </div>
</div>
</div>
</template>
@{ crewChecklistForAdminEdit.CloseRecordset(); }
@if (crewChecklistForAdminEdit.CurrentDetailTables.Contains("TRChecklistPerformance") && trChecklistPerformance.DetailEdit) {
    if (!Empty(crewChecklistForAdminEdit.CurrentDetailTable)) {
<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("TRChecklistPerformance", "TblCaption"))</h4>
    }
        @await Html.PartialAsync("TrChecklistPerformanceGrid")
    View = this;
}
@Html.Raw(crewChecklistForAdminEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(crewChecklistForAdminEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fCrewChecklistForAdminedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fCrewChecklistForAdminedit" data-href="@AppPath(crewChecklistForAdminEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(crewChecklistForAdminEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewChecklistForAdminEdit.Rows)) };
    ew.applyTemplate("tpd_CrewChecklistForAdminedit", "tpm_CrewChecklistForAdminedit", "CrewChecklistForAdminedit", "@(crewChecklistForAdminEdit.Export)", "CrewChecklistForAdmin", ew.templateData.rows[0], @(crewChecklistForAdminEdit.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewChecklistForAdminEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("CrewChecklistForAdmin");
});
</script>
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");
    $('div#r_MTCrewID').hide();

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // get currently edited crew id from current url
    const checklistID = parseInt(currentUrlObject.pathname.split('/').pop());
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    $('#btn-action')
        .text((selectedLanguage.id === 'en-US') ? `${ew.language.phrase("SaveBtn")} as Draft` : `${ew.language.phrase("SaveBtn")} sebagai Draft`)
        .addClass('me-3 primary-black-clr gray-bg');
    $('.ew-buttons > .col-sm-10').removeClass('col-sm-10').addClass('d-flex mb-3');
    $('.ew-buttons > .offset-sm-2').removeClass('offset-sm-2');
    $('.breadcrumb li.breadcrumb-item a:not(.ew-home)').attr('href', `${ew.PATH_BASE}ChecklistList`);
    const parentUrl = ew.PATH_BASE;
    const crewInfoApi = 'get-crew-info-for-checklist';
    $.ajax({
        url: `${parentUrl}api/Registration/${crewInfoApi}`,
        method: 'GET',
        data: {
            checklistID: checklistID
        },
        success: function (response) {
            if (response.success) {
                // Parse the data in the response
                const crewData = response.data;
                if (crewData.FullName !== '') {
                    $('div#r_crew_FullName div').append($('<span>').text(crewData.FullName));
                } else {
                    $('div#r_crew_FullName div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.EmployeeStatus !== '') {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').text(crewData.EmployeeStatus));
                } else {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.IndividualCodeNumber !== '') {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').text(crewData.IndividualCodeNumber));
                    if (crewData.RequiredPhoto !== '') {
                        const anchor = $("<a></a>", { 
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement", 
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const img = $("<img>", { 
                            class: "ew-image ew-lazy", 
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_RequiredPhoto div').append(span);
                    } else {
                        $('div#r_crew_RequiredPhoto div').append($('<span>').html('&nbsp;'));
                    }
                    if (crewData.VisaPhoto !== '') {
                        const anchor = $("<a></a>", { 
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement", 
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const img = $("<img>", { 
                            class: "ew-image ew-lazy", 
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_VisaPhoto div').append(span);
                    } else {
                        $('div#r_crew_VisaPhoto div').append($('<span>').html('&nbsp;'));
                    }
                } else {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.RankAppliedFor !== '') {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').text(crewData.RankAppliedFor));
                } else {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.WillAcceptLowRank !== '') {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').text(crewData.WillAcceptLowRank));
                } else {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableFrom !== '') {
                    $('div#r_crew_AvailableFrom div').append($('<span>').text(crewData.AvailableFrom));
                } else {
                    $('div#r_crew_AvailableFrom div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableUntil !== '') {
                    $('div#r_crew_AvailableUntil div').append($('<span>').text(crewData.AvailableUntil));
                } else {
                    $('div#r_crew_AvailableUntil div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.RankAppliedFor !== '' && crewData.EmployeeStatus !== '' && crewData.ID !== '') {
                    const invokeInviteModalButton = $('<button/>', {
                        'class': 'btn btn-primary ew-btn me-3',
                        'name': 'btn-invoke-invite-modal',
                        'id': 'btn-invoke-invite-modal',
                        'type': 'button',
                        'text': (selectedLanguage.id === 'en-US') ? 'Invite' : 'Undang'
                    });
                    $('#btn-action').after(invokeInviteModalButton);

                    // initialize date time picker
                    const format = "dd MMM yyyy HH:mm:00zzz";
                    const options = {
                        localization: {
                            locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                            hourCycle: format.match(/H/) ? "h24" : "h12",
                            format,
                            ...ew.language.phrase("datetimepicker")
                        },
                        display: {
                            icons: {
                                previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                                next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                            },
                            components: {
                                hours: !!format.match(/h/i),
                                minutes: !!format.match(/m/),
                                seconds: !!format.match(/s/i)
                            },
                            theme: ew.isDark() ? "dark" : "auto"
                        },
                        defaultDate: new Date(new Date().setHours(8, 0, 0)).toISOString(),
                    };
                    ew.createDateTimePicker("add-invite-datetime", "x_InviteDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
                    $('#x_InviteDateTime').val(replaceTimezoneOffset($('#x_InviteDateTime').val(), formatTimezoneOffset(new Date().getTimezoneOffset())));

                    // Listen for input changes
                    $('#x_InviteDateTime').on('change.td', function() {
                        const timezoneOffset = new Date().getTimezoneOffset();
                        const formattedTimezoneOffset = formatTimezoneOffset(timezoneOffset);
                        const currentValue = $(this).val();
                        const newValue = replaceTimezoneOffset(currentValue, formattedTimezoneOffset);
                        $(this).val(newValue);
                    });

                    // Format timezone offset as needed
                    function formatTimezoneOffset(offset) {
                        const hours = Math.floor(Math.abs(offset) / 60);
                        const minutes = Math.abs(offset) % 60;
                        const sign = offset < 0 ? '+' : '-';
                        const formattedOffset = sign + addLeadingZero(hours) + ':' + addLeadingZero(minutes);
                        return ' GMT ' + formattedOffset;
                    }

                    // Helper function to add leading zero to single-digit numbers
                    function addLeadingZero(num) {
                        return num < 10 ? '0' + num : num;
                    }

                    // Replace "zzz" with the formatted timezone offset
                    function replaceTimezoneOffset(str, offset) {
                        return str.replace('zzz', offset);
                    }
                    function validateDateTime(dateTimeString) {
                        const errorMessage = (selectedLanguage.id === 'en-US') ? `Incorrect date (dd MMM yyyy HH:mm:ss GMT +/-HH:mm)` : `Tanggal tidak benar (dd MMM yyyy HH:mm:ss GMT +/-HH:mm)`;
                        const dateTimeRegex = /^\d{1,2} [A-Za-z]{3} \d{4} \d{1,2}:\d{2}:\d{2} GMT [+-]\d{1,2}:\d{2}$/;
                        if (!dateTimeRegex.test(dateTimeString)) {
                            ew.showToast(errorMessage);
                            return false;
                        }
                        const dateTimeParts = dateTimeString.split(' ');
                        const day = parseInt(dateTimeParts[0], 10);
                        const monthNamesEnglish = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                        const monthNamesIndonesian = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des'];
                        const month = (selectedLanguage.id === 'en-US') ? monthNamesEnglish.indexOf(dateTimeParts[1]) : monthNamesIndonesian.indexOf(dateTimeParts[1]);
                        const year = parseInt(dateTimeParts[2], 10);
                        let valid = false;
                        if (year >= 1900 && year <= 9999 && month >= 0 && day >= 1 && day <= 31) {
                            if (month === 1) {
                                valid = day <= (((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) ? 29 : 28);
                            } else if (month === 3 || month === 5 || month === 8 || month === 10) {
                                valid = day <= 30;
                            } else {
                                valid = true;
                            }
                        }
                        const timeParts = dateTimeParts[3].split(':');
                        const hour = parseInt(timeParts[0], 10);
                        const minute = parseInt(timeParts[1], 10);
                        const second = parseInt(timeParts[2], 10);
                        if (valid) {
                            valid = (hour >= 0) && (hour <= 23) && (minute >= 0) && (minute <= 59) && (second >= 0) && (second <= 59);
                            if (valid) {
                                const timeOffsetWithSign = dateTimeParts[5];
                                const timeOffset = timeOffsetWithSign.substring(1);
                                const timeOffsetParts = timeOffset.split(':');
                                const timeOffsetHour = parseInt(timeOffsetParts[0], 10);
                                const timeOffsetMinute = parseInt(timeOffsetParts[1], 10);
                                valid = (timeOffsetHour >= 0) && (timeOffsetHour <= 23) && (timeOffsetMinute >= 0) && (timeOffsetMinute <= 59);
                            }
                        }
                        if (!valid) {
                            ew.showToast(errorMessage);
                        }
                        return valid;
                    }
                    $('#btn-invoke-invite-modal').click(function() {
                        $('#invite-modal-dialog').modal('show'); 
                    });
                    $('#invite-modal-dialog').on('hidden.bs.modal', function() {
                        // $('#x_InviteDateTime').val(null);
                        // $('#x_InviteNotes').val(null);
                    });
                    const inviteCrewUrl = "invite-crew";
                    $("#btn-add-invite-datetime").click(function() {
                        const inviteDateTimeValue = $('#x_InviteDateTime').val();
                        const inviteDateTimeCaption = $(`label[for="x_InviteDateTime"]`).text();
                        if (inviteDateTimeValue == '') {
                            if (selectedLanguage.id === 'en-US') {
                                ew.showToast(`Please enter required field - ${inviteDateTimeCaption}`);
                            } else {
                                ew.showToast(`Masukkan input yang dibutuhkan - ${inviteDateTimeCaption}`);
                            }
                            return;
                        }
                        if (!validateDateTime(inviteDateTimeValue)) {
                            return;
                        }
                        $('#invite-modal-dialog').modal('hide');
                        $('#loading-modal-dialog').modal('show');
                        const inviteNotesValue = ($('#x_InviteNotes').val() !== '') ? $('#x_InviteNotes').val() : '';
                        const inviteCrewRequest = {
                            inviteDateTime: inviteDateTimeValue.replace(' GMT ', ''),
                            notes: inviteNotesValue,
                            crewID: parseInt(crewData.ID),
                        };
                        $.ajax({
                            method: "POST",
                            url: `${parentUrl}api/Registration/${inviteCrewUrl}`,
                            data: JSON.stringify(inviteCrewRequest),
                            contentType: "application/json",
                            success: function(response) {
                                if (response.success) {
                                    let successMessage = '';
                                    if (selectedLanguage.id === 'en-US') {
                                        successMessage = `Invite Crew Successful`;
                                    } else {
                                        successMessage = `Undang Kru Berhasil`;
                                    }
                                    const baseUrl = new URL(window.location.href).origin;
                                    const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                    const encodedSuccessMessage = encodeURIComponent(successMessage);
                                    const params = new URLSearchParams(targetUrl.search);
                                    params.set('successMessage', encodedSuccessMessage);
                                    targetUrl.search = params.toString();
                                    $('#loading-modal-dialog').modal('hide');
                                    window.location.href = targetUrl.href;
                                } else {
                                    $('#loading-modal-dialog').modal('hide');
                                    const errorMessage = response.errorMessage;
                                    ew.showToast(errorMessage);
                                }
                            },
                            error: function(xhr, textStatus, errorThrown) {
                                $('#loading-modal-dialog').modal('hide');
                                ew.showToast(errorThrown);
                            }
                        });
                    });
                    const invokeMCUModalButton = $('<button/>', {
                        'class': 'btn btn-default ew-btn primary-green-bg me-3 primary-white-clr',
                        'name': 'btn-invoke-mcu-modal',
                        'id': 'btn-invoke-mcu-modal',
                        'type': 'button',
                        'text': (selectedLanguage.id === 'en-US') ? 'Accept' : 'Terima'
                    });
                    const invokeRejectModalButton = $('<button/>', {
                        'class': 'btn btn-danger ew-btn me-auto primary-white-clr',
                        'name': 'btn-invoke-reject-modal',
                        'id': 'btn-invoke-reject-modal',
                        'type': 'button',
                        'text': (selectedLanguage.id === 'en-US') ? 'Reject' : 'Tolak'
                    });
                    if ($('#x_AssistantManagerPdeReviewed_0')[0].checked && $('#x_CrewingManagerApproval_0')[0].checked) {
                        $('#btn-invoke-invite-modal').after(invokeMCUModalButton);
                        $('#btn-invoke-mcu-modal').after(invokeRejectModalButton);
                    } else {
                        $('#btn-invoke-invite-modal').after(invokeRejectModalButton);
                    }
                    if ($('#x_CrewingManagerApproval_0')[0].checked) {
                        $("#btn-invoke-reject-modal").prop("disabled", true);
                    } else {
                        $("#btn-invoke-reject-modal").prop("disabled", false);
                    }
                    ew.createDateTimePicker("add-mcu-schedule", "x_MCUScheduleDateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
                    $('#x_MCUScheduleDateTime').val(replaceTimezoneOffset($('#x_MCUScheduleDateTime').val(), formatTimezoneOffset(new Date().getTimezoneOffset())));

                    // Listen for input changes
                    $('#x_MCUScheduleDateTime').on('change.td', function() {
                        const timezoneOffset = new Date().getTimezoneOffset();
                        const formattedTimezoneOffset = formatTimezoneOffset(timezoneOffset);
                        const currentValue = $(this).val();
                        const newValue = replaceTimezoneOffset(currentValue, formattedTimezoneOffset);
                        $(this).val(newValue);
                    });
                    $('#btn-invoke-mcu-modal').click(function() {
                        $('#mcu-modal-dialog').modal('show');
                    });
                    $('#mcu-modal-dialog').on('hidden.bs.modal', function() {
                        // $('#x_MCUScheduleDateTime').val(null);
                        // $('#x_MCULocation').val(null);
                    });
                    $('#btn-invoke-reject-modal').click(function() {
                        $('#reject-modal-dialog').modal('show');
                    });
                    $('#reject-modal-dialog').on('hidden.bs.modal', function() {
                        $('#x_RejectedReason').val(null);
                    });
                    const addMCUScheduleApiUrl = "add-mcu-schedule";
                    $("#btn-add-mcu-schedule").click(function() {
                        const mcuScheduleDateTimeValue = $('#x_MCUScheduleDateTime').val();
                        const mcuScheduleDateTimeCaption = $(`label[for="x_MCUScheduleDateTime"]`).text();
                        if (mcuScheduleDateTimeValue == '') {
                            if (selectedLanguage.id === 'en-US') {
                                ew.showToast(`Please enter required field - ${mcuScheduleDateTimeCaption}`);
                            } else {
                                ew.showToast(`Masukkan input yang dibutuhkan - ${mcuScheduleDateTimeCaption}`);
                            }
                            return;
                        }
                        if (!validateDateTime(mcuScheduleDateTimeValue)) {
                            return;
                        }
                        const mcuLocationValue = $('#x_MCULocation').val();
                        const mcuLocationCaption = $(`label[for="x_MCULocation"]`).text();
                        if (mcuLocationValue == '') {
                            if (selectedLanguage.id === 'en-US') {
                                ew.showToast(`Please enter required field - ${mcuLocationCaption}`);
                            } else {
                                ew.showToast(`Masukkan input yang dibutuhkan - ${mcuLocationCaption}`);
                            }
                            return;
                        }
                        $('#mcu-modal-dialog').modal('hide');
                        $('#loading-modal-dialog').modal('show');
                        const mcuScheduleRequest = {
                            mcuScheduleDateTime: mcuScheduleDateTimeValue.replace(' GMT ', ''),
                            mcuLocation: mcuLocationValue,
                            crewID: parseInt(crewData.ID),
                        };
                        $.ajax({
                            method: "POST",
                            url: `${parentUrl}api/Registration/${addMCUScheduleApiUrl}`,
                            data: JSON.stringify(mcuScheduleRequest),
                            contentType: "application/json",
                            success: function(response) {
                                if (response.success) {
                                    let successMessage = '';
                                    if (selectedLanguage.id === 'en-US') {
                                        successMessage = `Add MCU Schedule Successful`;
                                    } else {
                                        successMessage = `Menambahkan Jadwal MCU Berhasil`;
                                    }
                                    const baseUrl = new URL(window.location.href).origin;
                                    const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                    const encodedSuccessMessage = encodeURIComponent(successMessage);
                                    const params = new URLSearchParams(targetUrl.search);
                                    params.set('successMessage', encodedSuccessMessage);
                                    targetUrl.search = params.toString();
                                    $('#loading-modal-dialog').modal('hide');
                                    window.location.href = targetUrl.href;
                                } else {
                                    $('#loading-modal-dialog').modal('hide');
                                    const errorMessage = response.errorMessage;
                                    ew.showToast(errorMessage);
                                }
                            },
                            error: function(xhr, textStatus, errorThrown) {
                                $('#loading-modal-dialog').modal('hide');
                                ew.showToast(errorThrown);
                            }
                        });
                    });
                    const rejectSingleCrewApiUrl = "reject-single-crew";
                    $("#btn-reject").click(function() {
                        const rejectedReasonValue = $('#x_RejectedReason').val();
                        const rejectedReasonCaption = $(`label[for="x_RejectedReason"]`).text();
                        if (rejectedReasonValue == '') {
                            if (selectedLanguage.id === 'en-US') {
                                ew.showToast(`Please enter required field - ${rejectedReasonCaption}`);
                            } else {
                                ew.showToast(`Masukkan input yang dibutuhkan - ${rejectedReasonCaption}`);
                            }
                        } else {
                            $('#reject-modal-dialog').modal('hide');
                            $('#loading-modal-dialog').modal('show');
                            const rejectSingleRequest = {
                                rejectReason: rejectedReasonValue,
                                crewID: parseInt(crewData.ID),
                            };
                            $.ajax({
                                method: "POST",
                                url: `${parentUrl}api/Registration/${rejectSingleCrewApiUrl}`,
                                data: JSON.stringify(rejectSingleRequest),
                                contentType: "application/json",
                                success: function(response) {
                                    if (response.success) {
                                        let successMessage = '';
                                        if (selectedLanguage.id === 'en-US') {
                                            successMessage = `Add ${rejectedReasonCaption} Successful`;
                                        } else {
                                            successMessage = `Menambahkan ${rejectedReasonCaption} Berhasil`;
                                        }
                                        const baseUrl = new URL(window.location.href).origin;
                                        const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}ChecklistList`);
                                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                                        const params = new URLSearchParams(targetUrl.search);
                                        params.set('successMessage', encodedSuccessMessage);
                                        targetUrl.search = params.toString();
                                        $('#loading-modal-dialog').modal('hide');
                                        window.location.href = targetUrl.href;
                                    } else {
                                        $('#loading-modal-dialog').modal('hide');
                                        const errorMessage = response.errorMessage;
                                        ew.showToast(errorMessage);
                                    }
                                },
                                error: function(xhr, textStatus, errorThrown) {
                                    $('#loading-modal-dialog').modal('hide');
                                    ew.showToast(errorThrown);
                                }
                            });
                        }
                    });
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function (xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
});
</script>
