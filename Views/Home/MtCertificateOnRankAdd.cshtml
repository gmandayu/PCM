@{
    // View
    View = this;

    // Check action result
    if (mtCertificateOnRankAdd.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtCertificateOnRankAdd.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(mtCertificateOnRankAdd.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTCertificateOnRank: currentTable } });
var currentPageID = ew.PAGE_ID = "add";
var currentForm;
var fMTCertificateOnRankadd;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTCertificateOnRankadd")
        .setPageId("add")

        // Add fields
        .setFields([

            ["MTRankID", [fields.MTRankID.visible && fields.MTRankID.required ? ew.Validators.required(fields.MTRankID.caption) : null], fields.MTRankID.isInvalid],
            ["MTCertificateID", [fields.MTCertificateID.visible && fields.MTCertificateID.required ? ew.Validators.required(fields.MTCertificateID.caption) : null], fields.MTCertificateID.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "MTRankID": @Html.Raw(mtCertificateOnRankAdd.MTRankID.ToClientList(mtCertificateOnRankAdd)),
            "MTCertificateID": @Html.Raw(mtCertificateOnRankAdd.MTCertificateID.ToClientList(mtCertificateOnRankAdd)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtCertificateOnRankAdd.ShowPageHeader()
@mtCertificateOnRankAdd.ShowMessages()
<form name="fMTCertificateOnRankadd" id="fMTCertificateOnRankadd" class="@(mtCertificateOnRankAdd.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(mtCertificateOnRankAdd.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtCertificateOnRankAdd.OldKeyName)" value="@Html.Raw(mtCertificateOnRankAdd.OldKey)">
<div class="ew-add-div"><!-- page* -->
@if (mtCertificateOnRankAdd.MTRankID.Visible) { // mtCertificateOnRankAdd.MTRankID.Visible (begin)
    <div id="r_MTRankID" @Html.Raw(mtCertificateOnRankAdd.MTRankID.RowAttributes)>
        <label id="elh_MTCertificateOnRank_MTRankID" for="x_MTRankID" class="@(mtCertificateOnRankAdd.LeftColumnClass)">@Html.Raw(mtCertificateOnRankAdd.MTRankID.Caption)@Html.Raw(mtCertificateOnRankAdd.MTRankID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCertificateOnRankAdd.RightColumnClass)"><div @Html.Raw(mtCertificateOnRankAdd.MTRankID.CellAttributes)>
<span id="el_MTCertificateOnRank_MTRankID">
    <select
        id="x_MTRankID"
        name="x_MTRankID"
        class="form-select ew-select@(mtCertificateOnRankAdd.MTRankID.IsInvalidClass)"
        data-select2-id="fMTCertificateOnRankadd_x_MTRankID"
        data-table="MTCertificateOnRank"
        data-field="x_MTRankID"
        data-value-separator="@(mtCertificateOnRankAdd.MTRankID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCertificateOnRankAdd.MTRankID.PlaceHolder))"
        @Html.Raw(mtCertificateOnRankAdd.MTRankID.EditAttributes)>
        @(mtCertificateOnRankAdd.MTRankID.SelectOptionListHtml("x_MTRankID"))
    </select>
    @Html.Raw(mtCertificateOnRankAdd.MTRankID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCertificateOnRankAdd.MTRankID.GetErrorMessage())</div>
@Html.Raw(mtCertificateOnRankAdd.MTRankID.Lookup.GetParamTag(mtCertificateOnRankAdd, "p_x_MTRankID"))
<script>
loadjs.ready("fMTCertificateOnRankadd", function() {
    var options = { name: "x_MTRankID", selectId: "fMTCertificateOnRankadd_x_MTRankID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCertificateOnRankadd.lists.MTRankID?.lookupOptions.length) {
        options.data = { id: "x_MTRankID", form: "fMTCertificateOnRankadd" };
    } else {
        options.ajax = { id: "x_MTRankID", form: "fMTCertificateOnRankadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCertificateOnRank.fields.MTRankID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCertificateOnRankAdd.MTRankID.Visible (end) *@
@if (mtCertificateOnRankAdd.MTCertificateID.Visible) { // mtCertificateOnRankAdd.MTCertificateID.Visible (begin)
    <div id="r_MTCertificateID" @Html.Raw(mtCertificateOnRankAdd.MTCertificateID.RowAttributes)>
        <label id="elh_MTCertificateOnRank_MTCertificateID" for="x_MTCertificateID" class="@(mtCertificateOnRankAdd.LeftColumnClass)">@Html.Raw(mtCertificateOnRankAdd.MTCertificateID.Caption)@Html.Raw(mtCertificateOnRankAdd.MTCertificateID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtCertificateOnRankAdd.RightColumnClass)"><div @Html.Raw(mtCertificateOnRankAdd.MTCertificateID.CellAttributes)>
<span id="el_MTCertificateOnRank_MTCertificateID">
    <select
        id="x_MTCertificateID"
        name="x_MTCertificateID"
        class="form-select ew-select@(mtCertificateOnRankAdd.MTCertificateID.IsInvalidClass)"
        data-select2-id="fMTCertificateOnRankadd_x_MTCertificateID"
        data-table="MTCertificateOnRank"
        data-field="x_MTCertificateID"
        data-value-separator="@(mtCertificateOnRankAdd.MTCertificateID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(mtCertificateOnRankAdd.MTCertificateID.PlaceHolder))"
        @Html.Raw(mtCertificateOnRankAdd.MTCertificateID.EditAttributes)>
        @(mtCertificateOnRankAdd.MTCertificateID.SelectOptionListHtml("x_MTCertificateID"))
    </select>
    @Html.Raw(mtCertificateOnRankAdd.MTCertificateID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(mtCertificateOnRankAdd.MTCertificateID.GetErrorMessage())</div>
@Html.Raw(mtCertificateOnRankAdd.MTCertificateID.Lookup.GetParamTag(mtCertificateOnRankAdd, "p_x_MTCertificateID"))
<script>
loadjs.ready("fMTCertificateOnRankadd", function() {
    var options = { name: "x_MTCertificateID", selectId: "fMTCertificateOnRankadd_x_MTCertificateID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fMTCertificateOnRankadd.lists.MTCertificateID?.lookupOptions.length) {
        options.data = { id: "x_MTCertificateID", form: "fMTCertificateOnRankadd" };
    } else {
        options.ajax = { id: "x_MTCertificateID", form: "fMTCertificateOnRankadd", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumInputLength = ew.selectMinimumInputLength;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.MTCertificateOnRank.fields.MTCertificateID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
</div></div>
    </div>
} @* mtCertificateOnRankAdd.MTCertificateID.Visible (end) *@
</div><!-- /page* -->
@{ mtCertificateOnRankAdd.CloseRecordset(); }
@Html.Raw(mtCertificateOnRankAdd.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtCertificateOnRankAdd.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTCertificateOnRankadd">@Html.Raw(Language.Phrase("AddBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTCertificateOnRankadd" data-href="@AppPath(mtCertificateOnRankAdd.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtCertificateOnRankAdd.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@mtCertificateOnRankAdd.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTCertificateOnRank");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
