@{
    // View
    View = this;

    // Check action result
    if (crewFamilyForAdminViewModeView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewFamilyForAdminViewModeView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewFamilyForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewFamilyForAdminViewModeView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewFamilyForAdminViewModeView.ExportOptions.RenderBody()
    @crewFamilyForAdminViewModeView.OtherOptions.RenderBody()
</div>
}
@crewFamilyForAdminViewModeView.ShowPageHeader()
@crewFamilyForAdminViewModeView.ShowMessages()
<main class="view">
<form name="fCrewFamilyForAdminViewModeview" id="fCrewFamilyForAdminViewModeview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewFamilyForAdminViewModeView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewFamilyForAdminViewModeView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewFamilyForAdminViewMode: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewFamilyForAdminViewModeview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewFamilyForAdminViewModeview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewFamilyForAdminViewModeView.IsModal)">
<table class="@(crewFamilyForAdminViewModeView.TableClass)">
@if (crewFamilyForAdminViewModeView.MTCrewID.Visible) { // crewFamilyForAdminViewModeView.MTCrewID.Visible (begin)
    <tr id="r_MTCrewID" @Html.Raw(crewFamilyForAdminViewModeView.MTCrewID.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_MTCrewID"><template id="tpc_CrewFamilyForAdminViewMode_MTCrewID">@Html.Raw(crewFamilyForAdminViewModeView.MTCrewID.Caption)</template></span></td>
        <td data-name="MTCrewID" @Html.Raw(crewFamilyForAdminViewModeView.MTCrewID.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_MTCrewID"><span id="el_CrewFamilyForAdminViewMode_MTCrewID">
<span @Html.Raw(crewFamilyForAdminViewModeView.MTCrewID.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.MTCrewID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.MTCrewID.Visible (end) *@
@if (crewFamilyForAdminViewModeView.Relationship.Visible) { // crewFamilyForAdminViewModeView.Relationship.Visible (begin)
    <tr id="r_Relationship" @Html.Raw(crewFamilyForAdminViewModeView.Relationship.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_Relationship"><template id="tpc_CrewFamilyForAdminViewMode_Relationship">@Html.Raw(crewFamilyForAdminViewModeView.Relationship.Caption)</template></span></td>
        <td data-name="Relationship" @Html.Raw(crewFamilyForAdminViewModeView.Relationship.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_Relationship"><span id="el_CrewFamilyForAdminViewMode_Relationship">
<span @Html.Raw(crewFamilyForAdminViewModeView.Relationship.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.Relationship.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.Relationship.Visible (end) *@
@if (crewFamilyForAdminViewModeView.FullName.Visible) { // crewFamilyForAdminViewModeView.FullName.Visible (begin)
    <tr id="r_FullName" @Html.Raw(crewFamilyForAdminViewModeView.FullName.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_FullName"><template id="tpc_CrewFamilyForAdminViewMode_FullName">@Html.Raw(crewFamilyForAdminViewModeView.FullName.Caption)</template></span></td>
        <td data-name="FullName" @Html.Raw(crewFamilyForAdminViewModeView.FullName.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_FullName"><span id="el_CrewFamilyForAdminViewMode_FullName">
<span @Html.Raw(crewFamilyForAdminViewModeView.FullName.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.FullName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.FullName.Visible (end) *@
@if (crewFamilyForAdminViewModeView.Gender.Visible) { // crewFamilyForAdminViewModeView.Gender.Visible (begin)
    <tr id="r_Gender" @Html.Raw(crewFamilyForAdminViewModeView.Gender.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_Gender"><template id="tpc_CrewFamilyForAdminViewMode_Gender">@Html.Raw(crewFamilyForAdminViewModeView.Gender.Caption)</template></span></td>
        <td data-name="Gender" @Html.Raw(crewFamilyForAdminViewModeView.Gender.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_Gender"><span id="el_CrewFamilyForAdminViewMode_Gender">
<span @Html.Raw(crewFamilyForAdminViewModeView.Gender.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.Gender.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.Gender.Visible (end) *@
@if (crewFamilyForAdminViewModeView.DateOfBirth.Visible) { // crewFamilyForAdminViewModeView.DateOfBirth.Visible (begin)
    <tr id="r_DateOfBirth" @Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_DateOfBirth"><template id="tpc_CrewFamilyForAdminViewMode_DateOfBirth">@Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.Caption)</template></span></td>
        <td data-name="DateOfBirth" @Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_DateOfBirth"><span id="el_CrewFamilyForAdminViewMode_DateOfBirth">
<span @Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.DateOfBirth.Visible (end) *@
@if (crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.Visible) { // crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.Visible (begin)
    <tr id="r_MobileNumberCode_CountryID" @Html.Raw(crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_MobileNumberCode_CountryID"><template id="tpc_CrewFamilyForAdminViewMode_MobileNumberCode_CountryID">@Html.Raw(crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.Caption)</template></span></td>
        <td data-name="MobileNumberCode_CountryID" @Html.Raw(crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_MobileNumberCode_CountryID"><span id="el_CrewFamilyForAdminViewMode_MobileNumberCode_CountryID">
<span @Html.Raw(crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.Visible (end) *@
@if (crewFamilyForAdminViewModeView.MobileNumber.Visible) { // crewFamilyForAdminViewModeView.MobileNumber.Visible (begin)
    <tr id="r_MobileNumber" @Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_MobileNumber"><template id="tpc_CrewFamilyForAdminViewMode_MobileNumber">@Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.Caption)</template></span></td>
        <td data-name="MobileNumber" @Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_MobileNumber"><span id="el_CrewFamilyForAdminViewMode_MobileNumber">
<span @Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.MobileNumber.Visible (end) *@
@if (crewFamilyForAdminViewModeView._Email.Visible) { // crewFamilyForAdminViewModeView._Email.Visible (begin)
    <tr id="r__Email" @Html.Raw(crewFamilyForAdminViewModeView._Email.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode__Email"><template id="tpc_CrewFamilyForAdminViewMode__Email">@Html.Raw(crewFamilyForAdminViewModeView._Email.Caption)</template></span></td>
        <td data-name="_Email" @Html.Raw(crewFamilyForAdminViewModeView._Email.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode__Email"><span id="el_CrewFamilyForAdminViewMode__Email">
<span @Html.Raw(crewFamilyForAdminViewModeView._Email.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView._Email.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView._Email.Visible (end) *@
@if (crewFamilyForAdminViewModeView.SocialSecurityNumber.Visible) { // crewFamilyForAdminViewModeView.SocialSecurityNumber.Visible (begin)
    <tr id="r_SocialSecurityNumber" @Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_SocialSecurityNumber"><template id="tpc_CrewFamilyForAdminViewMode_SocialSecurityNumber">@Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.Caption)</template></span></td>
        <td data-name="SocialSecurityNumber" @Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_SocialSecurityNumber"><span id="el_CrewFamilyForAdminViewMode_SocialSecurityNumber">
<span @Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.SocialSecurityNumber.Visible (end) *@
@if (crewFamilyForAdminViewModeView.FamilyRegisterNumber.Visible) { // crewFamilyForAdminViewModeView.FamilyRegisterNumber.Visible (begin)
    <tr id="r_FamilyRegisterNumber" @Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_FamilyRegisterNumber"><template id="tpc_CrewFamilyForAdminViewMode_FamilyRegisterNumber">@Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.Caption)</template></span></td>
        <td data-name="FamilyRegisterNumber" @Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_FamilyRegisterNumber"><span id="el_CrewFamilyForAdminViewMode_FamilyRegisterNumber">
<span @Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.FamilyRegisterNumber.Visible (end) *@
@if (crewFamilyForAdminViewModeView.Address.Visible) { // crewFamilyForAdminViewModeView.Address.Visible (begin)
    <tr id="r_Address" @Html.Raw(crewFamilyForAdminViewModeView.Address.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_Address"><template id="tpc_CrewFamilyForAdminViewMode_Address">@Html.Raw(crewFamilyForAdminViewModeView.Address.Caption)</template></span></td>
        <td data-name="Address" @Html.Raw(crewFamilyForAdminViewModeView.Address.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_Address"><span id="el_CrewFamilyForAdminViewMode_Address">
<span @Html.Raw(crewFamilyForAdminViewModeView.Address.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.Address.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.Address.Visible (end) *@
@if (crewFamilyForAdminViewModeView.CreatedByUserID.Visible) { // crewFamilyForAdminViewModeView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(crewFamilyForAdminViewModeView.CreatedByUserID.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_CreatedByUserID"><template id="tpc_CrewFamilyForAdminViewMode_CreatedByUserID">@Html.Raw(crewFamilyForAdminViewModeView.CreatedByUserID.Caption)</template></span></td>
        <td data-name="CreatedByUserID" @Html.Raw(crewFamilyForAdminViewModeView.CreatedByUserID.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_CreatedByUserID"><span id="el_CrewFamilyForAdminViewMode_CreatedByUserID">
<span @Html.Raw(crewFamilyForAdminViewModeView.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.CreatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.CreatedByUserID.Visible (end) *@
@if (crewFamilyForAdminViewModeView.CreatedDateTime.Visible) { // crewFamilyForAdminViewModeView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(crewFamilyForAdminViewModeView.CreatedDateTime.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_CreatedDateTime"><template id="tpc_CrewFamilyForAdminViewMode_CreatedDateTime">@Html.Raw(crewFamilyForAdminViewModeView.CreatedDateTime.Caption)</template></span></td>
        <td data-name="CreatedDateTime" @Html.Raw(crewFamilyForAdminViewModeView.CreatedDateTime.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_CreatedDateTime"><span id="el_CrewFamilyForAdminViewMode_CreatedDateTime">
<span @Html.Raw(crewFamilyForAdminViewModeView.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.CreatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.CreatedDateTime.Visible (end) *@
@if (crewFamilyForAdminViewModeView.LastUpdatedByUserID.Visible) { // crewFamilyForAdminViewModeView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_LastUpdatedByUserID"><template id="tpc_CrewFamilyForAdminViewMode_LastUpdatedByUserID">@Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedByUserID.Caption)</template></span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedByUserID.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_LastUpdatedByUserID"><span id="el_CrewFamilyForAdminViewMode_LastUpdatedByUserID">
<span @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.LastUpdatedByUserID.Visible (end) *@
@if (crewFamilyForAdminViewModeView.LastUpdatedDateTime.Visible) { // crewFamilyForAdminViewModeView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(crewFamilyForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewFamilyForAdminViewMode_LastUpdatedDateTime"><template id="tpc_CrewFamilyForAdminViewMode_LastUpdatedDateTime">@Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedDateTime.Caption)</template></span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedDateTime.CellAttributes)>
<template id="tpx_CrewFamilyForAdminViewMode_LastUpdatedDateTime"><span id="el_CrewFamilyForAdminViewMode_LastUpdatedDateTime">
<span @Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewFamilyForAdminViewModeView.LastUpdatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewFamilyForAdminViewModeView.LastUpdatedDateTime.Visible (end) *@
</table>
<div id="tpd_CrewFamilyForAdminViewModeview" class="ew-custom-template"></div>
<template id="tpm_CrewFamilyForAdminViewModeview">
<div id="ct_crewFamilyForAdminViewModeView">    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
            </a>     
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
            </a>
        </li>
    </ul>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Relationship" class="mb-2 row">
                <label for="x_Relationship" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.Relationship.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.Relationship.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_Relationship"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_FullName" class="mb-2 row">
                <label for="x_FullName" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.FullName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.FullName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_FullName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Gender" class="mb-2 row">
                <label for="x_Gender" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.Gender.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.Gender.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_Gender"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_DateOfBirth" class="mb-2 row">
                <label for="x_DateOfBirth" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.DateOfBirth.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.DateOfBirth.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_DateOfBirth"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_MobileNumber" class="mb-2 row">
                <label for="x_MobileNumber" class="col-form-label">
                    @Html.Raw(crewFamilyForAdminViewModeView.MobileNumber.Caption) @(CurrentLanguage == "en-US" ? "(Without Leading Zero)" : "(Tanpa Diawali 0)")
                </label>
                <div>
                    @{
                        var mobileNumberCodeWithCountryName = crewFamilyForAdminViewModeView.MobileNumberCode_CountryID.GetViewValue();
                        if (string.IsNullOrEmpty(mobileNumberCodeWithCountryName))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            string mobileNumberCodePattern = @"^\+\d{1,3}";
                            Regex mobileNumberCodeRegex = new Regex(mobileNumberCodePattern);
                            Match mobileNumberCodeMatch = mobileNumberCodeRegex.Match(mobileNumberCodeWithCountryName);
                            if (mobileNumberCodeMatch.Success)
                            {
                                string mobileNumberCodeOnly = mobileNumberCodeMatch.Value;
                                var mobileNumberWithoutCode = crewFamilyForAdminViewModeView.MobileNumber.GetViewValue();
                                var mobileNumber = "(" + mobileNumberCodeOnly + ")" + mobileNumberWithoutCode;
                                @Html.Raw(mobileNumber);
                            }
                            else
                            {
                                @Html.Raw("&nbsp;");
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r__Email" class="mb-2 row">
                <label for="x__Email" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView._Email.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView._Email.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode__Email"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_SocialSecurityNumber" class="mb-2 row">
                <label for="x_SocialSecurityNumber" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.SocialSecurityNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.SocialSecurityNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_SocialSecurityNumber"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="r_FamilyRegisterNumber" class="mb-2 row">
                <label for="x_FamilyRegisterNumber" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.FamilyRegisterNumber.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.FamilyRegisterNumber.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_FamilyRegisterNumber"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-6">
            <div id="r_Address" class="mb-2 row">
                <label for="x_Address" class="col-form-label">@Html.Raw(crewFamilyForAdminViewModeView.Address.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewFamilyForAdminViewModeView.Address.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewFamilyForAdminViewMode_Address"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
        </div>
    </div>  
    </div>
</template>
@{ crewFamilyForAdminViewModeView.CloseRecordset(); }
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewFamilyForAdminViewModeView.Rows)) };
    ew.applyTemplate("tpd_CrewFamilyForAdminViewModeview", "tpm_CrewFamilyForAdminViewModeview", "CrewFamilyForAdminViewModeview", "@(crewFamilyForAdminViewModeView.Export)", "CrewFamilyForAdminViewMode", ew.templateData.rows[0], @(crewFamilyForAdminViewModeView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewFamilyForAdminViewModeView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewFamilyForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // get the current URL without Add or Edit for assigning active class in tabs
    const currentUrlWithoutAddEditListView = currentUrlObject.href.replace(/Add|Edit|List|View/g, "");
    // Create a new URLSearchParams object based on the current URL's search parameters
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    // Extract the value of the crewID query parameter
    const currentlyEditedCrewID = urlQueryParams.get('crewID');
    const crewFamilyID = currentUrlObject.pathname.split('/').pop();

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        const hrefWithoutAddEditListView = href.replace(/Add|Edit|List|View/g, "");
        // Check if the href contains current page's url
        if (currentUrlWithoutAddEditListView.includes(hrefWithoutAddEditListView)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the href contains "Edit" or "Add"
        if (href.includes("ViewModeView")) {
            // Add "/" and the currently edited crew ID to the href
            const newHref = href + "/" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("ViewModeList")) {
            // Add "?crewID=" and the currently edited crew ID to the href
            const newHref = href + "?crewID=" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();
    $('div.btn-toolbar.ew-toolbar').remove();
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                // Parse the data in the response
                const isAdmin = response.data.IsAdmin;
                const employeeStatus = response.data.EmployeeStatus;
                if (currentlyEditedCrewID === null) {
                    if (isAdmin) {
                        // redirect to list page with error message: record not found
                        if (employeeStatus === 'Candidate - Draft') {
                            window.location.replace(`${ew.PATH_BASE}RegistrationEdit/-1`);
                        } else if (employeeStatus === 'Candidate - Submitted') {
                            window.location.replace(`${ew.PATH_BASE}VWaitingForPdeReviewView/-1`);
                        }
                    } else {
                        window.location.replace(`${ew.PATH_BASE}index`);
                    }
                }
                if (employeeStatus === 'Candidate - Draft') {
                    const editButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-edit",
                        name: "btn-edit",
                        href: `${ew.PATH_BASE}CrewFamilyForAdminViewModeEdit/${crewFamilyID}?crewID=${currentlyEditedCrewID}`,
                    });
                    const deleteButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Delete" : "Hapus",
                        class: "btn btn-default ew-btn me-auto primary-red-bg primary-white-clr ew-action ew-delete", 
                        id: "btn-delete",
                        name: "btn-delete",
                        href: `${ew.PATH_BASE}CrewFamilyForAdminViewModeDelete/${crewFamilyID}`,
                        "data-ew-action": "inline-delete",
                        "data-caption": "Delete",
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewFamilyForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(editButton);
                    flexDiv.append(deleteButton);
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewFamilyForAdminViewModeview').append(buttonsDiv);
                } else if (employeeStatus === 'Candidate - Submitted') {
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewFamilyForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewFamilyForAdminViewModeview').append(buttonsDiv);
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
});
</script>
}
