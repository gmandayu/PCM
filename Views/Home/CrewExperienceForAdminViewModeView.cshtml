@{
    // View
    View = this;

    // Check action result
    if (crewExperienceForAdminViewModeView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewExperienceForAdminViewModeView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!crewExperienceForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!crewExperienceForAdminViewModeView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @crewExperienceForAdminViewModeView.ExportOptions.RenderBody()
    @crewExperienceForAdminViewModeView.OtherOptions.RenderBody()
</div>
}
@crewExperienceForAdminViewModeView.ShowPageHeader()
@crewExperienceForAdminViewModeView.ShowMessages()
<main class="view">
<form name="fCrewExperienceForAdminViewModeview" id="fCrewExperienceForAdminViewModeview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (!crewExperienceForAdminViewModeView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(crewExperienceForAdminViewModeView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewExperienceForAdminViewMode: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCrewExperienceForAdminViewModeview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewExperienceForAdminViewModeview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(crewExperienceForAdminViewModeView.IsModal)">
<table class="@(crewExperienceForAdminViewModeView.TableClass)">
@if (crewExperienceForAdminViewModeView.MTCrewID.Visible) { // crewExperienceForAdminViewModeView.MTCrewID.Visible (begin)
    <tr id="r_MTCrewID" @Html.Raw(crewExperienceForAdminViewModeView.MTCrewID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_MTCrewID"><template id="tpc_CrewExperienceForAdminViewMode_MTCrewID">@Html.Raw(crewExperienceForAdminViewModeView.MTCrewID.Caption)</template></span></td>
        <td data-name="MTCrewID" @Html.Raw(crewExperienceForAdminViewModeView.MTCrewID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_MTCrewID"><span id="el_CrewExperienceForAdminViewMode_MTCrewID">
<span @Html.Raw(crewExperienceForAdminViewModeView.MTCrewID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.MTCrewID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.MTCrewID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.CompanyName.Visible) { // crewExperienceForAdminViewModeView.CompanyName.Visible (begin)
    <tr id="r_CompanyName" @Html.Raw(crewExperienceForAdminViewModeView.CompanyName.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_CompanyName"><template id="tpc_CrewExperienceForAdminViewMode_CompanyName">@Html.Raw(crewExperienceForAdminViewModeView.CompanyName.Caption)</template></span></td>
        <td data-name="CompanyName" @Html.Raw(crewExperienceForAdminViewModeView.CompanyName.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_CompanyName"><span id="el_CrewExperienceForAdminViewMode_CompanyName">
<span @Html.Raw(crewExperienceForAdminViewModeView.CompanyName.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.CompanyName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.CompanyName.Visible (end) *@
@if (crewExperienceForAdminViewModeView.FlagName_CountryID.Visible) { // crewExperienceForAdminViewModeView.FlagName_CountryID.Visible (begin)
    <tr id="r_FlagName_CountryID" @Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_FlagName_CountryID"><template id="tpc_CrewExperienceForAdminViewMode_FlagName_CountryID">@Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.Caption)</template></span></td>
        <td data-name="FlagName_CountryID" @Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_FlagName_CountryID"><span id="el_CrewExperienceForAdminViewMode_FlagName_CountryID">
<span @Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.FlagName_CountryID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.VesselName.Visible) { // crewExperienceForAdminViewModeView.VesselName.Visible (begin)
    <tr id="r_VesselName" @Html.Raw(crewExperienceForAdminViewModeView.VesselName.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_VesselName"><template id="tpc_CrewExperienceForAdminViewMode_VesselName">@Html.Raw(crewExperienceForAdminViewModeView.VesselName.Caption)</template></span></td>
        <td data-name="VesselName" @Html.Raw(crewExperienceForAdminViewModeView.VesselName.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_VesselName"><span id="el_CrewExperienceForAdminViewMode_VesselName">
<span @Html.Raw(crewExperienceForAdminViewModeView.VesselName.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.VesselName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.VesselName.Visible (end) *@
@if (crewExperienceForAdminViewModeView.MTVesselTypeID.Visible) { // crewExperienceForAdminViewModeView.MTVesselTypeID.Visible (begin)
    <tr id="r_MTVesselTypeID" @Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_MTVesselTypeID"><template id="tpc_CrewExperienceForAdminViewMode_MTVesselTypeID">@Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.Caption)</template></span></td>
        <td data-name="MTVesselTypeID" @Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_MTVesselTypeID"><span id="el_CrewExperienceForAdminViewMode_MTVesselTypeID">
<span @Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.MTVesselTypeID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.GRT.Visible) { // crewExperienceForAdminViewModeView.GRT.Visible (begin)
    <tr id="r_GRT" @Html.Raw(crewExperienceForAdminViewModeView.GRT.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_GRT"><template id="tpc_CrewExperienceForAdminViewMode_GRT">@Html.Raw(crewExperienceForAdminViewModeView.GRT.Caption)</template></span></td>
        <td data-name="GRT" @Html.Raw(crewExperienceForAdminViewModeView.GRT.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_GRT"><span id="el_CrewExperienceForAdminViewMode_GRT">
<span @Html.Raw(crewExperienceForAdminViewModeView.GRT.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.GRT.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.GRT.Visible (end) *@
@if (crewExperienceForAdminViewModeView.DWT.Visible) { // crewExperienceForAdminViewModeView.DWT.Visible (begin)
    <tr id="r_DWT" @Html.Raw(crewExperienceForAdminViewModeView.DWT.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_DWT"><template id="tpc_CrewExperienceForAdminViewMode_DWT">@Html.Raw(crewExperienceForAdminViewModeView.DWT.Caption)</template></span></td>
        <td data-name="DWT" @Html.Raw(crewExperienceForAdminViewModeView.DWT.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_DWT"><span id="el_CrewExperienceForAdminViewMode_DWT">
<span @Html.Raw(crewExperienceForAdminViewModeView.DWT.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.DWT.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.DWT.Visible (end) *@
@if (crewExperienceForAdminViewModeView.MainEngine.Visible) { // crewExperienceForAdminViewModeView.MainEngine.Visible (begin)
    <tr id="r_MainEngine" @Html.Raw(crewExperienceForAdminViewModeView.MainEngine.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_MainEngine"><template id="tpc_CrewExperienceForAdminViewMode_MainEngine">@Html.Raw(crewExperienceForAdminViewModeView.MainEngine.Caption)</template></span></td>
        <td data-name="MainEngine" @Html.Raw(crewExperienceForAdminViewModeView.MainEngine.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_MainEngine"><span id="el_CrewExperienceForAdminViewMode_MainEngine">
<span @Html.Raw(crewExperienceForAdminViewModeView.MainEngine.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.MainEngine.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.MainEngine.Visible (end) *@
@if (crewExperienceForAdminViewModeView.BHP.Visible) { // crewExperienceForAdminViewModeView.BHP.Visible (begin)
    <tr id="r_BHP" @Html.Raw(crewExperienceForAdminViewModeView.BHP.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_BHP"><template id="tpc_CrewExperienceForAdminViewMode_BHP">@Html.Raw(crewExperienceForAdminViewModeView.BHP.Caption)</template></span></td>
        <td data-name="BHP" @Html.Raw(crewExperienceForAdminViewModeView.BHP.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_BHP"><span id="el_CrewExperienceForAdminViewMode_BHP">
<span @Html.Raw(crewExperienceForAdminViewModeView.BHP.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.BHP.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.BHP.Visible (end) *@
@if (crewExperienceForAdminViewModeView.MTRankID.Visible) { // crewExperienceForAdminViewModeView.MTRankID.Visible (begin)
    <tr id="r_MTRankID" @Html.Raw(crewExperienceForAdminViewModeView.MTRankID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_MTRankID"><template id="tpc_CrewExperienceForAdminViewMode_MTRankID">@Html.Raw(crewExperienceForAdminViewModeView.MTRankID.Caption)</template></span></td>
        <td data-name="MTRankID" @Html.Raw(crewExperienceForAdminViewModeView.MTRankID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_MTRankID"><span id="el_CrewExperienceForAdminViewMode_MTRankID">
<span @Html.Raw(crewExperienceForAdminViewModeView.MTRankID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.MTRankID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.MTRankID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.DateFrom.Visible) { // crewExperienceForAdminViewModeView.DateFrom.Visible (begin)
    <tr id="r_DateFrom" @Html.Raw(crewExperienceForAdminViewModeView.DateFrom.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_DateFrom"><template id="tpc_CrewExperienceForAdminViewMode_DateFrom">@Html.Raw(crewExperienceForAdminViewModeView.DateFrom.Caption)</template></span></td>
        <td data-name="DateFrom" @Html.Raw(crewExperienceForAdminViewModeView.DateFrom.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_DateFrom"><span id="el_CrewExperienceForAdminViewMode_DateFrom">
<span @Html.Raw(crewExperienceForAdminViewModeView.DateFrom.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.DateFrom.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.DateFrom.Visible (end) *@
@if (crewExperienceForAdminViewModeView.DateUntil.Visible) { // crewExperienceForAdminViewModeView.DateUntil.Visible (begin)
    <tr id="r_DateUntil" @Html.Raw(crewExperienceForAdminViewModeView.DateUntil.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_DateUntil"><template id="tpc_CrewExperienceForAdminViewMode_DateUntil">@Html.Raw(crewExperienceForAdminViewModeView.DateUntil.Caption)</template></span></td>
        <td data-name="DateUntil" @Html.Raw(crewExperienceForAdminViewModeView.DateUntil.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_DateUntil"><span id="el_CrewExperienceForAdminViewMode_DateUntil">
<span @Html.Raw(crewExperienceForAdminViewModeView.DateUntil.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.DateUntil.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.DateUntil.Visible (end) *@
@if (crewExperienceForAdminViewModeView.CreatedByUserID.Visible) { // crewExperienceForAdminViewModeView.CreatedByUserID.Visible (begin)
    <tr id="r_CreatedByUserID" @Html.Raw(crewExperienceForAdminViewModeView.CreatedByUserID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_CreatedByUserID"><template id="tpc_CrewExperienceForAdminViewMode_CreatedByUserID">@Html.Raw(crewExperienceForAdminViewModeView.CreatedByUserID.Caption)</template></span></td>
        <td data-name="CreatedByUserID" @Html.Raw(crewExperienceForAdminViewModeView.CreatedByUserID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_CreatedByUserID"><span id="el_CrewExperienceForAdminViewMode_CreatedByUserID">
<span @Html.Raw(crewExperienceForAdminViewModeView.CreatedByUserID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.CreatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.CreatedByUserID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.CreatedDateTime.Visible) { // crewExperienceForAdminViewModeView.CreatedDateTime.Visible (begin)
    <tr id="r_CreatedDateTime" @Html.Raw(crewExperienceForAdminViewModeView.CreatedDateTime.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_CreatedDateTime"><template id="tpc_CrewExperienceForAdminViewMode_CreatedDateTime">@Html.Raw(crewExperienceForAdminViewModeView.CreatedDateTime.Caption)</template></span></td>
        <td data-name="CreatedDateTime" @Html.Raw(crewExperienceForAdminViewModeView.CreatedDateTime.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_CreatedDateTime"><span id="el_CrewExperienceForAdminViewMode_CreatedDateTime">
<span @Html.Raw(crewExperienceForAdminViewModeView.CreatedDateTime.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.CreatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.CreatedDateTime.Visible (end) *@
@if (crewExperienceForAdminViewModeView.LastUpdatedByUserID.Visible) { // crewExperienceForAdminViewModeView.LastUpdatedByUserID.Visible (begin)
    <tr id="r_LastUpdatedByUserID" @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedByUserID.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_LastUpdatedByUserID"><template id="tpc_CrewExperienceForAdminViewMode_LastUpdatedByUserID">@Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedByUserID.Caption)</template></span></td>
        <td data-name="LastUpdatedByUserID" @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedByUserID.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_LastUpdatedByUserID"><span id="el_CrewExperienceForAdminViewMode_LastUpdatedByUserID">
<span @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedByUserID.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedByUserID.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.LastUpdatedByUserID.Visible (end) *@
@if (crewExperienceForAdminViewModeView.LastUpdatedDateTime.Visible) { // crewExperienceForAdminViewModeView.LastUpdatedDateTime.Visible (begin)
    <tr id="r_LastUpdatedDateTime" @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedDateTime.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_LastUpdatedDateTime"><template id="tpc_CrewExperienceForAdminViewMode_LastUpdatedDateTime">@Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedDateTime.Caption)</template></span></td>
        <td data-name="LastUpdatedDateTime" @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedDateTime.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_LastUpdatedDateTime"><span id="el_CrewExperienceForAdminViewMode_LastUpdatedDateTime">
<span @Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedDateTime.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.LastUpdatedDateTime.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.LastUpdatedDateTime.Visible (end) *@
@if (crewExperienceForAdminViewModeView.SignOnPortName.Visible) { // crewExperienceForAdminViewModeView.SignOnPortName.Visible (begin)
    <tr id="r_SignOnPortName" @Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_SignOnPortName"><template id="tpc_CrewExperienceForAdminViewMode_SignOnPortName">@Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.Caption)</template></span></td>
        <td data-name="SignOnPortName" @Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_SignOnPortName"><span id="el_CrewExperienceForAdminViewMode_SignOnPortName">
<span @Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.SignOnPortName.Visible (end) *@
@if (crewExperienceForAdminViewModeView.SignOffPortName.Visible) { // crewExperienceForAdminViewModeView.SignOffPortName.Visible (begin)
    <tr id="r_SignOffPortName" @Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_SignOffPortName"><template id="tpc_CrewExperienceForAdminViewMode_SignOffPortName">@Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.Caption)</template></span></td>
        <td data-name="SignOffPortName" @Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_SignOffPortName"><span id="el_CrewExperienceForAdminViewMode_SignOffPortName">
<span @Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.SignOffPortName.Visible (end) *@
@if (crewExperienceForAdminViewModeView.SignOffReason.Visible) { // crewExperienceForAdminViewModeView.SignOffReason.Visible (begin)
    <tr id="r_SignOffReason" @Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.RowAttributes)>
        <td class="@(crewExperienceForAdminViewModeView.TableLeftColumnClass)"><span id="elh_CrewExperienceForAdminViewMode_SignOffReason"><template id="tpc_CrewExperienceForAdminViewMode_SignOffReason">@Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.Caption)</template></span></td>
        <td data-name="SignOffReason" @Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.CellAttributes)>
<template id="tpx_CrewExperienceForAdminViewMode_SignOffReason"><span id="el_CrewExperienceForAdminViewMode_SignOffReason">
<span @Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.ViewAttributes)>
@Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.GetViewValue())</span>
</span></template></td>
    </tr>
} @* crewExperienceForAdminViewModeView.SignOffReason.Visible (end) *@
</table>
<div id="tpd_CrewExperienceForAdminViewModeview" class="ew-custom-template"></div>
<template id="tpm_CrewExperienceForAdminViewModeview">
<div id="ct_crewExperienceForAdminViewModeView">    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewPersonalDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "PERSONAL DATA" : "DATA PERSONAL")
            </a>     
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewDocumentForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "DOCUMENTS" : "DOKUMEN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewBankAccountForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "BANK ACCOUNT" : "REKENING BANK")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFamilyForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FAMILY" : "KELUARGA")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewFormalEducationForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "FORMAL EDUCATION" : "PENDIDIKAN FORMAL")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL CERTIFICATE / TEST" : "SERTIFIKAT / TES MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewCertificateForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "CERTIFICATES AND QUALIFICATIONS" : "SERTIFIKAT DAN KUALIFIKASI")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewExperienceForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "SEA EXPERIENCE" : "PENGALAMAN BERLAYAR")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewAppraisalForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "APPRAISALS" : "PENILAIAN")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewMedicalHistoryForAdminViewModeList")">
                @(CurrentLanguage == "en-US" ? "MEDICAL HISTORY" : "RIWAYAT MEDIS")
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@string.Concat(AppPath(), "CrewGeneralDataForAdminViewModeView")">
                @(CurrentLanguage == "en-US" ? "GENERAL" : "UMUM")
            </a>
        </li>
    </ul>  
    <div class="mb-2 row">
        <div class="col-sm-3">
            <div id="r_CompanyName" class="mb-2 row">
                <label for="x_CompanyName" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.CompanyName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.CompanyName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_CompanyName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_FlagName_CountryID" class="mb-2 row">
                <label for="x_FlagName_CountryID" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.FlagName_CountryID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.FlagName_CountryID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_FlagName_CountryID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_VesselName" class="mb-2 row">
                <label for="x_VesselName" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.VesselName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.VesselName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_VesselName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_MTVesselTypeID" class="mb-2 row">
                <label for="x_MTVesselTypeID" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.MTVesselTypeID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.MTVesselTypeID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_MTVesselTypeID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-3">
            <div id="r_GRT" class="mb-2 row">
                <label for="x_GRT" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.GRT.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.GRT.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_GRT"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_DWT" class="mb-2 row">
                <label for="x_DWT" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.DWT.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.DWT.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_DWT"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_MainEngine" class="mb-2 row">
                <label for="x_MainEngine" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.MainEngine.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.MainEngine.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_MainEngine"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_BHP" class="mb-2 row">
                <label for="x_BHP" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.BHP.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.BHP.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_BHP"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-3">
            <div id="r_DateFrom" class="mb-2 row">
                <label for="x_DateFrom" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.DateFrom.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.DateFrom.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_DateFrom"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_SignOnPortName" class="mb-2 row">
                <label for="x_SignOnPortName" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.SignOnPortName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.SignOnPortName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_SignOnPortName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_DateUntil" class="mb-2 row">
                <label for="x_DateUntil" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.DateUntil.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.DateUntil.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_DateUntil"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_SignOffPortName" class="mb-2 row">
                <label for="x_SignOffPortName" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.SignOffPortName.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.SignOffPortName.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_SignOffPortName"></slot>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="mb-2 row">
        <div class="col-sm-3">
            <div id="r_SignOffReason" class="mb-2 row">
                <label for="x_SignOffReason" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.SignOffReason.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.SignOffReason.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_SignOffReason"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_MTRankID" class="mb-2 row">
                <label for="x_MTRankID" class="col-form-label">@Html.Raw(crewExperienceForAdminViewModeView.MTRankID.Caption)</label>
                <div>
                    @{
                        if (string.IsNullOrEmpty(crewExperienceForAdminViewModeView.MTRankID.GetViewValue()))
                        {
                            @Html.Raw("&nbsp;");
                        }
                        else
                        {
                            <slot class="ew-slot" name="tpx_CrewExperienceForAdminViewMode_MTRankID"></slot>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div id="r_derived_Duration" class="mb-2 row">
                <label for="x_derived_Duration" class="col-form-label">
                    @(CurrentLanguage == "en-US" ? "Duration" : "Durasi")
                </label>
                <div>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
        </div>
    </div>
</div>
</template>
@{ crewExperienceForAdminViewModeView.CloseRecordset(); }
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewExperienceForAdminViewModeView.Rows)) };
    ew.applyTemplate("tpd_CrewExperienceForAdminViewModeview", "tpm_CrewExperienceForAdminViewModeview", "CrewExperienceForAdminViewModeview", "@(crewExperienceForAdminViewModeView.Export)", "CrewExperienceForAdminViewMode", ew.templateData.rows[0], @(crewExperienceForAdminViewModeView.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewExperienceForAdminViewModeView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!crewExperienceForAdminViewModeView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // Get the current URL
    const currentUrlObject = new URL(window.location.href);
    // get the current URL without Add or Edit for assigning active class in tabs
    const currentUrlWithoutAddEditListView = currentUrlObject.href.replace(/Add|Edit|List|View/g, "");
    // Create a new URLSearchParams object based on the current URL's search parameters
    const urlQueryParams = new URLSearchParams(currentUrlObject.search);
    // Extract the value of the crewID query parameter
    const currentlyEditedCrewID = urlQueryParams.get('crewID');
    const crewExperienceID = currentUrlObject.pathname.split('/').pop();
    const grtString = $('#r_GRT div span span').text().trim();
    const formattedGRT = parseInt(grtString).toLocaleString('id-ID', {
        style: 'decimal',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
    });
    $('#r_GRT div span span').text(formattedGRT);
    const dwtString = $('#r_DWT div span span').text().trim();
    const formattedDWT = parseInt(dwtString).toLocaleString('id-ID', {
        style: 'decimal',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
    });
    $('#r_DWT div span span').text(formattedDWT);
    const bhpString = $('#r_BHP div span span').text().trim();
    const formattedBHP = parseInt(bhpString).toLocaleString('id-ID', {
        style: 'decimal',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
    });
    $('#r_BHP div span span').text(formattedBHP);

    // Iterate over each anchor element inside the nav-tabs
    $(".nav-tabs .nav-item a").each(function() {
        const href = $(this).attr("href");
        const hrefWithoutAddEditListView = href.replace(/Add|Edit|List|View/g, "");
        // Check if the href contains current page's url
        if (currentUrlWithoutAddEditListView.includes(hrefWithoutAddEditListView)) {
            // add class and attribute
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
        }
        // Check if the href contains "Edit" or "Add"
        if (href.includes("ViewModeView")) {
            // Add "/" and the currently edited crew ID to the href
            const newHref = href + "/" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        } else if (href.includes("ViewModeList")) {
            // Add "?crewID=" and the currently edited crew ID to the href
            const newHref = href + "?crewID=" + currentlyEditedCrewID;
            // Set the updated href attribute value
            $(this).attr("href", newHref);
        }
    });

    // Target the ol element that has breadcrumb class
    const $breadCrumbOl = $('.breadcrumb').first();

    // Delete the ol element that has breadcrumb class
    $breadCrumbOl.remove();
    $('div.btn-toolbar.ew-toolbar').remove();
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    const parentUrl = ew.PATH_BASE;
    const adminAndEmployeeStatusApi = 'get-admin-and-employee-status';
    $.ajax({
        url: `${parentUrl}api/Registration/${adminAndEmployeeStatusApi}`,
        method: 'GET',
        data: {
            crewID: currentlyEditedCrewID
        },
        success: function(response) {
            if (response.success) {
                // Parse the data in the response
                const isAdmin = response.data.IsAdmin;
                const employeeStatus = response.data.EmployeeStatus;
                if (currentlyEditedCrewID === null) {
                    if (isAdmin) {
                        // redirect to list page with error message: record not found
                        if (employeeStatus === 'Candidate - Draft') {
                            window.location.replace(`${ew.PATH_BASE}RegistrationEdit/-1`);
                        } else if (employeeStatus === 'Candidate - Submitted') {
                            window.location.replace(`${ew.PATH_BASE}VWaitingForPdeReviewView/-1`);
                        }
                    } else {
                        window.location.replace(`${ew.PATH_BASE}index`);
                    }
                }
                if (employeeStatus === 'Candidate - Draft') {
                    const editButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Edit" : "Ubah",
                        class: "btn btn-default ew-btn me-3 primary-black-clr gray-bg", 
                        id: "btn-edit",
                        name: "btn-edit",
                        href: `${ew.PATH_BASE}CrewExperienceForAdminViewModeEdit/${crewExperienceID}?crewID=${currentlyEditedCrewID}`,
                    });
                    const deleteButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Delete" : "Hapus",
                        class: "btn btn-default ew-btn me-auto primary-red-bg primary-white-clr ew-action ew-delete", 
                        id: "btn-delete",
                        name: "btn-delete",
                        href: `${ew.PATH_BASE}CrewExperienceForAdminViewModeDelete/${crewExperienceID}`,
                        "data-ew-action": "inline-delete",
                        "data-caption": "Delete",
                    });
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewExperienceForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(editButton);
                    flexDiv.append(deleteButton);
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewExperienceForAdminViewModeview').append(buttonsDiv);
                } else if (employeeStatus === 'Candidate - Submitted') {
                    const backButton = $("<a></a>", { 
                        text: (selectedLanguage.id === 'en-US') ? "Back" : "Kembali",
                        class: "btn btn-default ew-btn ms-auto primary-red-bg primary-white-clr", 
                        id: "btn-back",
                        name: "btn-back",
                        href: `${ew.PATH_BASE}CrewExperienceForAdminViewModeList?crewID=${currentlyEditedCrewID}`,
                    });
                    const flexDiv = $("<div class='d-flex mb-3'></div>");
                    flexDiv.append(backButton);
                    const buttonsDiv = $("<div class='row ew-buttons'></div>");
                    buttonsDiv.append(flexDiv);
                    $('form#fCrewExperienceForAdminViewModeview').append(buttonsDiv);
                }
            } else {
                // Handle the error
                ew.showToast(response.errorMessage);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // Handle the error
            ew.showToast(errorThrown);
        }
    });
    const experienceDurationEndpoint = 'get-experience-duration-for-admin';
    $.ajax({
      url: `${parentUrl}api/Registration/${experienceDurationEndpoint}`,
      method: 'GET',
      data: {
        crewExperienceID: crewExperienceID
      },
      success: function(response) {
        if (response.success) {
          // Parse the data in the response
            const totalDays = response.data;
            const durationInYears = Math.floor(totalDays / 365);
            const durationInMonths = Math.floor((totalDays % 365) / 30);
            const durationInDays = (totalDays % 365) % 30;
            let formattedDuration = '';
            if (durationInYears > 0) {
                formattedDuration += `${durationInYears} Years`;
            }
            if (durationInMonths > 0) {
                if (formattedDuration.length > 0) {
                    formattedDuration += ' ';
                }
                formattedDuration += `${durationInMonths} Months`;
            }
            if (durationInDays > 0) {
                if (formattedDuration.length > 0) {
                    formattedDuration += ' ';
                }
                formattedDuration += `${durationInDays} Days`;
            }
            $('div#r_derived_Duration div').append($('<span>').text(formattedDuration));
        } else {
          // Handle the error
          ew.showToast(response.errorMessage);
        }
      },
      error: function(xhr, textStatus, errorThrown) {
        // Handle the error
        ew.showToast(errorThrown);
      }
    });
});
</script>
}
