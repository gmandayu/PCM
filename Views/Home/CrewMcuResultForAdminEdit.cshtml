@{
    // View
    View = this;

    // Check action result
    if (crewMcuResultForAdminEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!crewMcuResultForAdminEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@crewMcuResultForAdminEdit.ShowPageHeader()
@crewMcuResultForAdminEdit.ShowMessages()
<main class="edit">
<form name="fCrewMcuResultForAdminedit" id="fCrewMcuResultForAdminedit" class="@(crewMcuResultForAdminEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
<script>
var currentTable = @Html.Raw(ConvertToJson(crewMcuResultForAdminEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { CrewMcuResultForAdmin: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fCrewMcuResultForAdminedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCrewMcuResultForAdminedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["MTCrew_ID", [fields.MTCrew_ID.visible && fields.MTCrew_ID.required ? ew.Validators.required(fields.MTCrew_ID.caption) : null], fields.MTCrew_ID.isInvalid],
            ["McuDate", [fields.McuDate.visible && fields.McuDate.required ? ew.Validators.required(fields.McuDate.caption) : null, ew.Validators.datetime(fields.McuDate.clientFormatPattern)], fields.McuDate.isInvalid],
            ["McuExpirationDate", [fields.McuExpirationDate.visible && fields.McuExpirationDate.required ? ew.Validators.required(fields.McuExpirationDate.caption) : null, ew.Validators.datetime(fields.McuExpirationDate.clientFormatPattern)], fields.McuExpirationDate.isInvalid],
            ["HealthStatus", [fields.HealthStatus.visible && fields.HealthStatus.required ? ew.Validators.required(fields.HealthStatus.caption) : null], fields.HealthStatus.isInvalid],
            ["McuLocation", [fields.McuLocation.visible && fields.McuLocation.required ? ew.Validators.required(fields.McuLocation.caption) : null], fields.McuLocation.isInvalid],
            ["McuAttachment", [fields.McuAttachment.visible && fields.McuAttachment.required ? ew.Validators.fileRequired(fields.McuAttachment.caption) : null], fields.McuAttachment.isInvalid],
            ["McuScheduleDate", [fields.McuScheduleDate.visible && fields.McuScheduleDate.required ? ew.Validators.required(fields.McuScheduleDate.caption) : null], fields.McuScheduleDate.isInvalid],
            ["McuRemark", [fields.McuRemark.visible && fields.McuRemark.required ? ew.Validators.required(fields.McuRemark.caption) : null], fields.McuRemark.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "HealthStatus": @Html.Raw(crewMcuResultForAdminEdit.HealthStatus.ToClientList(crewMcuResultForAdminEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(crewMcuResultForAdminEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(crewMcuResultForAdminEdit.OldKeyName)" value="@Html.Raw(crewMcuResultForAdminEdit.OldKey)">
<div class="ew-edit-div d-none"><!-- page* -->
@if (crewMcuResultForAdminEdit.MTCrew_ID.Visible) { // crewMcuResultForAdminEdit.MTCrew_ID.Visible (begin)
    <div id="r_MTCrew_ID" @Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_MTCrew_ID" for="x_MTCrew_ID" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_MTCrew_ID">@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.Caption)@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_MTCrew_ID"><span id="el_CrewMcuResultForAdmin_MTCrew_ID">
<input type="@(crewMcuResultForAdminEdit.MTCrew_ID.InputTextType)" name="x_MTCrew_ID" id="x_MTCrew_ID" data-table="CrewMcuResultForAdmin" data-field="x_MTCrew_ID" value="@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.MTCrew_ID.PlaceHolder))" data-format-pattern="@(crewMcuResultForAdminEdit.MTCrew_ID.FormatPattern)"@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.EditAttributes) aria-describedby="x_MTCrew_ID_help">
@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.MTCrew_ID.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuDate.Visible) { // crewMcuResultForAdminEdit.McuDate.Visible (begin)
    <div id="r_McuDate" @Html.Raw(crewMcuResultForAdminEdit.McuDate.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuDate" for="x_McuDate" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuDate">@Html.Raw(crewMcuResultForAdminEdit.McuDate.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuDate.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuDate"><span id="el_CrewMcuResultForAdmin_McuDate">
<input type="@(crewMcuResultForAdminEdit.McuDate.InputTextType)" name="x_McuDate" id="x_McuDate" data-table="CrewMcuResultForAdmin" data-field="x_McuDate" value="@Html.Raw(crewMcuResultForAdminEdit.McuDate.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuDate.PlaceHolder))" data-format-pattern="@(crewMcuResultForAdminEdit.McuDate.FormatPattern)"@Html.Raw(crewMcuResultForAdminEdit.McuDate.EditAttributes) aria-describedby="x_McuDate_help">
@Html.Raw(crewMcuResultForAdminEdit.McuDate.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.McuDate.GetErrorMessage())</div>
@if (!crewMcuResultForAdminEdit.McuDate.ReadOnly && !crewMcuResultForAdminEdit.McuDate.Disabled && !crewMcuResultForAdminEdit.McuDate.EditAttrs.Is("readonly") && !crewMcuResultForAdminEdit.McuDate.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewMcuResultForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewMcuResultForAdminedit", "x_McuDate", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuDate.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuExpirationDate.Visible) { // crewMcuResultForAdminEdit.McuExpirationDate.Visible (begin)
    <div id="r_McuExpirationDate" @Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuExpirationDate" for="x_McuExpirationDate" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuExpirationDate">@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuExpirationDate"><span id="el_CrewMcuResultForAdmin_McuExpirationDate">
<input type="@(crewMcuResultForAdminEdit.McuExpirationDate.InputTextType)" name="x_McuExpirationDate" id="x_McuExpirationDate" data-table="CrewMcuResultForAdmin" data-field="x_McuExpirationDate" value="@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.EditValue)" placeholder="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuExpirationDate.PlaceHolder))" data-format-pattern="@(crewMcuResultForAdminEdit.McuExpirationDate.FormatPattern)"@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.EditAttributes) aria-describedby="x_McuExpirationDate_help">
@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.GetErrorMessage())</div>
@if (!crewMcuResultForAdminEdit.McuExpirationDate.ReadOnly && !crewMcuResultForAdminEdit.McuExpirationDate.Disabled && !crewMcuResultForAdminEdit.McuExpirationDate.EditAttrs.Is("readonly") && !crewMcuResultForAdminEdit.McuExpirationDate.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fCrewMcuResultForAdminedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fCrewMcuResultForAdminedit", "x_McuExpirationDate", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuExpirationDate.Visible (end) *@
@if (crewMcuResultForAdminEdit.HealthStatus.Visible) { // crewMcuResultForAdminEdit.HealthStatus.Visible (begin)
    <div id="r_HealthStatus" @Html.Raw(crewMcuResultForAdminEdit.HealthStatus.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_HealthStatus" for="x_HealthStatus" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_HealthStatus">@Html.Raw(crewMcuResultForAdminEdit.HealthStatus.Caption)@Html.Raw(crewMcuResultForAdminEdit.HealthStatus.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.HealthStatus.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_HealthStatus"><span id="el_CrewMcuResultForAdmin_HealthStatus">
    <select
        id="x_HealthStatus"
        name="x_HealthStatus"
        class="form-select ew-select@(crewMcuResultForAdminEdit.HealthStatus.IsInvalidClass)"
        data-select2-id="fCrewMcuResultForAdminedit_x_HealthStatus"
        data-table="CrewMcuResultForAdmin"
        data-field="x_HealthStatus"
        data-value-separator="@(crewMcuResultForAdminEdit.HealthStatus.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(crewMcuResultForAdminEdit.HealthStatus.PlaceHolder))"
        @Html.Raw(crewMcuResultForAdminEdit.HealthStatus.EditAttributes)>
        @(crewMcuResultForAdminEdit.HealthStatus.SelectOptionListHtml("x_HealthStatus"))
    </select>
    @Html.Raw(crewMcuResultForAdminEdit.HealthStatus.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.HealthStatus.GetErrorMessage())</div>
<script>
loadjs.ready("fCrewMcuResultForAdminedit", function() {
    var options = { name: "x_HealthStatus", selectId: "fCrewMcuResultForAdminedit_x_HealthStatus" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (fCrewMcuResultForAdminedit.lists.HealthStatus?.lookupOptions.length) {
        options.data = { id: "x_HealthStatus", form: "fCrewMcuResultForAdminedit" };
    } else {
        options.ajax = { id: "x_HealthStatus", form: "fCrewMcuResultForAdminedit", limit: 5 };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.CrewMcuResultForAdmin.fields.HealthStatus.selectOptions);
    ew.createSelect(options);
});
</script>
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.HealthStatus.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuLocation.Visible) { // crewMcuResultForAdminEdit.McuLocation.Visible (begin)
    <div id="r_McuLocation" @Html.Raw(crewMcuResultForAdminEdit.McuLocation.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuLocation" for="x_McuLocation" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuLocation">@Html.Raw(crewMcuResultForAdminEdit.McuLocation.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuLocation.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuLocation.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuLocation"><span id="el_CrewMcuResultForAdmin_McuLocation">
<input type="@(crewMcuResultForAdminEdit.McuLocation.InputTextType)" name="x_McuLocation" id="x_McuLocation" data-table="CrewMcuResultForAdmin" data-field="x_McuLocation" value="@Html.Raw(crewMcuResultForAdminEdit.McuLocation.EditValue)" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuLocation.PlaceHolder))" data-format-pattern="@(crewMcuResultForAdminEdit.McuLocation.FormatPattern)"@Html.Raw(crewMcuResultForAdminEdit.McuLocation.EditAttributes) aria-describedby="x_McuLocation_help">
@Html.Raw(crewMcuResultForAdminEdit.McuLocation.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.McuLocation.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuLocation.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuAttachment.Visible) { // crewMcuResultForAdminEdit.McuAttachment.Visible (begin)
    <div id="r_McuAttachment" @Html.Raw(crewMcuResultForAdminEdit.McuAttachment.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuAttachment" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuAttachment">@Html.Raw(crewMcuResultForAdminEdit.McuAttachment.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuAttachment.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuAttachment.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuAttachment"><span id="el_CrewMcuResultForAdmin_McuAttachment">
<div id="fd_x_McuAttachment" class="fileinput-button ew-file-drop-zone">
    <input
        type="file"
        id="x_McuAttachment"
        name="x_McuAttachment"
        class="form-control ew-file-input"
        title="@(crewMcuResultForAdminEdit.McuAttachment.Title)"
        lang="@(CurrentLanguageID)"
        data-table="CrewMcuResultForAdmin"
        data-field="x_McuAttachment"
        data-size="50"
        data-accept-file-types="@(crewMcuResultForAdminEdit.McuAttachment.AcceptFileTypes)"
        data-max-file-size="@(crewMcuResultForAdminEdit.McuAttachment.UploadMaxFileSize)"
        data-max-number-of-files="null"
        data-disable-image-crop="@(crewMcuResultForAdminEdit.McuAttachment.ImageCropper ? 0 : 1)"
        aria-describedby="x_McuAttachment_help"
        @Html.Raw((crewMcuResultForAdminEdit.McuAttachment.ReadOnly || crewMcuResultForAdminEdit.McuAttachment.Disabled) ? " disabled" : "")
        @Html.Raw(crewMcuResultForAdminEdit.McuAttachment.EditAttributes)
    >
    <div class="text-muted ew-file-text">@Html.Raw(Language.Phrase("ChooseFile"))</div>
</div>
@Html.Raw(crewMcuResultForAdminEdit.McuAttachment.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.McuAttachment.GetErrorMessage())</div>
<input type="hidden" name="fn_x_McuAttachment" id= "fn_x_McuAttachment" value="@(crewMcuResultForAdminEdit.McuAttachment.Upload.FileName)">
<input type="hidden" name="fa_x_McuAttachment" id= "fa_x_McuAttachment" value="@(Post("fa_x_McuAttachment") == "0" ? "0" : "1")">
<table id="ft_x_McuAttachment" class="table table-sm float-start ew-upload-table"><tbody class="files"></tbody></table>
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuAttachment.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuScheduleDate.Visible) { // crewMcuResultForAdminEdit.McuScheduleDate.Visible (begin)
    <div id="r_McuScheduleDate" @Html.Raw(crewMcuResultForAdminEdit.McuScheduleDate.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuScheduleDate" for="x_McuScheduleDate" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuScheduleDate">@Html.Raw(crewMcuResultForAdminEdit.McuScheduleDate.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuScheduleDate.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuScheduleDate.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuScheduleDate"><span id="el_CrewMcuResultForAdmin_McuScheduleDate">
<span @Html.Raw(crewMcuResultForAdminEdit.McuScheduleDate.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(crewMcuResultForAdminEdit.McuScheduleDate.EditValue)))"></span>
<input type="hidden" data-table="CrewMcuResultForAdmin" data-field="x_McuScheduleDate" data-hidden="1" name="x_McuScheduleDate" id="x_McuScheduleDate" value="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuScheduleDate.CurrentValue))">
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuScheduleDate.Visible (end) *@
@if (crewMcuResultForAdminEdit.McuRemark.Visible) { // crewMcuResultForAdminEdit.McuRemark.Visible (begin)
    <div id="r_McuRemark" @Html.Raw(crewMcuResultForAdminEdit.McuRemark.RowAttributes)>
        <label id="elh_CrewMcuResultForAdmin_McuRemark" for="x_McuRemark" class="@(crewMcuResultForAdminEdit.LeftColumnClass)"><template id="tpc_CrewMcuResultForAdmin_McuRemark">@Html.Raw(crewMcuResultForAdminEdit.McuRemark.Caption)@Html.Raw(crewMcuResultForAdminEdit.McuRemark.Required ? Language.Phrase("FieldRequiredIndicator") : "")</template></label>
        <div class="@(crewMcuResultForAdminEdit.RightColumnClass)"><div @Html.Raw(crewMcuResultForAdminEdit.McuRemark.CellAttributes)>
<template id="tpx_CrewMcuResultForAdmin_McuRemark"><span id="el_CrewMcuResultForAdmin_McuRemark">
<input type="@(crewMcuResultForAdminEdit.McuRemark.InputTextType)" name="x_McuRemark" id="x_McuRemark" data-table="CrewMcuResultForAdmin" data-field="x_McuRemark" value="@Html.Raw(crewMcuResultForAdminEdit.McuRemark.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuRemark.PlaceHolder))" data-format-pattern="@(crewMcuResultForAdminEdit.McuRemark.FormatPattern)"@Html.Raw(crewMcuResultForAdminEdit.McuRemark.EditAttributes) aria-describedby="x_McuRemark_help">
@Html.Raw(crewMcuResultForAdminEdit.McuRemark.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(crewMcuResultForAdminEdit.McuRemark.GetErrorMessage())</div>
</span></template>
</div></div>
    </div>
} @* crewMcuResultForAdminEdit.McuRemark.Visible (end) *@
</div><!-- /page* -->
    <input type="hidden" data-table="CrewMcuResultForAdmin" data-field="x_McuResult_ID" data-hidden="1" name="x_McuResult_ID" id="x_McuResult_ID" value="@Html.Raw(HtmlEncode(crewMcuResultForAdminEdit.McuResult_ID.CurrentValue))">
<div id="tpd_CrewMcuResultForAdminedit" class="ew-custom-template"></div>
<template id="tpm_CrewMcuResultForAdminedit">
<div id="ct_crewMcuResultForAdminEdit"><!-- START CUSTOM TEMPLATE -->
<div class="main-container row">
    <!-- Crew Information -->
    <div class="card crew-personal-information-container mb-4">
        <div class="card-body">
            <h6 class="card-title fw-bold text-uppercase col-sm-12 mb-4">
                @(CurrentLanguage == "en-US" ? "Crew Candidate Information" : "Informasi Kandidat Kru")
            </h6>
            <div class="mb-2 row">
                <div class="col-sm-4">
                    <div id="r_crew_RequiredPhoto" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Pass Photo 3 x 4" : "Pas Foto 3 x 4")
                        </label>
                        <div></div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_IndividualCodeNumber" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Individual's Seafarer ID" : "ID Pelaut Individu")
                        </label>
                        <div></div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_FullName" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Full Name (Same As ID Card)" : "Nama Lengkap (Sesuai KTP)")
                        </label>
                        <div></div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-4">
                    <div id="r_crew_VisaPhoto" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Visa Photo" : "Foto Visa")
                        </label>
                        <div></div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_RankAppliedFor" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Rank Applied For" : "Rank Yang Akan Dipilih")
                        </label>
                        <div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_WillAcceptLowRank" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Willing To Accept Lower Rank" : "Bersedia Menerima Rank Lebih Rendah")
                        </label>
                        <div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2 row">
                <div class="col-sm-4">
                    <div id="r_crew_AvailableFrom" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Available From" : "Bersedia Bekerja Dari")
                        </label>
                        <div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_AvailableUntil" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Available Until" : "Bersedia Bekerja Sampai")
                        </label>
                        <div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_EmployeeStatus" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Employee Status" : "Status Karyawan")
                        </label>
                        <div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Crew Medical Checkup -->
    <div class="card crew-mcu-information-container mb-4">
        <div class="card-body">
            <h6 class="card-title fw-bold text-uppercase col-sm-12 mb-4">
                @(CurrentLanguage == "en-US" ? "Crew Candidate Medical Checkup Information" : "Informasi Pemeriksaan Medis Calon Kru")
            </h6>
            <div class="row crew-mcu-information-content mb-2">
                <div class="col-sm-4">
                    <div id="r_crew_McuScheduleDateTime" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Medical Checkup Schedule" : "Jadual Pemeriksaan Medis")
                        </label>
                        <div></div>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuScheduleDate"></slot>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_McuDate" class="mb-2 row">
                        <label class="col-form-label">
                            <!-- @Html.Raw(crewMcuResultForAdminEdit.McuDate.Caption) -->
                            @(CurrentLanguage == "en-US" ? "Medical Checkup Date" : "Tanggal Pemeriksaan Medis")
                        </label>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuDate"></slot>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_McuExpirationDate" class="mb-2 row">
                        <label class="col-form-label">
                            <!-- @Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.Caption) -->
                            @(CurrentLanguage == "en-US" ? "Medical Checkup Expiration" : "Tanggal Kadaluarsa Pemeriksaan Medis")
                        </label>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuExpirationDate"></slot>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row crew-mcu-information-content mb-2">
                <div class="col-sm-4">
                    <div id="r_crew_McuLocation" class="mb-2 row">
                        <label class="col-form-label">
                            <!-- @Html.Raw(crewMcuResultForAdminEdit.McuDate.Caption) -->
                            @(CurrentLanguage == "en-US" ? "Medical Checkup Location" : "Lokasi Pemeriksaan Medis")
                        </label>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuLocation"></slot>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_HealthStatus" class="mb-2 row">
                        <label class="col-form-label">
                            <!-- @Html.Raw(crewMcuResultForAdminEdit.McuDate.Caption) -->
                            @(CurrentLanguage == "en-US" ? "Health Status" : "Status Kesehatan")
                        </label>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_HealthStatus"></slot>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div id="r_crew_McuRemark" class="mb-2 row">
                        <label class="col-form-label">
                            @(CurrentLanguage == "en-US" ? "Medical Checkup Remark" : "Catatan Pemeriksaan Medis")
                        </label>
                        <div>
                            <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuRemark"></slot>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row crew-mcu-information-content mb-2">
                <div class="col-sm-12">
                        <div id="r_crew_McuAttachment" class="mb-2 row">
                            <label class="col-form-label">
                                <!-- @Html.Raw(crewMcuResultForAdminEdit.McuExpirationDate.Caption) -->
                                @(CurrentLanguage == "en-US" ? "Attachment" : "Lampiran")
                            </label>
                            <div>
                                <slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_McuAttachment"></slot>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    <div id="r_MTCrew_ID" class="mb-2 row">
        <label for="x_MTCrew_ID" class="col-sm-2 col-form-label">@Html.Raw(crewMcuResultForAdminEdit.MTCrew_ID.Caption)</label>
        <div class="col-sm-10"><slot class="ew-slot" name="tpx_CrewMcuResultForAdmin_MTCrew_ID"></slot></div>
    </div>
</div>
<!-- Modal Dialog -->
<div id="accept-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="ew-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="ew-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Accept Crew Candidate" : "Terima Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @(CurrentLanguage == "en-US" ? "Do you want to accept the crew candidate as an employee at PT Pertamina International Shipping?" : "Apakah Anda ingin menerima kandidat kru sebagai pegawai di PT Pertamina International Shipping?")
            </div>
            <div class="modal-footer">
                <button class="btn btn-success ew-btn" id="btn-accept" type="button">
                    @(CurrentLanguage == "en-US" ? "Accept" : "Terima")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<div id="reject-modal-dialog" class="modal" aria-hidden="true" data-bs-backdrop="static" tabindex="-1" aria-labelledby="ew-modal-dialog-title" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-sm-down modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="ew-modal-dialog-title" class="modal-title">
                    @(CurrentLanguage == "en-US" ? "Reject Crew Candidate" : "Tolak Kandidat Kru")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reject-form" class="ew-form ew-add-form" autocomplete="off">
                    <div id="r_RejectedReason" class="row">
                        <label for="x_RejectedReason" class="col-sm-4 col-form-label ew-label">
                            @(CurrentLanguage == "en-US" ? "Reject Reason" : "Alasan Ditolak")
                        </label>
                        <div class="col-sm-8">
                            <div>
                                <span id="el_RejectedReason">
                                    <textarea
                                        name="x_RejectedReason"
                                        id="x_RejectedReason"
                                        cols="50"
                                        rows="4"
                                        maxlength="255"
                                        placeholder="Reject Reason"
                                        class="form-control"
                                    ></textarea>
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger ew-btn" id="btn-reject" type="button">
                    @(CurrentLanguage == "en-US" ? "Reject" : "Tolak")
                </button>
                <button class="btn btn-default ew-btn" id="btn-cancel" type="button" data-bs-dismiss="modal">
                    @(CurrentLanguage == "en-US" ? "Cancel" : "Batal")
                </button>
            </div>
        </div>
    </div>
</div>
<!-- END CUSTOM TEMPLATE --></div>
</template>
@{ crewMcuResultForAdminEdit.CloseRecordset(); }
@Html.Raw(crewMcuResultForAdminEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(crewMcuResultForAdminEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fCrewMcuResultForAdminedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fCrewMcuResultForAdminedit" data-href="@AppPath(crewMcuResultForAdminEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(crewMcuResultForAdminEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
<script class="ew-apply-template">
loadjs.ready(ew.applyTemplateId, function() {
    var $ = jQuery;
    ew.templateData = { rows: @Html.Raw(ConvertToJson(crewMcuResultForAdminEdit.Rows)) };
    ew.applyTemplate("tpd_CrewMcuResultForAdminedit", "tpm_CrewMcuResultForAdminedit", "CrewMcuResultForAdminedit", "@(crewMcuResultForAdminEdit.Export)", "CrewMcuResultForAdmin", ew.templateData.rows[0], @(crewMcuResultForAdminEdit.IsModal ? "true" : "false"));
    loadjs.done("customtemplate");
});
</script>
</main>
@crewMcuResultForAdminEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("CrewMcuResultForAdmin");
});
</script>
<script>
loadjs.ready("load", function() {
    // Startup script
    // Write your table-specific startup script here
    // document.write("page loaded");

    // START CUSTOM SCRIPT
    $('div#r_MTCrew_ID').hide();

    // Get current URL
    const currentUrlObject = new URL(window.location.href);

    // Get current edited McuResult_ID from current url
    const currentMcuResultID = parseInt(currentUrlObject.pathname.split('/').pop());
    const selectedLanguage = ew.vars['languages']['languages'].filter(obj => obj.selected === true)[0];
    $('#btn-action').text((selectedLanguage.id==='en-US') ? `${ew.language.phrase("SaveBtn")} as Draft` : `${ew.language.phrase("SaveBtn")} sebagai Draft`).addClass('me-3 primary-black-clr gray-bg');
    $('.ew-buttons > .col-sm-10').removeClass('col-sm-10').addClass('d-flex mb-3');
    $('.ew-buttons > .offset-sm-2').removeClass('offset-sm-2');
    $('.breadcrumb li.breadcrumb-item a:not(.ew-home)').attr('href', `${ew.PATH_BASE}McuResultList`);
    const parentUrl = ew.PATH_BASE;
    const crewInfoApi = 'get-crew-info-for-mcu-result';
    $.ajax({
        url: `${parentUrl}api/Registration/${crewInfoApi}`,
        method: 'GET',
        data: {
            mcuResultID: currentMcuResultID
        },
        success: function (response) {
            if (response.success) {
                // Parse data in response
                const crewData = response.data;
                if(crewData.FullName !== '') {
                    $('div#r_crew_FullName div').append($('<span>').text(crewData.FullName));
                }
                else {
                    $('div#r_crew_FullName div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.EmployeeStatus !== '') {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').text(crewData.EmployeeStatus));
                } else {
                    $('div#r_crew_EmployeeStatus div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.IndividualCodeNumber !== '') {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').text(crewData.IndividualCodeNumber));
                    if (crewData.RequiredPhoto !== '') {
                        const anchor = $("<a></a>", {
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement",
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const img = $("<img>", {
                            class: "ew-image ew-lazy",
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.RequiredPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_RequiredPhoto div').append(span);
                    } else {
                        $('div#r_crew_RequiredPhoto div').append($('<span>').html('&nbsp;'));
                    }
                    if (crewData.VisaPhoto !== '') {
                        const anchor = $("<a></a>", {
                            title: (selectedLanguage.id === 'en-US') ? "Click to view image" : "Klik untuk melihat gambar",
                            class: "ew-lightbox cboxElement",
                            target: "_blank",
                            href: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const img = $("<img>", {
                            class: "ew-image ew-lazy",
                            loading: "lazy",
                            style: "width: 120px",
                            src: `${parentUrl}uploads/${crewData.IndividualCodeNumber}/${crewData.VisaPhoto}`,
                        });
                        const span = $('<span>');
                        anchor.append(img);
                        span.append(anchor);
                        $('div#r_crew_VisaPhoto div').append(span);
                    } else {
                        $('div#r_crew_VisaPhoto div').append($('<span>').html('&nbsp;'));
                    }
                } else {
                    $('div#r_crew_IndividualCodeNumber div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.RankAppliedFor !== '') {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').text(crewData.RankAppliedFor));
                } else {
                    $('div#r_crew_RankAppliedFor div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.WillAcceptLowRank !== '') {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').text(crewData.WillAcceptLowRank));
                } else {
                    $('div#r_crew_WillAcceptLowRank div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableFrom !== '') {
                    $('div#r_crew_AvailableFrom div').append($('<span>').text(crewData.AvailableFrom));
                } else {
                    $('div#r_crew_AvailableFrom div').append($('<span>').html('&nbsp;'));
                }
                if (crewData.AvailableUntil !== '') {
                    $('div#r_crew_AvailableUntil div').append($('<span>').text(crewData.AvailableUntil));
                } else {
                    $('div#r_crew_AvailableUntil div').append($('<span>').html('&nbsp;'));
                }
                if(crewData.RankAppliedFor !== '' && crewData.EmployeeStatus !== '' && crewData.MTCrew_ID !== '') {
                    // initialize date time picker
                    const format = "dd MMM yyyy HH:mm:00zzz";
                    const options = {
                        localization: {
                            locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                            hourCycle: format.match(/H/) ? "h24" : "h12",
                            format,
                            ...ew.language.phrase("datetimepicker")
                        },
                        display: {
                            icons: {
                                previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                                next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                            },
                            components: {
                                hours: !!format.match(/h/i),
                                minutes: !!format.match(/m/),
                                seconds: !!format.match(/s/i)
                            },
                            theme: ew.isDark() ? "dark" : "auto"
                        },
                        defaultDate: new Date(new Date().setHours(8, 0, 0)).toISOString(),
                    };

                    // Format timezone offset as needed
                    function formatTimezoneOffset(offset) {
                        const hours = Math.floor(Math.abs(offset) / 60);
                        const sign = offset < 0 ? '+' : '-';
                        return ' GMT ' + sign + hours;
                    }

                    // Helper function to add leading zero to single-digit numbers
                    function addLeadingZero(num) {
                        return num < 10 ? '0' + num : num;
                    }

                    // Replace "zzz" with the formatted timezone offset
                    function replaceTimezoneOffset(str, offset) {
                        return str.replace('zzz', offset);
                    }
                    const invokeFinalAcceptModalButton = $('<button/>', {
                        class: 'btn btn-default ew-btn primary-green-bg primary-white-clr me-3',
                        name: 'btn-invoke-final-accept-modal',
                        id: 'btn-invoke-final-accept-modal',
                        type: 'button',
                        text: (selectedLanguage.id === 'en-US') ? 'Accept' : 'Terima'
                    });
                    const invokeRejectModalButton = $('<button/>', {
                        class: 'btn btn-danger ew-btn primary-white-clr me-3',
                        name: 'btn-invoke-reject-modal',
                        id: 'btn-invoke-reject-modal',
                        type: 'button',
                        text: (selectedLanguage.id === 'en-US') ? 'Reject' : 'Tolak'
                    });
                    $('#btn-action').after(invokeFinalAcceptModalButton);
                    $('#btn-invoke-final-accept-modal').after(invokeRejectModalButton);

                    // Button click event
                    $('#btn-invoke-final-accept-modal').click(function () {
                        $('#accept-modal-dialog').modal('show');
                    });
                    $('#btn-invoke-reject-modal').click(function () {
                        $('#reject-modal-dialog').modal('show');
                    });

                    // Pengecekan untuk tombol Accept dan Reject aktif atau nonaktif.
                    const healthStatusCheck =  document.getElementById("select2-x_HealthStatus-container").innerText;
                    const mcuExpirationDateCheck = document.getElementById("x_McuExpirationDate").value;
                    const mcuDateCheck = document.getElementById("x_McuDate").value;
                    const mcuLocationCheck = document.getElementById("x_McuLocation").value;
                    if(mcuExpirationDateCheck === '' || mcuDateCheck === '' || mcuLocationCheck === '') {
                        $("#btn-invoke-final-accept-modal").prop("disabled", true);
                        $("#btn-invoke-reject-modal").prop("disabled", true);
                    }
                    else {
                        $("#btn-invoke-final-accept-modal").prop("disabled", false);
                        $("#btn-invoke-reject-modal").prop("disabled", false);
                        if (healthStatusCheck === "Unfit Temporary" || healthStatusCheck === "Unfit Permanent") {
                            $("#btn-invoke-final-accept-modal").prop("disabled", true);
                        } else if (healthStatusCheck === "Fit To Work" || healthStatusCheck === "Fit With Note") {
                            $("#btn-invoke-reject-modal").prop("disabled", true);
                        }
                    }
                    const acceptFinalCrewApiUrl = "accept-single-crew-final";
                    $("#btn-accept").click(function() {
                        const currentDate = new Date();
                        const finalAcceptDateTimeValue = currentDate.toISOString();
                        const acceptSingleFinalRequest = {
                            finalAcceptDateTime: finalAcceptDateTimeValue,
                            crewIDArray: parseInt(crewData.ID),
                        };
                        $.ajax({
                            url: `${parentUrl}api/Registration/${acceptFinalCrewApiUrl}`,
                            method: "POST",
                            data: JSON.stringify(acceptSingleFinalRequest),
                            contentType: "application/json",
                            success: function(response) {
                                if(response.success) {
                                    $('#accept-modal-dialog').modal('hide');
                                    let successMessage = '';
                                    if(selectedLanguage.id === 'en-US') {
                                        successMessage = `Success: Crew accepted at ${finalAcceptDateTimeValue}!`;
                                    } else {
                                        successMessage = `Berhasil: Kru diterima pada ${finalAcceptDateTimeValue}!`;
                                    }
                                    const baseUrl = new URL(window.location.href).origin;
                                    const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}McuResultList`);
                                    const encodedSuccessMessage = encodeURIComponent(successMessage);
                                    const params = new URLSearchParams(targetUrl.search);
                                    params.set('successMessage', encodedSuccessMessage);
                                    targetUrl.search = params.toString();
                                    window.location.href = targetUrl.href;
                                } else {
                                    $('#accept-modal-dialog').modal('hide');
                                    const errorMessage = response.errorMessage;
                                    ew.showToast(errorMessage);
                                }
                            },
                            error: function(xhr, textStatus, errorThrown) {
                                $('#accept-modal-dialog').modal('hide');
                                ew.showToast(errorThrown);
                            }
                        });
                    });
                    const rejectCrewFinalApiUrl = "reject-final-crew";
                    $("#btn-reject").click(function() {
                        const rejectedReasonValue = $('#x_RejectedReason').val();
                        const rejectedReasonCaption = $(`label[for="x_RejectedReason"]`).text();
                        if (rejectedReasonValue == '') {
                            if (selectedLanguage.id === 'en-US') {
                                ew.showToast(`Please enter required field - ${rejectedReasonCaption}`);
                            } else {
                                ew.showToast(`Masukkan input yang dibutuhkan - ${rejectedReasonCaption}`);
                            }
                        } else {
                            const rejectFinalRequest = {
                                rejectReason: rejectedReasonValue,
                                crewID: parseInt(crewData.ID),
                            };
                            $.ajax({
                                method: "POST",
                                url: `${parentUrl}api/Registration/${rejectCrewFinalApiUrl}`,
                                data: JSON.stringify(rejectFinalRequest),
                                contentType: "application/json",
                                success: function(response) {
                                    if (response.success) {
                                        $('#reject-modal-dialog').modal('hide');
                                        let successMessage = '';
                                        if (selectedLanguage.id === 'en-US') {
                                            successMessage = `Add ${rejectedReasonCaption} Successful`;
                                        } else {
                                            successMessage = `Menambahkan ${rejectedReasonCaption} Berhasil`;
                                        }
                                        const baseUrl = new URL(window.location.href).origin;
                                        const targetUrl = new URL(`${baseUrl}${ew.PATH_BASE}McuResultList`);
                                        const encodedSuccessMessage = encodeURIComponent(successMessage);
                                        const params = new URLSearchParams(targetUrl.search);
                                        params.set('successMessage', encodedSuccessMessage);
                                        targetUrl.search = params.toString();
                                        window.location.href = targetUrl.href;
                                    } else {
                                        $('#reject-modal-dialog').modal('hide');
                                        const errorMessage = response.errorMessage;
                                        ew.showToast(errorMessage);
                                    }
                                },
                                error: function(xhr, textStatus, errorThrown) {
                                    $('#reject-modal-dialog').modal('hide');
                                    ew.showToast(errorThrown);
                                }
                            });
                        }
                    });
                }
            } else {
                // Error handling
                ew.showToast(response.errorMessage);
            }
        },
        error: function (xhr, textStatus, errorThrown) {
            // Error handling
            ew.showToast(errorThrown);
        }
    });
});
</script>
