@{
    // View
    View = this;

    // Check action result
    if (mtDocumentAdd.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtDocumentAdd.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(mtDocumentAdd.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { MTDocument: currentTable } });
var currentPageID = ew.PAGE_ID = "add";
var currentForm;
var fMTDocumentadd;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fMTDocumentadd")
        .setPageId("add")

        // Add fields
        .setFields([

            ["_Type", [fields._Type.visible && fields._Type.required ? ew.Validators.required(fields._Type.caption) : null], fields._Type.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtDocumentAdd.ShowPageHeader()
@mtDocumentAdd.ShowMessages()
<form name="fMTDocumentadd" id="fMTDocumentadd" class="@(mtDocumentAdd.FormClassName)" action="@AppPath(CurrentPageName())" method="post" autocomplete="on">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(mtDocumentAdd.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtDocumentAdd.OldKeyName)" value="@Html.Raw(mtDocumentAdd.OldKey)">
<div class="ew-add-div"><!-- page* -->
@if (mtDocumentAdd._Type.Visible) { // mtDocumentAdd._Type.Visible (begin)
    <div id="r__Type" @Html.Raw(mtDocumentAdd._Type.RowAttributes)>
        <label id="elh_MTDocument__Type" for="x__Type" class="@(mtDocumentAdd.LeftColumnClass)">@Html.Raw(mtDocumentAdd._Type.Caption)@Html.Raw(mtDocumentAdd._Type.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtDocumentAdd.RightColumnClass)"><div @Html.Raw(mtDocumentAdd._Type.CellAttributes)>
<span id="el_MTDocument__Type">
<input type="@(mtDocumentAdd._Type.InputTextType)" name="x__Type" id="x__Type" data-table="MTDocument" data-field="x__Type" value="@Html.Raw(mtDocumentAdd._Type.EditValue)" size="30" maxlength="30" placeholder="@Html.Raw(HtmlEncode(mtDocumentAdd._Type.PlaceHolder))" data-format-pattern="@(mtDocumentAdd._Type.FormatPattern)"@Html.Raw(mtDocumentAdd._Type.EditAttributes) aria-describedby="x__Type_help">
@Html.Raw(mtDocumentAdd._Type.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtDocumentAdd._Type.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtDocumentAdd._Type.Visible (end) *@
</div><!-- /page* -->
@{ mtDocumentAdd.CloseRecordset(); }
@Html.Raw(mtDocumentAdd.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtDocumentAdd.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fMTDocumentadd">@Html.Raw(Language.Phrase("AddBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fMTDocumentadd" data-href="@AppPath(mtDocumentAdd.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtDocumentAdd.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@mtDocumentAdd.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("MTDocument");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
